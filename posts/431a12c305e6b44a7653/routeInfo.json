{"template":"__react_static_root__/src/components/QiitaPost","sharedHashesByProp":{},"data":{"post":{"rendered_body":"\n<h1>\n<span id=\"最初に\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%88%9D%E3%81%AB\"><i class=\"fa fa-link\"></i></a>最初に</h1>\n\n<ul>\n<li>最近ドットインストールのマイナーな動画を見るのにはまっています。</li>\n<li>聞いたことあるけどどんな技術だっけ</li>\n<li>そんなレッスンを私的にまとめました</li>\n<li>全部は載せてません(phpとかjsとかいっぱいあったりするから)</li>\n<li>蛇足解説とかいれます</li>\n<li>\n<code>dotinstall</code> <code>wikipedia</code> <code>me</code>と引用元はいれます</li>\n</ul>\n\n<h4>\n<span id=\"個人的におすすめ\" class=\"fragment\"></span><a href=\"#%E5%80%8B%E4%BA%BA%E7%9A%84%E3%81%AB%E3%81%8A%E3%81%99%E3%81%99%E3%82%81\"><i class=\"fa fa-link\"></i></a>個人的におすすめ</h4>\n\n<ul>\n<li>jekyll -&gt; Markdown記法でのブログ構築などが楽</li>\n<li>Atom -&gt; Dotinstall拡張があって動画見ながらコーディングできるってよ</li>\n</ul>\n\n<h2>\n<span id=\"html入門\" class=\"fragment\"></span><a href=\"#html%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>HTML入門</h2>\n\n<blockquote>\n<p>ホームページやウェブサービスの画面を作る際に必要な、構造的な文書を書く方法について学びます。 <code>dotinstall</code><br>\nウェブ上の文書を記述するためのマークアップ言語である。文章の中に記述することでさまざまな機能を記述設定することができる。 <code>wikipedia</code><br>\nいわゆるホームページの文章の中がこれです！ <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"css入門\" class=\"fragment\"></span><a href=\"#css%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>CSS入門</h2>\n\n<blockquote>\n<p>ホームページの見た目を制御することができるCSSについて基本的な使い方を学んでいきます。 <code>dotinstall</code><br>\nHTML、XMLの表示レイアウトなどの修飾を指定するのための仕様。 <code>wikipedia</code><br>\nHPの色などのスタイルを決める部分。この部分は大きい文字でとか目立たせたいから赤色とか設定する。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"css3入門\" class=\"fragment\"></span><a href=\"#css3%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>CSS3入門</h2>\n\n<blockquote>\n<p>ウェブページの見た目を規定するCSSの最新バージョンであるCSS3について学んでいきます。 <code>dotinstall</code><br>\nHTML や XML の要素をどのように修飾（表示）するかを指示する、W3Cによる仕様の一つ。 <code>wikipedia</code><br>\ncssの進化版。できることが増えた。HTML5+CSS3ができたらホームページは作れる！ <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"javascript入門\" class=\"fragment\"></span><a href=\"#javascript%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>JavaScript入門</h2>\n\n<blockquote>\n<p>主にブラウザに実装されているJavaScriptについて、基本的な使い方を学んでいきます。 <code>dotinstall</code><br>\nJavaScriptとは、プログラミング言語のひとつである。実行環境が主にウェブブラウザに実装され、動的なウェブサイト構築や、リッチインターネットアプリケーションなど高度なユーザインタフェースの開発に用いられる。 <code>wikipedia</code><br>\nHPのクリックしたら画面の色が変わったりとか、メニューが飛び出てきたとか、そういう動きをつけるのに便利！ <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"jquery入門\" class=\"fragment\"></span><a href=\"#jquery%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>jQuery入門</h2>\n\n<blockquote>\n<p>JavaScriptをより簡単に扱うためのライブラリであるjQueryについて、その基本的な使い方を学びます。 <code>dotinstall</code><br>\nウェブブラウザ用のJavaScriptコードをより容易に記述できるようにするために設計された軽量なJavaScriptライブラリである。 <code>wikipedia</code><br>\njavascriptよりコードを書く量が減って便利。すごく。 <code>me</code></p>\n</blockquote>\n\n<h3>\n<span id=\"ここまで私見\" class=\"fragment\"></span><a href=\"#%E3%81%93%E3%81%93%E3%81%BE%E3%81%A7%E7%A7%81%E8%A6%8B\"><i class=\"fa fa-link\"></i></a>ここまで私見</h3>\n\n<p>HTML5 + CSS3 + JavaScript(jQuery)ができたらフロントエンドエンジニアにレベルアップ。フロントはだいたいなんでもできる。その先はphpも覚えてバックエンドも少しかじるか、JavaScript系(react, Angular.js, Node.js)と発展系はたくさんあるので勉強にことかかない。HTMLとCSSとレスポンシブデザイン(現在パソコンとスマホのアクセス数が同じくらいになってるので、モバイルファースト、はやり)を極めてもいい。全サイトの25%を占めるとかいう噂のWordPressができるようになってもいい。勉強の毎日。</p>\n\n<h2>\n<span id=\"bootstrap-30入門\" class=\"fragment\"></span><a href=\"#bootstrap-30%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Bootstrap 3.0入門</h2>\n\n<blockquote>\n<p>モダンなサイトが簡単に作れるCSSフレームワーク、Bootstrapについて基本的な使い方を見ていきます。 <code>dotinstall</code><br>\n ウェブサイトやWebアプリケーションを作成するフロントエンドWebアプリケーションフレームワークである。 <code>wikipedia</code><br>\ncssとか書かなくても、クラスを'btn'ってやったりすると、あら不思議、きれいなほんとと色とスタイルに整えてくれる！(難点はbootstrapを使うとみんな同じデザインっぽくみえる。短期間でぱぱっとサイト作りたいときとかよい。) <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"flexbox入門\" class=\"fragment\"></span><a href=\"#flexbox%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Flexbox入門</h2>\n\n<blockquote>\n<p>複雑なレイアウトをシンプルに記述できるCSSFlexibleBoxLayoutについて見ていきます。 <code>dotinstall</code><br>\nなかった。。。 <code>wikipedia</code><br>\nレスポンシブとの親和性も高いということもあって、早めに使いこなせるようになっておくといいでしょう！ <code>lig</code><br>\nボックスがBootstrapのカラムに似た印象を感じた。固定幅(200px)と可変幅(auto, flex: 1;)のボックスが横並びになるのいい！これ知らなかったからwebkitのcalcで(100%-200px)とか書いてた。World Wide Web Consortium (W3C) がだしてるっぽい、ようするにWeb標準? <code>me</code></p>\n</blockquote>\n\n<h3>\n<span id=\"ここまで私見-1\" class=\"fragment\"></span><a href=\"#%E3%81%93%E3%81%93%E3%81%BE%E3%81%A7%E7%A7%81%E8%A6%8B-1\"><i class=\"fa fa-link\"></i></a>ここまで私見</h3>\n\n<p>レスポンシブデザインにする技術は少しずつ楽になってきてるのかな？<br>\nFlexboxなんてSCSSみたいなもんだと思ってました。</p>\n\n<h2>\n<span id=\"cloud9入門\" class=\"fragment\"></span><a href=\"#cloud9%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Cloud9入門</h2>\n\n<blockquote>\n<p>ブラウザ上の統合開発環境であるCloud9について基本的な使い方を見ていきます。 <code>dotinstall</code><br>\n ... <code>wikipedia</code><br>\nこれも便利。開発環境を自分のMacにいれなくていい。Webで完結する。気に入らなければレポジトリを削除とか。うん。Railsチュートリアルで使われてるやつですね！html, node.js, php+apache, python, Django, c++, wordpress, ruby on rails, blank, Harvard's CS50 いっぱい動く<code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"さくらのvps入門\" class=\"fragment\"></span><a href=\"#%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>さくらのVPS入門</h2>\n\n<blockquote>\n<p>さくらインターネット株式会社が提供する「さくらのVPS」の設定方法について解説していきます。 <code>dotinstall</code><br>\nさくらのVPS（仮想専用サーバー）です、最近だとDocker用のもある。たのしそう。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"amazon-web-services入門\" class=\"fragment\"></span><a href=\"#amazon-web-services%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Amazon Web Services入門</h2>\n\n<blockquote>\n<p>Amazonが提供する各種クラウドサービスについてその使い方を説明していきます。 <code>dotinstall</code><br>\nAmazon.comにより提供されているクラウドコンピューティングサービス（ウェブサービス）である。 <code>wikipedia</code><br>\n言わずと知れたAmazon系、アマゾンが営業利益の半分を叩き出すほど<code>techcrunch</code> の人気のwebまわりのなんでも置けるところ。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"heroku入門\" class=\"fragment\"></span><a href=\"#heroku%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Heroku入門</h2>\n\n<blockquote>\n<p>代表的なPaaSであるHerokuについて、その基本的な使い方を学びます。 <code>dotinstall</code><br>\n初期はRubyによるウェブアプリケーションフレームワークRuby on Railsのみのサポートであったが、Java、Node.js、Scala、Clojure、Python、PHPなど複数のプログラミング言語をサポートするようになった。 <code>wikipedia</code><br>\nRailsを本番サーバーにいれる前にぽいっていれてるイメージあったけど、、なんならヘロクに置きっぱのhtmlがまだ動いてるし、トラフィック少ないなら放置でもいいのかも(だめかな) <code>me</code></p>\n</blockquote>\n\n<h3>\n<span id=\"ここまで私見-2\" class=\"fragment\"></span><a href=\"#%E3%81%93%E3%81%93%E3%81%BE%E3%81%A7%E7%A7%81%E8%A6%8B-2\"><i class=\"fa fa-link\"></i></a>ここまで私見</h3>\n\n<p>Cloud9使えばほんとにローカルを汚さずにいろいろできるから便利だし、Herokuも基本無料で使えるし、このあたりのクラウド系のサービスは要チェックです。</p>\n\n<h2>\n<span id=\"php入門\" class=\"fragment\"></span><a href=\"#php%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>PHP入門</h2>\n\n<blockquote>\n<p>高度なウェブアプリケーションを作ることができるPHPについて学んでいきます。 <code>dotinstall</code><br>\n動的にHTMLデータを生成することによって、動的なウェブページを実現することを主な目的としたプログラミング言語、 <code>wikipedia</code><br>\nwebサイトで一番再発実績があるのはphpってphpレシピに書いてたきがする。Java&amp;SurvletとかRailsとかで書くよりもシンプルで規約すくなくて書きやすい気がする。JavaみたいにフォワードとかJavaBeansObjectとかにしなくてなんとなくぽいってデータを渡せるイメージ。その分F5攻撃とか、アクセスルートのトークンチェックとかいろいろ開発のやり方とかあるから、勉強していくと素敵。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"cakephp3入門\" class=\"fragment\"></span><a href=\"#cakephp3%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>CakePHP3入門</h2>\n\n<blockquote>\n<p>PHPのWebアプリケーションフレームワークであるCakePHPについて学んでいきます。 <code>dotinstall</code><br>\nPHPで書かれたオープンソースのWebアプリケーションフレームワークである。先行するRuby on Railsの概念の多くを取り入れており、Rails流の高速開発とPHPの機動性を兼ね備えたフレームワークと言われている。 <code>wikipedia</code><br>\nケーキの管理画面のイメージ。Googleトレンドでみると、cakephpより9倍ららべる(次の項目)のが人気。日本だとCakeのが3倍人気！！まだ使われてサイトが多いっぽいと予想。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"laravel5入門\" class=\"fragment\"></span><a href=\"#laravel5%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Laravel5入門</h2>\n\n<blockquote>\n<p>PHPのWebアプリケーションフレームワークであるLaravelについて学んでいきます。 <code>dotinstall</code><br>\n無料・オープンソースのPHPで書かれたWebアプリケーションフレームワークである。 <code>wikipedia</code><br>\n2013年phpの人気フレームワーク1位(25.85%)、次に人気なのはPhalcon(16.73%) <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"ruby入門\" class=\"fragment\"></span><a href=\"#ruby%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Ruby入門</h2>\n\n<blockquote>\n<p>オブジェクト指向スクリプト言語で定評のあるRubyの基礎を学んでいきます。 <code>dotinstall</code><br>\nまつもとゆきひろ（通称 Matz）により開発されたオブジェクト指向スクリプト言語であり、スクリプト言語が用いられてきた領域でのオブジェクト指向プログラミングを実現する。 また日本で開発されたプログラミング言語としては初めて国際電気標準会議で国際規格に認証された事例となった。 <code>wikipedia</code><br>\n私もよく使う言語。書きやすい、たのしい。あと1年後には、rubyからデータサイエンス系のライブラリ(Python)が扱えるようになるというカンファレンスからの噂？ <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"rspec入門\" class=\"fragment\"></span><a href=\"#rspec%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>RSpec入門</h2>\n\n<blockquote>\n<p>BDDのためのテストフレームワークであるRSpecについて、その使い方を学んでいきます。 <code>dotinstall</code><br>\nビヘイビア駆動開発 (振舞駆動開発; behavior driven development; BDD)とは、プログラム開発手法の一種で、テスト駆動開発(TDD)から派生した物である。 <code>wikipedia</code><br>\nBDDの方のフレームワーク。使ったことない。railsチュートリアルのTDDに苦しめられた。。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"active-record入門\" class=\"fragment\"></span><a href=\"#active-record%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Active Record入門</h2>\n\n<blockquote>\n<p>RubyonRailsの一部として開発されているORマッパーであるActiveRecordについて見ていきます。 <code>dotinstall</code><br>\nActive Recordはデータベースからデータを読み出すためのアプローチである。 <code>wikipedia</code><br>\nDBアクセスはSQL書くっていうより、オブジェクトから操作できる。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"ruby-on-rails-4入門\" class=\"fragment\"></span><a href=\"#ruby-on-rails-4%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Ruby on Rails 4入門</h2>\n\n<blockquote>\n<p>代表的なWebアプリケーションフレームワークであるRubyonRailsについて、その概念と使い方を説明していきます。 <code>dotinstall</code><br>\nRuby on Rails（ルビーオンレイルズ）は、オープンソースのWebアプリケーションフレームワークである。RoRまたは単にRailsと呼ばれる。その名にも示されているようにRubyで書かれている。またModel View Controller（MVC）アーキテクチャに基づいて構築されている。 <code>wikipedia</code><br>\nむつかしい。ruby系のwebアプリケーションを作るなら。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"sinatra入門\" class=\"fragment\"></span><a href=\"#sinatra%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Sinatra入門</h2>\n\n<blockquote>\n<p>Rubyで軽量アプリケーションを作成する際に便利なフレームワーク、Sinatraについて学んでいきます。 <code>dotinstall</code><br>\nRubyで作成されたオープンソースのWebアプリケーションフレームワークである。2007年に公開された。Model View Controller（MVC）には基づかない設計で作成されており、小さく、柔軟性があるプログラミングが可能となるよう意識されている。 <code>wikipedia</code><br>\nrails使わないけどrubyのフレームワークだよ！AppleとかGitHubとかHerokuとかが使ってるよ！ <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"nodejs入門\" class=\"fragment\"></span><a href=\"#nodejs%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Node.js入門</h2>\n\n<blockquote>\n<p>大量のアクセスを高速にさばくことができるNode.jsについて、その基本的な使い方を学んでいきます。 <code>dotinstall</code><br>\nNode.js はイベント化された入出力を扱うUnix系プラットフォーム上のサーバーサイドJavaScript環境である（V8 JavaScriptエンジンで動作する）。Webサーバなどのスケーラブルなネットワークプログラムの記述を意図している <code>wikipedia</code><br>\nフロントエンド言語のJavascriptからの派生でサーバーサイドを扱えるようになった。実行環境。進化してる。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"express入門\" class=\"fragment\"></span><a href=\"#express%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Express入門</h2>\n\n<blockquote>\n<p>Node.js用のWebアプリケーションフレームワークであるExpressについて、基本的な使い方を学びます。 <code>dotinstall</code><br>\nExpressはそのNode.jsでの王道的な開発をスピードアップするためのフレームワークです。 <code>Qiita</code><br>\nNode.jsがフレームワークだと思ってたとか言えない。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"socketio入門\" class=\"fragment\"></span><a href=\"#socketio%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Socket.IO入門</h2>\n\n<blockquote>\n<p>WebSocket周辺の技術を便利に扱うためのライブラリ、Socket.IOについて基本的な使い方を学びます。 <code>dotinstall</code><br>\nWebSocket（ウェブソケット）は、コンピュータ・ネットワーク用の通信規格の1つである。インターネットの標準化団体であるW3CとIETFがウェブサーバーとウェブブラウザとの間の通信のために規定を予定している双方向通信用の技術規格であり、APIはW3Cが、WebSocket プロトコルはIETFが策定に関与している。プロトコルの仕様は RFC 6455。TCP上で動く。 <code>wikipedia</code><br>\nAjaxで頻繁にやりときされるよになって悲鳴をあげてるサーバーサイドの救世主(あってる?) <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"swift-3入門\" class=\"fragment\"></span><a href=\"#swift-3%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Swift 3入門</h2>\n\n<blockquote>\n<p>iOSアプリ開発で使われるプログラミング言語であるSwiftについて見ていきます。 <code>dotinstall</code><br>\nSwift（スウィフト）は、アップルのiOSおよびmacOSのためのプログラミング言語。Worldwide Developers Conference (WWDC) 2014で発表された。アップル製OS上で動作するアプリケーションの開発に従来から用いられていたObjective-CやObjective-C++、C言語と共存することが意図されている[3]。 <code>wikipedia</code><br>\niPhoneアプリ開発に使うモダンな言語。かたづけとか超厳しいけど、そのおかげでバグが減ってるっぽい。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"androidアプリ開発入門\" class=\"fragment\"></span><a href=\"#android%E3%82%A2%E3%83%97%E3%83%AA%E9%96%8B%E7%99%BA%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Androidアプリ開発入門</h2>\n\n<blockquote>\n<p>携帯情報端末向けのOSであるAndroidを使い、アプリを作る方法について学んでいきます。 <code>dotinstall</code><br>\nAndroid (Java)java。javaってなんでもできるよね。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"basic入門\" class=\"fragment\"></span><a href=\"#basic%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>BASIC入門</h2>\n\n<blockquote>\n<p>1970年代に発売されたパソコンに搭載されていた昔なつかしのプログラミング言語です。 <code>dotinstall</code><br>\nBASIC（ベーシック）は手続き型プログラミング言語のひとつ。<br>\n名前は「beginner's all-purpose symbolic instruction code」（「初心者向け汎用記号命令コード」を意味する）の頭字語である。 <code>wikipedia</code><br>\n 英語っぽい。大文字のイメージ、後10列から25に飛ばしたり、飛んでるイメージ。  <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"c言語入門\" class=\"fragment\"></span><a href=\"#c%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>C言語入門</h2>\n\n<blockquote>\n<p>OSを作るために開発され、多くのプログラミング言語に影響を与えているC言語の基礎について説明していきます。 <code>dotinstall</code><br>\nC言語（シーげんご）は、1972年にAT&amp;Tベル研究所のデニス・リッチーが主体となって開発したプログラミング言語である。英語圏では単に C と呼んでおり、日本でも文書や文脈によっては同様に C と呼ぶことがある。 <code>wikipedia</code><br>\n有名。大学だと一番にこれをやるキガスル。C言語のポインタ理解してるひとはいいよね〜〜って年上の方がよく言ってるイメージがある。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"c入門\" class=\"fragment\"></span><a href=\"#c%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>C#入門</h2>\n\n<blockquote>\n<p>マイクロソフトが開発したプログラミング言語であるC#について学んでいきます。 <code>dotinstall</code><br>\nC#（シーシャープ）とは、マイクロソフトが開発したマルチパラダイムプログラミング言語。強い型付け、命令型、宣言型、手続き型、関数型、ジェネリック、オブジェクト指向の要素を持つ。<br>\nマイクロソフトのソフトウェアフレームワークである.NET Frameworkとともに作られ、Ecma International[1]および国際標準化機構 (ISO)[2] によって標準化されており、日本においても日本工業規格 (JIS)[3]によって採択された。 <code>wikipedia</code><br>\nUnityとか使える。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"cobol入門\" class=\"fragment\"></span><a href=\"#cobol%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>COBOL入門</h2>\n\n<blockquote>\n<p>事務処理向けに開発されたCOBOLについて、基本的な使い方を学びます。 <code>dotinstall</code><br>\nCOBOL（コボル）は、1959年に事務処理用に開発されたプログラミング言語である。名前は「Common Business Oriented Language」（共通事務処理用言語）に由来する。 <code>wikipedia</code><br>\n他の言語と違って10進法だから銀行のシステムとかに使われてたイメージ。今は金額の誤差の許されない案件でもJavaに置き換わりつつあるような。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"go言語入門\" class=\"fragment\"></span><a href=\"#go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Go言語入門</h2>\n\n<blockquote>\n<p>Googleが中心となって開発しているモダンなプログラミング言語、Goについて学びます。 <code>dotinstall</code><br>\nGoはプログラミング言語のひとつ。Googleによって開発されており[4]、設計にロブ・パイク、ケン・トンプソンらが関わっている。<br>\n主な特徴として、軽量スレッディングのための機能、Pythonのような動的型付け言語のようなプログラミングの容易性、などがある。Go処理系としてはコンパイラのみが開発されている。 <code>wikipedia</code><br>\nGoogle好きならPythonとかGo言語を扱ってるといいかも。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"java-8入門\" class=\"fragment\"></span><a href=\"#java-8%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Java 8入門</h2>\n\n<blockquote>\n<p>さまざまな用途で幅広く使われているオブジェクト指向型言語、Javaについて学んでいきます。 <code>dotinstall</code><br>\nJava（ジャバ）は、狭義ではオブジェクト指向プログラミング言語Javaであり、広義ではプログラミング言語Javaのプログラムの実行環境および開発環境をいう。本稿ではプログラミング言語としての Java、および関連する技術や設計思想、およびJava言語の実行環境として見たJavaプラットフォームについて解説する。クラスライブラリなどを含めた、Javaバイトコードの実行環境と開発環境（広義のJava）については、Javaプラットフォームを参照。また、言語の文法に関してはJavaの文法を参照。 <code>wikipedia</code><br>\nJSP&amp;Survlet(スッキリJava)で作ったシステムのおかげでJavaの考え方が少しわかったきがする。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"scala入門\" class=\"fragment\"></span><a href=\"#scala%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Scala入門</h2>\n\n<blockquote>\n<p>オブジェクト指向と関数型プログラミングの性質をあわせもつScalaについて学んでいきます。 <code>dotinstall</code><br>\nScala（スカラ(skah-lah[1]）はオブジェクト指向言語と関数型言語の特徴を統合したマルチパラダイムのプログラミング言語である。名前の「Scala」は英語の「scalable language」に由来するものである。 <code>wikipedia</code><br>\nJava仮想マシンで動くって。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"kotlin入門\" class=\"fragment\"></span><a href=\"#kotlin%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Kotlin入門</h2>\n\n<blockquote>\n<p>Android開発で人気の、Javaをより安全かつ簡潔に書くことができるKotlinについて見ていきます。 <code>dotinstall</code><br>\nKotlin（ことりん、コトリン）は、ジェットブレインズ社のアンドリー・ブレスラフ、ドミトリー・ジェメロフが開発した、静的型付けのオブジェクト指向プログラミング言語である。 <code>wikipedia</code><br>\n名前がかわいくて気になっているけどまだ動画を見れていない。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"awk入門\" class=\"fragment\"></span><a href=\"#awk%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>AWK入門</h2>\n\n<blockquote>\n<p>効率的にテキスト処理を行うことができるAWKについて、その使い方を学びます。 <code>dotinstall</code><br>\nAWK（オーク）は、UNIX 上で開発されたプログラミング言語で、デフォルトでは改行でレコードが区切られ、各レコードのフィールドは空白類（スペースの他、タブなど）で区切られているようなテキストファイルを扱えるが、カスタマイズも可能であり、また文字列と数値を扱うプログラミングも可能である。 <code>wikipedia</code><br>\nこう、なんか、こういう技術も知っとかないととは思っても、rubyでコード書いちゃうんだよな。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"lua入門\" class=\"fragment\"></span><a href=\"#lua%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Lua入門</h2>\n\n<blockquote>\n<p>軽量かつ高速で、組み込みが容易なスクリプト言語、Luaについて解説していきます。 <code>dotinstall</code><br>\nLua（ルア）は、リオデジャネイロ・カトリカ大学の、主としてDepartment of Computer Science（コンピュータ科学科）and・or Computer Graphics Technology Group (Tecgraf) に属する、Roberto Ierusalimschy, Waldemar Celes, Luiz Henrique de Figueiredo らによって設計開発されたスクリプト言語およびその処理系の実装である。<br>\n手続き型言語として、また、プロトタイプベースのオブジェクト指向言語としても利用する事が出来、関数型言語、データ駆動型としての要素も併せ持っている。<br>\nLuaという名前は、ポルトガル語の月に由来する。 <code>wikipedia</code><br>\n変数に型のないスクリプト言語では最速の言語・処理系であるとされており、rubyはわかるけど、pythonより早いってすごいな。Luaは、C言語のホストプログラムに組み込まれるって。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"markdown記法入門\" class=\"fragment\"></span><a href=\"#markdown%E8%A8%98%E6%B3%95%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Markdown記法入門</h2>\n\n<blockquote>\n<p>読み書きしやすいテキストを構造化された文書に変換するためのフォーマットであるMarkdown記法について学びます。 <code>dotinstall</code><br>\nMarkdown（マークダウン）は、文書を記述するための軽量マークアップ言語のひとつである。本来はプレーンテキスト形式で手軽に書いた文書からHTMLを生成するために開発されたものである。しかし、現在ではHTMLのほかパワーポイント形式やLATEX形式のファイルへ変換するソフトウェア（コンバータ）も開発されている。各コンバータの開発者によって多様な拡張が施されるため、各種の方言が存在する。 <code>wikipedia</code><br>\nめっちゃ大好き。文章を書きたくなる！ <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"perl入門\" class=\"fragment\"></span><a href=\"#perl%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Perl入門</h2>\n\n<blockquote>\n<p>テキスト処理から大規模なシステム開発まで対応できるPerlについて、その基礎を学びます。 <code>dotinstall</code><br>\nPerl（パール）とは、ラリー・ウォールによって開発されたプログラミング言語である。実用性と多様性を重視しており、C言語やsed、awk、シェルスクリプトなど他のプログラミング言語の優れた機能を取り入れている。ウェブ・アプリケーション、システム管理、テキスト処理などのプログラムを書くのに広く用いられている。<br>\n言語処理系としてのperlはフリーソフトウェアである。Artistic LicenseおよびGPLのもとで配布されており、誰でもどちらかのライセンスを選択して利用することができる。UNIXやWindowsなど多くのプラットフォーム上で動作する。 <code>wikipedia</code><br>\n正規表現とかテキストいじるのに強いイメージ <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"processing入門\" class=\"fragment\"></span><a href=\"#processing%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Processing入門</h2>\n\n<blockquote>\n<p>デザイナーやアーティスト向けのプログラミング言語であるProcessingについて基本的な使い方を学びます。 <code>dotinstall</code><br>\nProcessing（プロセシング）は、キャセイ・レアス（英語版）（Casey Reas）とベンジャミン・フライ（英語版）（Benjamin Fry）によるオープンソースプロジェクトであり、かつてはMITメディアラボで開発されていた。電子アートとビジュアルデザインのためのプログラミング言語であり、統合開発環境である。アーティストによるコンテンツ制作作業のために、詳細な設定を行う関数を排除している。 視覚的なフィードバックが即座に得られるため、初心者がプログラミングを学習するのに適しており、電子スケッチブックの基盤としても利用できる。Java を単純化し、グラフィック機能に特化した言語といえる。 <code>wikipedia</code><br>\nJava、そしてIDE、そして初心者向け、グラフィカル、、気になる <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"p5js入門\" class=\"fragment\"></span><a href=\"#p5js%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>p5.js入門</h2>\n\n<blockquote>\n<p>ビジュアルコーディングツールであるProcessingをJavaScriptに移植したp5.jsについて学んでいきます。 <code>dotinstall</code><br>\n... <code>wikipedia</code><br>\njavascriptなのでJavaとかの環境がいらないので導入は楽かも <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"python-3入門\" class=\"fragment\"></span><a href=\"#python-3%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Python 3入門</h2>\n\n<blockquote>\n<p>データ解析や機械学習などにも利用される、シンプルなオブジェクト指向型言語であるPythonについて見ていきます。 <code>dotinstall</code><br>\nPython（パイソン）は、汎用のプログラミング言語である。コードがシンプルで扱いやすく設計され、C言語などに比べて、さまざまなプログラムを分かりやすく、少ないコード行数で書けるといった特徴がある。[12][13]。 <code>wikipedia</code><br>\n便利。計算とか。データサイエンティストとか。Djangoじゃんご、Tornado、IoTデバイスへのアクセスとかもC経由Pythonでかけたり。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"r言語入門\" class=\"fragment\"></span><a href=\"#r%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>R言語入門</h2>\n\n<blockquote>\n<p>統計解析用のプログラミング言語であるR言語について、基本的な使い方を見ていきます。 <code>dotinstall</code><br>\nR言語（あーるげんご）はオープンソース・フリーソフトウェアの統計解析向けのプログラミング言語及びその開発実行環境である。<br>\nR言語はニュージーランドのオークランド大学のRoss IhakaとRobert Clifford Gentlemanにより作られた。現在ではR Development Core Team（S言語開発者であるJohn M. Chambersも参画している[1]。）によりメンテナンスと拡張がなされている。<br>\nR言語のソースコードは主にC言語、FORTRAN、そしてRによって開発された。<br>\nなお、R言語の仕様を実装した処理系の呼称名はプロジェクトを支援するフリーソフトウェア財団によれば『GNU R』である[2]が、他の実装形態が存在しないために日本語での慣用的呼称に倣って、当記事では、仕様・実装を纏めて適宜にR言語や単にR等と呼ぶ。 <code>wikipedia</code><br>\n大学とかの学術機関でよく使われているイメージある。Pythonとかあんまり聞いたことなかったけどRはよくデータ解析の話題になって、使い方わかんねえ、、っていつもみんなで言い合ってた印象。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"smalltalk入門\" class=\"fragment\"></span><a href=\"#smalltalk%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Smalltalk入門</h2>\n\n<blockquote>\n<p>純粋オブジェクト指向言語として他言語に大きな影響を与えたSmalltalkについて解説していきます。 <code>dotinstall</code><br>\nSmalltalk（スモールトーク）は、Simula のオブジェクト（およびクラス）、LISPの徹底した動的性、LOGO のタートル操作や描画機能に、アラン・ケイの「メッセージング」というアイデアを組み合わせて作られたクラスベースの純粋オブジェクト指向プログラミング言語、および、それによって記述構築された統合化プログラミング環境の呼称。<br>\nSmalltalk で一語であり、「Small Talk」「SmallTalk」などは誤りである。 <code>wikipedia</code><br>\nLispという文字が見えたので気になった。勉強しよう。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"typescript入門\" class=\"fragment\"></span><a href=\"#typescript%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>TypeScript入門</h2>\n\n<blockquote>\n<p>JavaScriptの構文を拡張し、大規模開発にも使えるようにしたプログラミング言語、TypeScriptについて見ていきます。 <code>dotinstall</code><br>\nTypeScript はマイクロソフトによって開発され、メンテナンスされているフリーでオープンソースのプログラミング言語である。TypeScript は JavaScript に対して、省略も可能な静的型付けとクラスベースオブジェクト指向を加えた厳密なスーパーセットとなっている。C# のリードアーキテクトであり、DelphiとTurbo Pascalの開発者でもあるアンダース・ヘルスバーグが TypeScript の開発に関わっている。TypeScriptはクライアントサイド、あるいはサーバサイド(Node.js）で実行されるJavaScriptアプリケーションの開発に利用できる。 <code>wikipedia</code><br>\njs <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"pascal入門\" class=\"fragment\"></span><a href=\"#pascal%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Pascal入門</h2>\n\n<blockquote>\n<p>教育用プログラミング言語として開発されたPascalについて基本的な使い方を見ていきます。 <code>dotinstall</code><br>\nPascal（パスカル）は、構造化された初期の代表的なプログラミング言語。<br>\nPascal は、1970年にスイスのチューリッヒ工科大学のニクラウス・ヴィルトが教育用プログラミング言語として開発し、ALGOL の影響を受けた簡素で厳密な構造化言語仕様を持つ。教育目的で広まり、実用的にも初期の TeX や Macintosh の オペレーティングシステム、アプリケーションの記述も Pascal である。<br>\nドナルド・クヌースの TeX プログラムは文芸的プログラミングシステムのWEBで書かれ、そこから文書と Pascal プログラムを生成する。現在でもパーソナルコンピュータ上の処理系が多数あり、多くの他のプログラミング言語、およびハードウェア記述言語の源泉になっている。名前は、世界で最初の機械式計算機を発明したブレーズ・パスカルの名前に因んだものである[1]。 <code>wikipedia</code><br>\n教育用 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"ada入門\" class=\"fragment\"></span><a href=\"#ada%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Ada入門</h2>\n\n<blockquote>\n<p>米国の国防総省が中心となって作ったプログラミング言語、Adaについて見ていきます。 <code>dotinstall</code><br>\nAda（エイダ）は、強力な言語機能を豊富に持ち、高度な型の体系をもつ、プログラミング言語の一つである。構文はAlgol系である。<br>\n史上初のプログラマとされるエイダ・ラブレスの名前にちなんでAdaと命名されているため、ADAと表記するのは誤り。<br>\nフリーのコンパイラとしては、GNATなどがある。<br>\nボーイング777や、F-22戦闘機の制御ソフトウェアはAdaによって書かれている。 <code>wikipedia</code><br>\nボーイング777!!!!!!!かっけえこの言語。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"mongodb入門\" class=\"fragment\"></span><a href=\"#mongodb%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>MongoDB入門</h2>\n\n<blockquote>\n<p>ドキュメント指向データベースであるMongoDBについてその使い方を見ていきます。 <code>dotinstall</code><br>\nMongoDBは、オープンソースのドキュメント指向データベースである。C++言語で記述されており、開発とサポートはMongoDB Inc.によって行なわれている。[2] <code>wikipedia</code><br>\nNoSQL。 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"mysql入門\" class=\"fragment\"></span><a href=\"#mysql%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>MySQL入門</h2>\n\n<blockquote>\n<p>もっとも人気の高いデータベース管理システムのうちの一つであるMySQLについて、その使い方の基礎を学びます。 <code>dotinstall</code><br>\nMySQL（まい・えすきゅーえる）は、オープンソースで公開されている関係データベース管理システム (RDBMS) の一つである。 <code>wikipedia</code><br>\n一番人気 <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"postgresql入門\" class=\"fragment\"></span><a href=\"#postgresql%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>PostgreSQL入門</h2>\n\n<blockquote>\n<p>オープンソースで高機能なデータベースシステムであるPostgreSQLについて、その基本的な使い方を学んでいきます。 <code>dotinstall</code><br>\nPostgreSQL（ぽすとぐれすきゅーえる: 発音例）はオープンソースのオブジェクト関係データベース管理システム (ORDBMS) である。その名称は Ingres の後継を意味する「Post-Ingres」に由来している。「Postgres」や「ポスグレ」と呼ばれることも多い。 <code>wikipedia</code><br>\n型変換のチェックが厳しいイメージ <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"redis入門\" class=\"fragment\"></span><a href=\"#redis%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>Redis入門</h2>\n\n<blockquote>\n<p>データ構造サーバーとも呼ばれるインメモリデータベースのRedisについて説明していきます。 <code>dotinstall</code><br>\nRedisとは「remote dictionary server」から名前が付けられたオープンソースのkey-valueデータストアです。 MemcacheDB等のKVSとの最大の違いは、格納するバリューがデータ構造というところです。 <code>ameblo</code><br>\nつまり解説は　<a href=\"http://qiita.com/search?q=Redis%E3%80%80%E3%81%A7%E3%81%8A%E9%A1%98%E3%81%84%E3%81%97%E3%81%BE%E3%81%99%E3%80%82%E3%82%8F%E3%81%8B%E3%82%93%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F%E3%80%82\" class=\"autolink\">http://qiita.com/search?q=Redis　でお願いします。わかんなかった。</a> <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"sqlite入門\" class=\"fragment\"></span><a href=\"#sqlite%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>SQLite入門</h2>\n\n<blockquote>\n<p>スマートフォンやブラウザなどで採用されている、軽量データベースのSQLiteについて学んでいきます。 <code>dotinstall</code><br>\n <code>wikipedia</code><br>\nこの前show databases;ってやって怒られた。exit?.exit! <code>me</code></p>\n</blockquote>\n\n<h2>\n<span id=\"angularjs入門\" class=\"fragment\"></span><a href=\"#angularjs%E5%85%A5%E9%96%80\"><i class=\"fa fa-link\"></i></a>AngularJS入門</h2>\n\n<blockquote>\n<p>JavaScriptのMVCフレームワークであるAngularJSについてその使い方の基礎を解説していきます。 <code>dotinstall</code><br>\nAngularJS（アンギュラージェイエス）、または Angular は、Googleと個人や企業のコミュニティによって開発されている、完全にJavaScriptで書かれたオープンソースのフロントエンドWebアプリケーションフレームワークである。MIT Licenseでライセンスされたフリーソフトウェアである。シングルページアプリケーションの開発において直面する多くの問題に取り組んでいる。JavaScriptコンポーネントは、クロスプラットフォームなモバイルアプリ開発用フレームワークであるApache Cordovaを補完する。クライアントサイド用のMVCおよびMVVMアーキテクチャを、リッチインターネットアプリケーションで一般的に用いられるコンポーネント群とともに提供することにより、そのようなアプリの開発とテストを簡単にすることを目的としている。<br>\nAngularJSはシングルページアプリケーション（英語版） (SPA) の開発が可能なフレームワークで、一つのフレームワーク内で全ての機能が完結するフルスタックフレームワークであることが特徴として挙げられる。[1] <code>wikipedia</code><br>\nGoogle. JSがかなり進化してる。 <code>me</code></p>\n</blockquote>\n\n<hr>\n\n<h1>\n<span id=\"最後に\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\"><i class=\"fa fa-link\"></i></a>最後に</h1>\n\n<p>ほらあなたもドットインストールが見たくなってきた！<br>\nれっつごー！</p>\n\n<p>.</p>\n","body":"# 最初に\n* 最近ドットインストールのマイナーな動画を見るのにはまっています。\n* 聞いたことあるけどどんな技術だっけ\n* そんなレッスンを私的にまとめました\n* 全部は載せてません(phpとかjsとかいっぱいあったりするから)\n* 蛇足解説とかいれます\n* `dotinstall` `wikipedia` `me`と引用元はいれます\n\n#### 個人的におすすめ\n* jekyll -> Markdown記法でのブログ構築などが楽\n* Atom -> Dotinstall拡張があって動画見ながらコーディングできるってよ\n\n## HTML入門\n> ホームページやウェブサービスの画面を作る際に必要な、構造的な文書を書く方法について学びます。 `dotinstall`\n> ウェブ上の文書を記述するためのマークアップ言語である。文章の中に記述することでさまざまな機能を記述設定することができる。 `wikipedia`\n> いわゆるホームページの文章の中がこれです！ `me`\n\n## CSS入門\n> ホームページの見た目を制御することができるCSSについて基本的な使い方を学んでいきます。 `dotinstall`\n> HTML、XMLの表示レイアウトなどの修飾を指定するのための仕様。 `wikipedia`\n> HPの色などのスタイルを決める部分。この部分は大きい文字でとか目立たせたいから赤色とか設定する。 `me`\n\n## CSS3入門\n> ウェブページの見た目を規定するCSSの最新バージョンであるCSS3について学んでいきます。 `dotinstall`\n> HTML や XML の要素をどのように修飾（表示）するかを指示する、W3Cによる仕様の一つ。 `wikipedia`\n> cssの進化版。できることが増えた。HTML5+CSS3ができたらホームページは作れる！ `me`\n\n## JavaScript入門\n> 主にブラウザに実装されているJavaScriptについて、基本的な使い方を学んでいきます。 `dotinstall`\n> JavaScriptとは、プログラミング言語のひとつである。実行環境が主にウェブブラウザに実装され、動的なウェブサイト構築や、リッチインターネットアプリケーションなど高度なユーザインタフェースの開発に用いられる。 `wikipedia`\n> HPのクリックしたら画面の色が変わったりとか、メニューが飛び出てきたとか、そういう動きをつけるのに便利！ `me`\n\n## jQuery入門\n> JavaScriptをより簡単に扱うためのライブラリであるjQueryについて、その基本的な使い方を学びます。 `dotinstall`\n> ウェブブラウザ用のJavaScriptコードをより容易に記述できるようにするために設計された軽量なJavaScriptライブラリである。 `wikipedia`\n> javascriptよりコードを書く量が減って便利。すごく。 `me`\n\n### ここまで私見\nHTML5 + CSS3 + JavaScript(jQuery)ができたらフロントエンドエンジニアにレベルアップ。フロントはだいたいなんでもできる。その先はphpも覚えてバックエンドも少しかじるか、JavaScript系(react, Angular.js, Node.js)と発展系はたくさんあるので勉強にことかかない。HTMLとCSSとレスポンシブデザイン(現在パソコンとスマホのアクセス数が同じくらいになってるので、モバイルファースト、はやり)を極めてもいい。全サイトの25%を占めるとかいう噂のWordPressができるようになってもいい。勉強の毎日。\n\n\n## Bootstrap 3.0入門\n> モダンなサイトが簡単に作れるCSSフレームワーク、Bootstrapについて基本的な使い方を見ていきます。 `dotinstall`\n>  ウェブサイトやWebアプリケーションを作成するフロントエンドWebアプリケーションフレームワークである。 `wikipedia`\n> cssとか書かなくても、クラスを'btn'ってやったりすると、あら不思議、きれいなほんとと色とスタイルに整えてくれる！(難点はbootstrapを使うとみんな同じデザインっぽくみえる。短期間でぱぱっとサイト作りたいときとかよい。) `me`\n\n## Flexbox入門\n> 複雑なレイアウトをシンプルに記述できるCSSFlexibleBoxLayoutについて見ていきます。 `dotinstall`\n> なかった。。。 `wikipedia`\n> レスポンシブとの親和性も高いということもあって、早めに使いこなせるようになっておくといいでしょう！ `lig`\n> ボックスがBootstrapのカラムに似た印象を感じた。固定幅(200px)と可変幅(auto, flex: 1;)のボックスが横並びになるのいい！これ知らなかったからwebkitのcalcで(100%-200px)とか書いてた。World Wide Web Consortium (W3C) がだしてるっぽい、ようするにWeb標準? `me`\n\n### ここまで私見\nレスポンシブデザインにする技術は少しずつ楽になってきてるのかな？\nFlexboxなんてSCSSみたいなもんだと思ってました。\n\n## Cloud9入門\n> ブラウザ上の統合開発環境であるCloud9について基本的な使い方を見ていきます。 `dotinstall`\n>  ... `wikipedia`\n> これも便利。開発環境を自分のMacにいれなくていい。Webで完結する。気に入らなければレポジトリを削除とか。うん。Railsチュートリアルで使われてるやつですね！html, node.js, php+apache, python, Django, c++, wordpress, ruby on rails, blank, Harvard's CS50 いっぱい動く`me`\n\n\n## さくらのVPS入門\n> さくらインターネット株式会社が提供する「さくらのVPS」の設定方法について解説していきます。 `dotinstall`\n> さくらのVPS（仮想専用サーバー）です、最近だとDocker用のもある。たのしそう。 `me`\n\n## Amazon Web Services入門\n> Amazonが提供する各種クラウドサービスについてその使い方を説明していきます。 `dotinstall`\n> Amazon.comにより提供されているクラウドコンピューティングサービス（ウェブサービス）である。 `wikipedia`\n> 言わずと知れたAmazon系、アマゾンが営業利益の半分を叩き出すほど`techcrunch` の人気のwebまわりのなんでも置けるところ。 `me`\n\n## Heroku入門\n> 代表的なPaaSであるHerokuについて、その基本的な使い方を学びます。 `dotinstall`\n> 初期はRubyによるウェブアプリケーションフレームワークRuby on Railsのみのサポートであったが、Java、Node.js、Scala、Clojure、Python、PHPなど複数のプログラミング言語をサポートするようになった。 `wikipedia`\n> Railsを本番サーバーにいれる前にぽいっていれてるイメージあったけど、、なんならヘロクに置きっぱのhtmlがまだ動いてるし、トラフィック少ないなら放置でもいいのかも(だめかな) `me`\n\n### ここまで私見\nCloud9使えばほんとにローカルを汚さずにいろいろできるから便利だし、Herokuも基本無料で使えるし、このあたりのクラウド系のサービスは要チェックです。\n\n## PHP入門\n> 高度なウェブアプリケーションを作ることができるPHPについて学んでいきます。 `dotinstall`\n> 動的にHTMLデータを生成することによって、動的なウェブページを実現することを主な目的としたプログラミング言語、 `wikipedia`\n> webサイトで一番再発実績があるのはphpってphpレシピに書いてたきがする。Java&SurvletとかRailsとかで書くよりもシンプルで規約すくなくて書きやすい気がする。JavaみたいにフォワードとかJavaBeansObjectとかにしなくてなんとなくぽいってデータを渡せるイメージ。その分F5攻撃とか、アクセスルートのトークンチェックとかいろいろ開発のやり方とかあるから、勉強していくと素敵。 `me`\n\n## CakePHP3入門\n> PHPのWebアプリケーションフレームワークであるCakePHPについて学んでいきます。 `dotinstall`\n> PHPで書かれたオープンソースのWebアプリケーションフレームワークである。先行するRuby on Railsの概念の多くを取り入れており、Rails流の高速開発とPHPの機動性を兼ね備えたフレームワークと言われている。 `wikipedia`\n> ケーキの管理画面のイメージ。Googleトレンドでみると、cakephpより9倍ららべる(次の項目)のが人気。日本だとCakeのが3倍人気！！まだ使われてサイトが多いっぽいと予想。 `me`\n\n## Laravel5入門\n> PHPのWebアプリケーションフレームワークであるLaravelについて学んでいきます。 `dotinstall`\n> 無料・オープンソースのPHPで書かれたWebアプリケーションフレームワークである。 `wikipedia`\n> 2013年phpの人気フレームワーク1位(25.85%)、次に人気なのはPhalcon(16.73%) `me`\n\n## Ruby入門\n> オブジェクト指向スクリプト言語で定評のあるRubyの基礎を学んでいきます。 `dotinstall`\n> まつもとゆきひろ（通称 Matz）により開発されたオブジェクト指向スクリプト言語であり、スクリプト言語が用いられてきた領域でのオブジェクト指向プログラミングを実現する。 また日本で開発されたプログラミング言語としては初めて国際電気標準会議で国際規格に認証された事例となった。 `wikipedia`\n> 私もよく使う言語。書きやすい、たのしい。あと1年後には、rubyからデータサイエンス系のライブラリ(Python)が扱えるようになるというカンファレンスからの噂？ `me`\n\n## RSpec入門\n> BDDのためのテストフレームワークであるRSpecについて、その使い方を学んでいきます。 `dotinstall`\n> ビヘイビア駆動開発 (振舞駆動開発; behavior driven development; BDD)とは、プログラム開発手法の一種で、テスト駆動開発(TDD)から派生した物である。 `wikipedia`\n> BDDの方のフレームワーク。使ったことない。railsチュートリアルのTDDに苦しめられた。。 `me`\n\n## Active Record入門\n> RubyonRailsの一部として開発されているORマッパーであるActiveRecordについて見ていきます。 `dotinstall`\n> Active Recordはデータベースからデータを読み出すためのアプローチである。 `wikipedia`\n> DBアクセスはSQL書くっていうより、オブジェクトから操作できる。 `me`\n\n## Ruby on Rails 4入門\n> 代表的なWebアプリケーションフレームワークであるRubyonRailsについて、その概念と使い方を説明していきます。 `dotinstall`\n> Ruby on Rails（ルビーオンレイルズ）は、オープンソースのWebアプリケーションフレームワークである。RoRまたは単にRailsと呼ばれる。その名にも示されているようにRubyで書かれている。またModel View Controller（MVC）アーキテクチャに基づいて構築されている。 `wikipedia`\n> むつかしい。ruby系のwebアプリケーションを作るなら。 `me`\n\n## Sinatra入門\n> Rubyで軽量アプリケーションを作成する際に便利なフレームワーク、Sinatraについて学んでいきます。 `dotinstall`\n> Rubyで作成されたオープンソースのWebアプリケーションフレームワークである。2007年に公開された。Model View Controller（MVC）には基づかない設計で作成されており、小さく、柔軟性があるプログラミングが可能となるよう意識されている。 `wikipedia`\n> rails使わないけどrubyのフレームワークだよ！AppleとかGitHubとかHerokuとかが使ってるよ！ `me`\n\n## Node.js入門\n> 大量のアクセスを高速にさばくことができるNode.jsについて、その基本的な使い方を学んでいきます。 `dotinstall`\n> Node.js はイベント化された入出力を扱うUnix系プラットフォーム上のサーバーサイドJavaScript環境である（V8 JavaScriptエンジンで動作する）。Webサーバなどのスケーラブルなネットワークプログラムの記述を意図している `wikipedia`\n> フロントエンド言語のJavascriptからの派生でサーバーサイドを扱えるようになった。実行環境。進化してる。 `me`\n\n## Express入門\n> Node.js用のWebアプリケーションフレームワークであるExpressについて、基本的な使い方を学びます。 `dotinstall`\n> ExpressはそのNode.jsでの王道的な開発をスピードアップするためのフレームワークです。 `Qiita`\n> Node.jsがフレームワークだと思ってたとか言えない。 `me`\n\n## Socket.IO入門\n> WebSocket周辺の技術を便利に扱うためのライブラリ、Socket.IOについて基本的な使い方を学びます。 `dotinstall`\n> WebSocket（ウェブソケット）は、コンピュータ・ネットワーク用の通信規格の1つである。インターネットの標準化団体であるW3CとIETFがウェブサーバーとウェブブラウザとの間の通信のために規定を予定している双方向通信用の技術規格であり、APIはW3Cが、WebSocket プロトコルはIETFが策定に関与している。プロトコルの仕様は RFC 6455。TCP上で動く。 `wikipedia`\n> Ajaxで頻繁にやりときされるよになって悲鳴をあげてるサーバーサイドの救世主(あってる?) `me`\n\n## Swift 3入門\n> iOSアプリ開発で使われるプログラミング言語であるSwiftについて見ていきます。 `dotinstall`\n> Swift（スウィフト）は、アップルのiOSおよびmacOSのためのプログラミング言語。Worldwide Developers Conference (WWDC) 2014で発表された。アップル製OS上で動作するアプリケーションの開発に従来から用いられていたObjective-CやObjective-C++、C言語と共存することが意図されている[3]。 `wikipedia`\n> iPhoneアプリ開発に使うモダンな言語。かたづけとか超厳しいけど、そのおかげでバグが減ってるっぽい。 `me`\n\n## Androidアプリ開発入門\n> 携帯情報端末向けのOSであるAndroidを使い、アプリを作る方法について学んでいきます。 `dotinstall`\n> Android (Java)java。javaってなんでもできるよね。 `me`\n\n## BASIC入門\n> 1970年代に発売されたパソコンに搭載されていた昔なつかしのプログラミング言語です。 `dotinstall`\n> BASIC（ベーシック）は手続き型プログラミング言語のひとつ。\n名前は「beginner's all-purpose symbolic instruction code」（「初心者向け汎用記号命令コード」を意味する）の頭字語である。 `wikipedia`\n>  英語っぽい。大文字のイメージ、後10列から25に飛ばしたり、飛んでるイメージ。  `me`\n\n## C言語入門\n> OSを作るために開発され、多くのプログラミング言語に影響を与えているC言語の基礎について説明していきます。 `dotinstall`\n> C言語（シーげんご）は、1972年にAT&Tベル研究所のデニス・リッチーが主体となって開発したプログラミング言語である。英語圏では単に C と呼んでおり、日本でも文書や文脈によっては同様に C と呼ぶことがある。 `wikipedia`\n> 有名。大学だと一番にこれをやるキガスル。C言語のポインタ理解してるひとはいいよね〜〜って年上の方がよく言ってるイメージがある。 `me`\n\n## C#入門\n> マイクロソフトが開発したプログラミング言語であるC#について学んでいきます。 `dotinstall`\n> C#（シーシャープ）とは、マイクロソフトが開発したマルチパラダイムプログラミング言語。強い型付け、命令型、宣言型、手続き型、関数型、ジェネリック、オブジェクト指向の要素を持つ。\nマイクロソフトのソフトウェアフレームワークである.NET Frameworkとともに作られ、Ecma International[1]および国際標準化機構 (ISO)[2] によって標準化されており、日本においても日本工業規格 (JIS)[3]によって採択された。 `wikipedia`\n> Unityとか使える。 `me`\n\n## COBOL入門\n> 事務処理向けに開発されたCOBOLについて、基本的な使い方を学びます。 `dotinstall`\n> COBOL（コボル）は、1959年に事務処理用に開発されたプログラミング言語である。名前は「Common Business Oriented Language」（共通事務処理用言語）に由来する。 `wikipedia`\n> 他の言語と違って10進法だから銀行のシステムとかに使われてたイメージ。今は金額の誤差の許されない案件でもJavaに置き換わりつつあるような。 `me`\n\n## Go言語入門\n> Googleが中心となって開発しているモダンなプログラミング言語、Goについて学びます。 `dotinstall`\n> Goはプログラミング言語のひとつ。Googleによって開発されており[4]、設計にロブ・パイク、ケン・トンプソンらが関わっている。\n主な特徴として、軽量スレッディングのための機能、Pythonのような動的型付け言語のようなプログラミングの容易性、などがある。Go処理系としてはコンパイラのみが開発されている。 `wikipedia`\n> Google好きならPythonとかGo言語を扱ってるといいかも。 `me`\n\n## Java 8入門\n> さまざまな用途で幅広く使われているオブジェクト指向型言語、Javaについて学んでいきます。 `dotinstall`\n> Java（ジャバ）は、狭義ではオブジェクト指向プログラミング言語Javaであり、広義ではプログラミング言語Javaのプログラムの実行環境および開発環境をいう。本稿ではプログラミング言語としての Java、および関連する技術や設計思想、およびJava言語の実行環境として見たJavaプラットフォームについて解説する。クラスライブラリなどを含めた、Javaバイトコードの実行環境と開発環境（広義のJava）については、Javaプラットフォームを参照。また、言語の文法に関してはJavaの文法を参照。 `wikipedia`\n> JSP&Survlet(スッキリJava)で作ったシステムのおかげでJavaの考え方が少しわかったきがする。 `me`\n\n## Scala入門\n> オブジェクト指向と関数型プログラミングの性質をあわせもつScalaについて学んでいきます。 `dotinstall`\n> Scala（スカラ(skah-lah[1]）はオブジェクト指向言語と関数型言語の特徴を統合したマルチパラダイムのプログラミング言語である。名前の「Scala」は英語の「scalable language」に由来するものである。 `wikipedia`\n> Java仮想マシンで動くって。 `me`\n\n## Kotlin入門\n> Android開発で人気の、Javaをより安全かつ簡潔に書くことができるKotlinについて見ていきます。 `dotinstall`\n> Kotlin（ことりん、コトリン）は、ジェットブレインズ社のアンドリー・ブレスラフ、ドミトリー・ジェメロフが開発した、静的型付けのオブジェクト指向プログラミング言語である。 `wikipedia`\n> 名前がかわいくて気になっているけどまだ動画を見れていない。 `me`\n\n## AWK入門\n> 効率的にテキスト処理を行うことができるAWKについて、その使い方を学びます。 `dotinstall`\n> AWK（オーク）は、UNIX 上で開発されたプログラミング言語で、デフォルトでは改行でレコードが区切られ、各レコードのフィールドは空白類（スペースの他、タブなど）で区切られているようなテキストファイルを扱えるが、カスタマイズも可能であり、また文字列と数値を扱うプログラミングも可能である。 `wikipedia`\n> こう、なんか、こういう技術も知っとかないととは思っても、rubyでコード書いちゃうんだよな。 `me`\n\n## Lua入門\n> 軽量かつ高速で、組み込みが容易なスクリプト言語、Luaについて解説していきます。 `dotinstall`\n> Lua（ルア）は、リオデジャネイロ・カトリカ大学の、主としてDepartment of Computer Science（コンピュータ科学科）and・or Computer Graphics Technology Group (Tecgraf) に属する、Roberto Ierusalimschy, Waldemar Celes, Luiz Henrique de Figueiredo らによって設計開発されたスクリプト言語およびその処理系の実装である。\n手続き型言語として、また、プロトタイプベースのオブジェクト指向言語としても利用する事が出来、関数型言語、データ駆動型としての要素も併せ持っている。\nLuaという名前は、ポルトガル語の月に由来する。 `wikipedia`\n> 変数に型のないスクリプト言語では最速の言語・処理系であるとされており、rubyはわかるけど、pythonより早いってすごいな。Luaは、C言語のホストプログラムに組み込まれるって。 `me`\n\n## Markdown記法入門\n> 読み書きしやすいテキストを構造化された文書に変換するためのフォーマットであるMarkdown記法について学びます。 `dotinstall`\n> Markdown（マークダウン）は、文書を記述するための軽量マークアップ言語のひとつである。本来はプレーンテキスト形式で手軽に書いた文書からHTMLを生成するために開発されたものである。しかし、現在ではHTMLのほかパワーポイント形式やLATEX形式のファイルへ変換するソフトウェア（コンバータ）も開発されている。各コンバータの開発者によって多様な拡張が施されるため、各種の方言が存在する。 `wikipedia`\n> めっちゃ大好き。文章を書きたくなる！ `me`\n\n## Perl入門\n> テキスト処理から大規模なシステム開発まで対応できるPerlについて、その基礎を学びます。 `dotinstall`\n> Perl（パール）とは、ラリー・ウォールによって開発されたプログラミング言語である。実用性と多様性を重視しており、C言語やsed、awk、シェルスクリプトなど他のプログラミング言語の優れた機能を取り入れている。ウェブ・アプリケーション、システム管理、テキスト処理などのプログラムを書くのに広く用いられている。\n言語処理系としてのperlはフリーソフトウェアである。Artistic LicenseおよびGPLのもとで配布されており、誰でもどちらかのライセンスを選択して利用することができる。UNIXやWindowsなど多くのプラットフォーム上で動作する。 `wikipedia`\n> 正規表現とかテキストいじるのに強いイメージ `me`\n\n## Processing入門\n> デザイナーやアーティスト向けのプログラミング言語であるProcessingについて基本的な使い方を学びます。 `dotinstall`\n> Processing（プロセシング）は、キャセイ・レアス（英語版）（Casey Reas）とベンジャミン・フライ（英語版）（Benjamin Fry）によるオープンソースプロジェクトであり、かつてはMITメディアラボで開発されていた。電子アートとビジュアルデザインのためのプログラミング言語であり、統合開発環境である。アーティストによるコンテンツ制作作業のために、詳細な設定を行う関数を排除している。 視覚的なフィードバックが即座に得られるため、初心者がプログラミングを学習するのに適しており、電子スケッチブックの基盤としても利用できる。Java を単純化し、グラフィック機能に特化した言語といえる。 `wikipedia`\n> Java、そしてIDE、そして初心者向け、グラフィカル、、気になる `me`\n\n## p5.js入門\n> ビジュアルコーディングツールであるProcessingをJavaScriptに移植したp5.jsについて学んでいきます。 `dotinstall`\n> ... `wikipedia`\n> javascriptなのでJavaとかの環境がいらないので導入は楽かも `me`\n\n## Python 3入門\n> データ解析や機械学習などにも利用される、シンプルなオブジェクト指向型言語であるPythonについて見ていきます。 `dotinstall`\n> Python（パイソン）は、汎用のプログラミング言語である。コードがシンプルで扱いやすく設計され、C言語などに比べて、さまざまなプログラムを分かりやすく、少ないコード行数で書けるといった特徴がある。[12][13]。 `wikipedia`\n> 便利。計算とか。データサイエンティストとか。Djangoじゃんご、Tornado、IoTデバイスへのアクセスとかもC経由Pythonでかけたり。 `me`\n\n## R言語入門\n> 統計解析用のプログラミング言語であるR言語について、基本的な使い方を見ていきます。 `dotinstall`\n> R言語（あーるげんご）はオープンソース・フリーソフトウェアの統計解析向けのプログラミング言語及びその開発実行環境である。\nR言語はニュージーランドのオークランド大学のRoss IhakaとRobert Clifford Gentlemanにより作られた。現在ではR Development Core Team（S言語開発者であるJohn M. Chambersも参画している[1]。）によりメンテナンスと拡張がなされている。\nR言語のソースコードは主にC言語、FORTRAN、そしてRによって開発された。\nなお、R言語の仕様を実装した処理系の呼称名はプロジェクトを支援するフリーソフトウェア財団によれば『GNU R』である[2]が、他の実装形態が存在しないために日本語での慣用的呼称に倣って、当記事では、仕様・実装を纏めて適宜にR言語や単にR等と呼ぶ。 `wikipedia`\n> 大学とかの学術機関でよく使われているイメージある。Pythonとかあんまり聞いたことなかったけどRはよくデータ解析の話題になって、使い方わかんねえ、、っていつもみんなで言い合ってた印象。 `me`\n\n## Smalltalk入門\n> 純粋オブジェクト指向言語として他言語に大きな影響を与えたSmalltalkについて解説していきます。 `dotinstall`\n> Smalltalk（スモールトーク）は、Simula のオブジェクト（およびクラス）、LISPの徹底した動的性、LOGO のタートル操作や描画機能に、アラン・ケイの「メッセージング」というアイデアを組み合わせて作られたクラスベースの純粋オブジェクト指向プログラミング言語、および、それによって記述構築された統合化プログラミング環境の呼称。\nSmalltalk で一語であり、「Small Talk」「SmallTalk」などは誤りである。 `wikipedia`\n> Lispという文字が見えたので気になった。勉強しよう。 `me`\n\n## TypeScript入門\n> JavaScriptの構文を拡張し、大規模開発にも使えるようにしたプログラミング言語、TypeScriptについて見ていきます。 `dotinstall`\n> TypeScript はマイクロソフトによって開発され、メンテナンスされているフリーでオープンソースのプログラミング言語である。TypeScript は JavaScript に対して、省略も可能な静的型付けとクラスベースオブジェクト指向を加えた厳密なスーパーセットとなっている。C# のリードアーキテクトであり、DelphiとTurbo Pascalの開発者でもあるアンダース・ヘルスバーグが TypeScript の開発に関わっている。TypeScriptはクライアントサイド、あるいはサーバサイド(Node.js）で実行されるJavaScriptアプリケーションの開発に利用できる。 `wikipedia`\n> js `me`\n\n## Pascal入門\n> 教育用プログラミング言語として開発されたPascalについて基本的な使い方を見ていきます。 `dotinstall`\n> Pascal（パスカル）は、構造化された初期の代表的なプログラミング言語。\nPascal は、1970年にスイスのチューリッヒ工科大学のニクラウス・ヴィルトが教育用プログラミング言語として開発し、ALGOL の影響を受けた簡素で厳密な構造化言語仕様を持つ。教育目的で広まり、実用的にも初期の TeX や Macintosh の オペレーティングシステム、アプリケーションの記述も Pascal である。\nドナルド・クヌースの TeX プログラムは文芸的プログラミングシステムのWEBで書かれ、そこから文書と Pascal プログラムを生成する。現在でもパーソナルコンピュータ上の処理系が多数あり、多くの他のプログラミング言語、およびハードウェア記述言語の源泉になっている。名前は、世界で最初の機械式計算機を発明したブレーズ・パスカルの名前に因んだものである[1]。 `wikipedia`\n> 教育用 `me`\n\n## Ada入門\n> 米国の国防総省が中心となって作ったプログラミング言語、Adaについて見ていきます。 `dotinstall`\n> Ada（エイダ）は、強力な言語機能を豊富に持ち、高度な型の体系をもつ、プログラミング言語の一つである。構文はAlgol系である。\n史上初のプログラマとされるエイダ・ラブレスの名前にちなんでAdaと命名されているため、ADAと表記するのは誤り。\nフリーのコンパイラとしては、GNATなどがある。\nボーイング777や、F-22戦闘機の制御ソフトウェアはAdaによって書かれている。 `wikipedia`\n> ボーイング777!!!!!!!かっけえこの言語。 `me`\n\n## MongoDB入門\n> ドキュメント指向データベースであるMongoDBについてその使い方を見ていきます。 `dotinstall`\n> MongoDBは、オープンソースのドキュメント指向データベースである。C++言語で記述されており、開発とサポートはMongoDB Inc.によって行なわれている。[2] `wikipedia`\n> NoSQL。 `me`\n\n## MySQL入門\n> もっとも人気の高いデータベース管理システムのうちの一つであるMySQLについて、その使い方の基礎を学びます。 `dotinstall`\n> MySQL（まい・えすきゅーえる）は、オープンソースで公開されている関係データベース管理システム (RDBMS) の一つである。 `wikipedia`\n> 一番人気 `me`\n\n## PostgreSQL入門\n> オープンソースで高機能なデータベースシステムであるPostgreSQLについて、その基本的な使い方を学んでいきます。 `dotinstall`\n> PostgreSQL（ぽすとぐれすきゅーえる: 発音例）はオープンソースのオブジェクト関係データベース管理システム (ORDBMS) である。その名称は Ingres の後継を意味する「Post-Ingres」に由来している。「Postgres」や「ポスグレ」と呼ばれることも多い。 `wikipedia`\n> 型変換のチェックが厳しいイメージ `me`\n\n## Redis入門\n> データ構造サーバーとも呼ばれるインメモリデータベースのRedisについて説明していきます。 `dotinstall`\n> Redisとは「remote dictionary server」から名前が付けられたオープンソースのkey-valueデータストアです。 MemcacheDB等のKVSとの最大の違いは、格納するバリューがデータ構造というところです。 `ameblo`\n> つまり解説は　http://qiita.com/search?q=Redis　でお願いします。わかんなかった。 `me`\n\n## SQLite入門\n> スマートフォンやブラウザなどで採用されている、軽量データベースのSQLiteについて学んでいきます。 `dotinstall`\n>  `wikipedia`\n> この前show databases;ってやって怒られた。exit?.exit! `me`\n\n## AngularJS入門\n> JavaScriptのMVCフレームワークであるAngularJSについてその使い方の基礎を解説していきます。 `dotinstall`\n> AngularJS（アンギュラージェイエス）、または Angular は、Googleと個人や企業のコミュニティによって開発されている、完全にJavaScriptで書かれたオープンソースのフロントエンドWebアプリケーションフレームワークである。MIT Licenseでライセンスされたフリーソフトウェアである。シングルページアプリケーションの開発において直面する多くの問題に取り組んでいる。JavaScriptコンポーネントは、クロスプラットフォームなモバイルアプリ開発用フレームワークであるApache Cordovaを補完する。クライアントサイド用のMVCおよびMVVMアーキテクチャを、リッチインターネットアプリケーションで一般的に用いられるコンポーネント群とともに提供することにより、そのようなアプリの開発とテストを簡単にすることを目的としている。\nAngularJSはシングルページアプリケーション（英語版） (SPA) の開発が可能なフレームワークで、一つのフレームワーク内で全ての機能が完結するフルスタックフレームワークであることが特徴として挙げられる。[1] `wikipedia`\n> Google. JSがかなり進化してる。 `me`\n\n\n**************************\n\n# 最後に\nほらあなたもドットインストールが見たくなってきた！\nれっつごー！\n\n\n.\n","coediting":false,"comments_count":0,"created_at":"2017-03-01T01:58:54+09:00","group":null,"id":"431a12c305e6b44a7653","likes_count":9,"private":false,"reactions_count":0,"tags":[{"name":"Ruby","versions":[]},{"name":"PHP","versions":[]},{"name":"HTML","versions":[]},{"name":"CSS","versions":[]},{"name":"JavaScript","versions":[]}],"title":"dotinstall動画の一覧から流行りの技術を読み解く","updated_at":"2018-08-27T12:01:14+09:00","url":"https://qiita.com/ykhirao/items/431a12c305e6b44a7653","user":{"description":"Web Developer For 6 years.\r\nPHP/Laravel && (React OR Vue.js)\r\nTypeScript/node.js\r\n\r\n業務委託の依頼とかはWantedlyとかからでお願いします！","facebook_id":"","followees_count":38,"followers_count":95,"github_login_name":"ykhirao","id":"ykhirao","items_count":60,"linkedin_id":"","location":"Tokyo, Japan","name":"yk","organization":"","permanent_id":112929,"profile_image_url":"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/profile-images/1639030792","team_only":false,"twitter_screen_name":"ykhirao","website_url":"https://www.wantedly.com/id/ykhirao"},"page_views_count":null,"team_membership":null}},"path":"posts/431a12c305e6b44a7653"}
