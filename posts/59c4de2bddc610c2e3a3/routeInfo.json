{"template":"__react_static_root__/src/components/QiitaPost","sharedHashesByProp":{},"data":{"post":{"rendered_body":"\n<h2>\n<span id=\"結論\" class=\"fragment\"></span><a href=\"#%E7%B5%90%E8%AB%96\"><i class=\"fa fa-link\"></i></a>結論</h2>\n\n<p>以下順番で使える記号のバリデーションがゆるい順です。<br>\nRFCに準拠するなら18個の記号に対応させないといけませんが、<br>\n実際にその記号はGmailなどに対応していないケースもあって、「なにに合わせるかは自社のサービスで決めてください」が一定の答えかなと思いました。Twitterに合わせるのがよさそうと有名サービスに迎合するのもよさそうでした。</p>\n\n<table>\n<thead>\n<tr>\n<th>サービス</th>\n<th>対応（記号）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>RFC</td>\n<td>18</td>\n</tr>\n<tr>\n<td>フレームワーク</td>\n<td>何種類かあるので適切に組み合わせて使うのがよさそう</td>\n</tr>\n<tr>\n<td>Webサービス</td>\n<td>6</td>\n</tr>\n<tr>\n<td>あなたのサービス！</td>\n<td>RFCに準拠したら記号含めて自分で考えてね</td>\n</tr>\n<tr>\n<td>Webメールサービス</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n\n<p>このまとめが100%よいとは限りませんが、結局なにがいいの？は議論余地あると思うので<br>\nぜひ自分の思う最強のバリデーション正規表現をコメント欄とか新しい記事とか書いていただけると見てみたいです！</p>\n\n<hr>\n\n<h2>\n<span id=\"検討方法の列挙\" class=\"fragment\"></span><a href=\"#%E6%A4%9C%E8%A8%8E%E6%96%B9%E6%B3%95%E3%81%AE%E5%88%97%E6%8C%99\"><i class=\"fa fa-link\"></i></a>検討方法の列挙</h2>\n\n<ul>\n<li>RFCに準拠する: Emailの仕様を決めている組織に従うべき論</li>\n<li>Webメールサービスに準拠する: 世の中のすべてのサービスのドキュメントを参考にする</li>\n<li>有名なWebサービスに準拠する: Twitterのサインアップのバリデーションを検証する</li>\n<li>フレームワークに準拠する: php/Laravelを見てみる</li>\n</ul>\n\n<h2>\n<span id=\"rfcに準拠する\" class=\"fragment\"></span><a href=\"#rfc%E3%81%AB%E6%BA%96%E6%8B%A0%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>RFCに準拠する</h2>\n\n<blockquote>\n<p>Request for Comments（リクエスト フォー コメンツ、略称：RFC）はIETF（Internet Engineering Task Force）による技術仕様の保存、公開形式である。内容には特に制限はないが、プロトコルやファイルフォーマットが主に扱われる。RFCとは「コメント募集」を意味する英語の略語であり、もともとは技術仕様を公開し、それについての意見を広く募集してより良いものにしていく観点から始められたようである。全てのRFCはインターネット上で公開されており、誰でも閲覧することができる。</p>\n\n<p><a href=\"https://ja.wikipedia.org/wiki/Request_for_Comments\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://ja.wikipedia.org/wiki/Request_for_Comments</a></p>\n</blockquote>\n\n<ul>\n<li>ここが詳しい <a href=\"https://qiita.com/yoshitake_1201/items/40268332cd23f67c504c\" id=\"reference-436072bc137751fe47ea\">RFC 5322 &amp; 5321に沿ったメールアドレス（local-part）に使える文字まとめ\nin Qiita</a>\n</li>\n</ul>\n\n<p>原点確認したい人は<a href=\"https://www.rfc-editor.org/info/rfc6854\" rel=\"nofollow noopener\" target=\"_blank\">このあたり</a>みてほしい。<br>\n- RFC 6854<br>\n- RFC 5322<br>\n- RFC 7504<br>\n- RFC 5321<br>\n- RFC 1846</p>\n\n<p>使える文字</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>! # $ % &amp; ' * + - / = ? ^ _ ` { | } ~\n</code></pre></div></div>\n\n<h2>\n<span id=\"webメールサービスに準拠する\" class=\"fragment\"></span><a href=\"#web%E3%83%A1%E3%83%BC%E3%83%AB%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AB%E6%BA%96%E6%8B%A0%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Webメールサービスに準拠する</h2>\n\n<p>何種類かサービスを見てみたがこのあたりが使えたら問題なさそう。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>.\n-\n_\n+\n</code></pre></div></div>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>使える記号（半角英数字以外）</th>\n<th>その他</th>\n<th>資料URL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>softbank</td>\n<td>「－」（ハイフン）、「．」（ドット）、「＿ 」（アンダーバー）</td>\n<td>「＠」直前の「．」（ドット）や「．」（ドット）の連続使用などもできません。<br>文字数は、3文字以上30文字以内<br>ひとつ目の文字は、アルファベットまたは数字のみ</td>\n<td><a href=\"https://www.softbank.jp/support/faq/view/10544\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://www.softbank.jp/support/faq/view/10544</a></td>\n</tr>\n<tr>\n<td>docomo</td>\n<td>「_」（アンダーバー）、「.」（ピリオド）、「-」（ハイフン）の記号</td>\n<td>3字以上30字まで設定することができます。<br>また、2009年4月1日以降、「.」は「..」などのように連続で使用することや@マークの直前で使用することはできなくなりました。<br>アドレス内に「..」や「.@」が存在する場合、一部のメールサービスからのメールが正しく届かない可能性がございます。<br>「スペース（空白）」は使用できません。<br>英字を入力する場合、大文字小文字の区別はありません。すべて小文字で表示されます。<br>先頭文字は英文字にしてください。</td>\n<td><a href=\"https://www.nttdocomo.co.jp/info/spam_mail/change_add/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://www.nttdocomo.co.jp/info/spam_mail/change_add/</a></td>\n</tr>\n<tr>\n<td>au</td>\n<td>「-（ハイフン）」、「.（ピリオド／ドット）」、「_ （アンダーバー）」</td>\n<td>メールネーム文字数が、30文字まで利用可能です。<br>「.」をアドレス内での連続使用や「.」をEメールネームの最初/最後に使用することはできません。また最初に数字の「0」を使用することもできません。</td>\n<td><a href=\"https://www.au.com/support/service/mobile/trouble/mail/email/change//\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://www.au.com/support/service/mobile/trouble/mail/email/change//</a></td>\n</tr>\n<tr>\n<td>Gmail</td>\n<td>ユーザー名: ピリオド（.）<br>エイリアス: プラス（+）</td>\n<td>ユーザー名にはアンパサンド（＆）、等号（=）、アンダースコア（_）、アポストロフィ（'）、ダッシュ（-）、プラス記号（+）、カンマ（,）、山括弧（&lt;&gt;）、連続するピリオド（.）を使用することはできません。</td>\n<td><a href=\"https://support.google.com/mail/answer/9211434?hl=ja\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://support.google.com/mail/answer/9211434?hl=ja</a></td>\n</tr>\n<tr>\n<td>Yahoo!メール</td>\n<td>半角で “.”（ピリオド）、“-”（ハイフン）、“_”（アンダーバー）の3種類</td>\n<td>設定できるメールアドレスは、プログラムの誤動作等を防ぐ目的で、RFCというインターネットにかかわるルール(RFC2822)や、インターネット上の慣例をもとにしたYahoo!ウェブホスティングの独自ルールを適用しております。 メールアドレスに使用できる文字列は以下のとおりです。<br><br> <br>アルファベット : 半角小文字でa～zまでの26文字<br>数字 :半角で0～9までの10字<br>記号 :半角で “.”（ピリオド）、“-”（ハイフン）、“_”（アンダーバー）の3種類<br> <br>禁止されている文字や記号<br>メールアドレスは上記の文字と記号を組み合わせて1字以上32字以内でご設定ください。なお、弊社独自ルールで以下のように設定しています。<br><br> <br>記号で始まるアドレスは不可<br>「.」「-」の連続使用は不可</td>\n<td><a href=\"https://support.yahoo-net.jp/PccHostingupper/s/article/H000004944\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://support.yahoo-net.jp/PccHostingupper/s/article/H000004944</a></td>\n</tr>\n<tr>\n<td>Outlook</td>\n<td>ピリオド (.)、ハイフン (-)、下線 (_)</td>\n<td>メール アドレスに使うことができる文字は、アルファベット、数字、ピリオド (.)、ハイフン (-)、または下線 (_) のみです。特殊な文字やアクセント記号は使うことができません。また、ラテン アルファベット以外のアルファベットも使うことができません。</td>\n<td>\n<a href=\"https://account.live.com/AddAssocId\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://account.live.com/AddAssocId</a><br>(ドキュメントなし、エラーメッセージの文言で判断)</td>\n</tr>\n<tr>\n<td>iCloud Mail</td>\n<td>不明</td>\n<td></td>\n<td>ドキュメントなし</td>\n</tr>\n</tbody>\n</table>\n\n<h2>\n<span id=\"有名なwebサービスに準拠する\" class=\"fragment\"></span><a href=\"#%E6%9C%89%E5%90%8D%E3%81%AAweb%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AB%E6%BA%96%E6%8B%A0%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>有名なWebサービスに準拠する</h2>\n\n<p>Twitterのサインアップ画面で検証した<br>\n<a href=\"https://twitter.com/i/flow/signup\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://twitter.com/i/flow/signup</a></p>\n\n<table>\n<thead>\n<tr>\n<th>email</th>\n<th>valid</th>\n<th>意図</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"mailto:test@example.com\" class=\"autolink\">test@example.com</a></td>\n<td>TRUE</td>\n<td>簡単な例</td>\n</tr>\n<tr>\n<td><a href=\"mailto:test+-.._1@example.com\" class=\"autolink\">test+-.._1@example.com</a></td>\n<td>FALSE</td>\n<td>..の連続が弾かれるか</td>\n</tr>\n<tr>\n<td><a href=\"mailto:0test+-._1@example.com\" class=\"autolink\">0test+-._1@example.com</a></td>\n<td>TRUE</td>\n<td>先頭の文字が英数字のとき</td>\n</tr>\n<tr>\n<td><a href=\"mailto:0test++--.__1@example.com\" class=\"autolink\">0test++--.__1@example.com</a></td>\n<td>TRUE</td>\n<td>yahooで-_の連続使用できないので確認</td>\n</tr>\n<tr>\n<td>x!&amp;<a href=\"mailto:x@example.com\" class=\"autolink\">x@example.com</a>\n</td>\n<td>TRUE</td>\n<td>RFC準拠でWebメールサービスで使えない文字の検証（!&amp;のみ使えた）<br>! # $ % &amp; ' * + - / = ? ^ _ ` {</td>\n</tr>\n</tbody>\n</table>\n\n<p>!&amp; を使える設定しているのは意外でした。</p>\n\n<h2>\n<span id=\"フレームワークに準拠する\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF%E3%81%AB%E6%BA%96%E6%8B%A0%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>フレームワークに準拠する</h2>\n\n<p>Laravelのバリデーション</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>rfc: RFCValidation\nstrict: NoRFCWarningsValidation\ndns: DNSCheckValidation\nspoof: SpoofCheckValidation\nfilter: FilterEmailValidation\n</code></pre></div></div>\n\n<p>いろいろ組み合わせて適切なバリデーションを作れるようなってます</p>\n\n<div class=\"code-frame\" data-lang=\"php\"><div class=\"highlight\"><pre><code><span class=\"s1\">'email'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'email:rfc,dns'</span>\n</code></pre></div></div>\n\n<p>こんな感じでバリデーションかけれます。<br>\n<a href=\"https://readouble.com/laravel/8.x/ja/validation.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://readouble.com/laravel/8.x/ja/validation.html</a></p>\n\n<h2>\n<span id=\"最後に\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\"><i class=\"fa fa-link\"></i></a>最後に</h2>\n\n<p>...の連続がX年からできなくなったとか、最初の文字が数値じゃだめとか色々決まりはありますが、<br>\nサービサーによって異なっていたり、バリデーションってゆるいところに合わせるのが正とは限らない気がしているので<br>\n最適ってなんだろうって調べてみておもいました。</p>\n","body":"\n## 結論\n\n以下順番で使える記号のバリデーションがゆるい順です。\nRFCに準拠するなら18個の記号に対応させないといけませんが、\n実際にその記号はGmailなどに対応していないケースもあって、「なにに合わせるかは自社のサービスで決めてください」が一定の答えかなと思いました。Twitterに合わせるのがよさそうと有名サービスに迎合するのもよさそうでした。\n\n| サービス | 対応（記号） |\n| --- | --- |\n| RFC | 18 |\n| フレームワーク | 何種類かあるので適切に組み合わせて使うのがよさそう |\n| Webサービス | 6 |\n| あなたのサービス！ | RFCに準拠したら記号含めて自分で考えてね |\n| Webメールサービス | 4 |\n\n\nこのまとめが100%よいとは限りませんが、結局なにがいいの？は議論余地あると思うので\nぜひ自分の思う最強のバリデーション正規表現をコメント欄とか新しい記事とか書いていただけると見てみたいです！\n\n\n--------------\n\n## 検討方法の列挙\n\n- RFCに準拠する: Emailの仕様を決めている組織に従うべき論\n- Webメールサービスに準拠する: 世の中のすべてのサービスのドキュメントを参考にする\n- 有名なWebサービスに準拠する: Twitterのサインアップのバリデーションを検証する\n- フレームワークに準拠する: php/Laravelを見てみる\n\n## RFCに準拠する\n\n\n> Request for Comments（リクエスト フォー コメンツ、略称：RFC）はIETF（Internet Engineering Task Force）による技術仕様の保存、公開形式である。内容には特に制限はないが、プロトコルやファイルフォーマットが主に扱われる。RFCとは「コメント募集」を意味する英語の略語であり、もともとは技術仕様を公開し、それについての意見を広く募集してより良いものにしていく観点から始められたようである。全てのRFCはインターネット上で公開されており、誰でも閲覧することができる。\n> \n> https://ja.wikipedia.org/wiki/Request_for_Comments\n\n\n- ここが詳しい [RFC 5322 & 5321に沿ったメールアドレス（local-part）に使える文字まとめ\n in Qiita](https://qiita.com/yoshitake_1201/items/40268332cd23f67c504c)\n\n原点確認したい人は[このあたり](https://www.rfc-editor.org/info/rfc6854)みてほしい。\n- RFC 6854\n- RFC 5322\n- RFC 7504\n- RFC 5321\n- RFC 1846\n\n使える文字\n\n```\n! # $ % & ' * + - / = ? ^ _ ` { | } ~\n```\n\n## Webメールサービスに準拠する\n\n何種類かサービスを見てみたがこのあたりが使えたら問題なさそう。\n\n```\n.\n-\n_\n+\n```\n\n|  | 使える記号（半角英数字以外） | その他 | 資料URL |\n| --- | --- | --- | --- |\n| softbank | 「－」（ハイフン）、「．」（ドット）、「＿ 」（アンダーバー） | 「＠」直前の「．」（ドット）や「．」（ドット）の連続使用などもできません。<br>文字数は、3文字以上30文字以内<br>ひとつ目の文字は、アルファベットまたは数字のみ | https://www.softbank.jp/support/faq/view/10544 |\n| docomo | 「_」（アンダーバー）、「.」（ピリオド）、「-」（ハイフン）の記号 | 3字以上30字まで設定することができます。<br>また、2009年4月1日以降、「.」は「..」などのように連続で使用することや@マークの直前で使用することはできなくなりました。<br>アドレス内に「..」や「.@」が存在する場合、一部のメールサービスからのメールが正しく届かない可能性がございます。<br>「スペース（空白）」は使用できません。<br>英字を入力する場合、大文字小文字の区別はありません。すべて小文字で表示されます。<br>先頭文字は英文字にしてください。 | https://www.nttdocomo.co.jp/info/spam_mail/change_add/ |\n| au | 「-（ハイフン）」、「.（ピリオド／ドット）」、「_ （アンダーバー）」 | メールネーム文字数が、30文字まで利用可能です。<br>「.」をアドレス内での連続使用や「.」をEメールネームの最初/最後に使用することはできません。また最初に数字の「0」を使用することもできません。 | https://www.au.com/support/service/mobile/trouble/mail/email/change// |\n| Gmail | ユーザー名: ピリオド（.）<br>エイリアス: プラス（+） | ユーザー名にはアンパサンド（＆）、等号（=）、アンダースコア（_）、アポストロフィ（'）、ダッシュ（-）、プラス記号（+）、カンマ（,）、山括弧（<>）、連続するピリオド（.）を使用することはできません。 | https://support.google.com/mail/answer/9211434?hl=ja |\n| Yahoo!メール | 半角で “.”（ピリオド）、“-”（ハイフン）、“_”（アンダーバー）の3種類 | 設定できるメールアドレスは、プログラムの誤動作等を防ぐ目的で、RFCというインターネットにかかわるルール(RFC2822)や、インターネット上の慣例をもとにしたYahoo!ウェブホスティングの独自ルールを適用しております。 メールアドレスに使用できる文字列は以下のとおりです。<br><br> <br>アルファベット : 半角小文字でa～zまでの26文字<br>数字 :半角で0～9までの10字<br>記号 :半角で “.”（ピリオド）、“-”（ハイフン）、“_”（アンダーバー）の3種類<br> <br>禁止されている文字や記号<br>メールアドレスは上記の文字と記号を組み合わせて1字以上32字以内でご設定ください。なお、弊社独自ルールで以下のように設定しています。<br><br> <br>記号で始まるアドレスは不可<br>「.」「-」の連続使用は不可 | https://support.yahoo-net.jp/PccHostingupper/s/article/H000004944 |\n| Outlook | ピリオド (.)、ハイフン (-)、下線 (_) | メール アドレスに使うことができる文字は、アルファベット、数字、ピリオド (.)、ハイフン (-)、または下線 (_) のみです。特殊な文字やアクセント記号は使うことができません。また、ラテン アルファベット以外のアルファベットも使うことができません。 | https://account.live.com/AddAssocId<br>(ドキュメントなし、エラーメッセージの文言で判断) |\n| iCloud Mail | 不明 |  | ドキュメントなし |\n\n\n## 有名なWebサービスに準拠する\n\nTwitterのサインアップ画面で検証した\nhttps://twitter.com/i/flow/signup\n\n| email | valid | 意図 |\n| --- | --- | --- |\n| test@example.com | TRUE | 簡単な例 |\n| test+-.._1@example.com | FALSE | ..の連続が弾かれるか |\n| 0test+-._1@example.com | TRUE | 先頭の文字が英数字のとき |\n| 0test++--.__1@example.com | TRUE | yahooで-_の連続使用できないので確認 |\n| x!&x@example.com | TRUE | RFC準拠でWebメールサービスで使えない文字の検証（!&のみ使えた）<br>! # $ % & ' * + - / = ? ^ _ ` { | } ~ |\n\n!& を使える設定しているのは意外でした。\n\n## フレームワークに準拠する\n\nLaravelのバリデーション\n\n```\nrfc: RFCValidation\nstrict: NoRFCWarningsValidation\ndns: DNSCheckValidation\nspoof: SpoofCheckValidation\nfilter: FilterEmailValidation\n```\n\nいろいろ組み合わせて適切なバリデーションを作れるようなってます\n\n```php\n'email' => 'email:rfc,dns'\n```\n\nこんな感じでバリデーションかけれます。\nhttps://readouble.com/laravel/8.x/ja/validation.html\n\n\n## 最後に\n\n...の連続がX年からできなくなったとか、最初の文字が数値じゃだめとか色々決まりはありますが、\nサービサーによって異なっていたり、バリデーションってゆるいところに合わせるのが正とは限らない気がしているので\n最適ってなんだろうって調べてみておもいました。\n\n","coediting":false,"comments_count":0,"created_at":"2021-10-18T13:31:27+09:00","group":null,"id":"59c4de2bddc610c2e3a3","likes_count":4,"private":false,"reactions_count":0,"stocks_count":7,"tags":[{"name":"Laravel","versions":[]},{"name":"email","versions":[]},{"name":"バリデーション","versions":[]},{"name":"rfc","versions":[]}],"title":"【保存版】Emailのバリデーションを考える上でのまとめ資料【ゆるい順: RFC→FW→サービス→Emailプラットフォーム】","updated_at":"2021-10-18T13:31:27+09:00","url":"https://qiita.com/ykhirao/items/59c4de2bddc610c2e3a3","user":{"description":"Web Developer From 2016.\r\nPHP/Laravel && React/TypeScript/Node.js\r\n\r\n業務委託の依頼とかはWantedlyとかからでお願いします！","facebook_id":"","followees_count":39,"followers_count":100,"github_login_name":"ykhirao","id":"ykhirao","items_count":83,"linkedin_id":"","location":"Tokyo, Japan","name":"yk","organization":"","permanent_id":112929,"profile_image_url":"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/profile-images/1639030792","team_only":false,"twitter_screen_name":"ykhirao","website_url":"https://www.wantedly.com/id/ykhirao"},"page_views_count":null,"team_membership":null,"organization_url_name":null,"slide":false}},"path":"posts/59c4de2bddc610c2e3a3"}
