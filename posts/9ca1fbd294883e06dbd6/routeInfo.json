{"template":"__react_static_root__/src/containers/QiitaPost","sharedHashesByProp":{},"data":{"post":{"rendered_body":"\n<h1>\n<span id=\"pͪoͣnͬpͣoͥnͭpͣa͡inͥの作り方\" class=\"fragment\"></span><a href=\"#p%CD%AAo%CD%A3n%CD%ACp%CD%A3o%CD%A5n%CD%ADp%CD%A3a%CD%A1in%CD%A5%E3%81%AE%E4%BD%9C%E3%82%8A%E6%96%B9\"><i class=\"fa fa-link\"></i></a>pͪoͣnͬpͣoͥnͭpͣa͡inͥの作り方</h1>\n\n<p>ぽんぽんぺいんを簡単に作るサイトを作ったのでよかったら使ってみてください。</p>\n\n<p><a href=\"https://ykhirao.github.io/qiita/ponponpain/dist/\" rel=\"nofollow noopener\" target=\"_blank\">【ここをクリック】</a></p>\n\n<p><a href=\"https://camo.qiitausercontent.com/55df2b2ef9f3c920aa21586604d5e894e242be87/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f39373231353061392d636336312d333438362d636563382d3465373363393863343838622e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F972150a9-cc61-3486-cec8-4e73c98c488b.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=243ad7a5d56a444866488090c2eea737\" alt=\"タイトルなし.gif\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/972150a9-cc61-3486-cec8-4e73c98c488b.gif\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F972150a9-cc61-3486-cec8-4e73c98c488b.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c324be1fc1374428b58aaeebec65c70d 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"ponponpainharaita-iとは\" class=\"fragment\"></span><a href=\"#ponponpainharaita-i%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>ponponpain(haraita-i)とは</h2>\n\n<p>画像でいうとこんなやつのこと。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/9bebe63881bb3b54e33c716b43cf9adf97447251/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f64656535343166332d383837662d316161652d393738632d3163663039326637303339382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"380\" alt=\"スクリーンショット 2019-04-25 2.28.11.png\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2Fdee541f3-887f-1aae-978c-1cf092f70398.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=6697438a7374f66735ba3117d1e92582\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/dee541f3-887f-1aae-978c-1cf092f70398.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2Fdee541f3-887f-1aae-978c-1cf092f70398.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=681c1c0c901371d3743877584911ecd9 1x\" loading=\"lazy\"></a></p>\n\n<p>今回参考にさせていただきましたが、以下のサイトによくまとまっていると思います。</p>\n\n<ul>\n<li><a href=\"http://mylog.jp/post/bu-si-yi-nawen-zi-phoanrpaointpaaini\" rel=\"nofollow noopener\" target=\"_blank\">不思議な文字 pͪoͣnͬpͣoͥnͭpͣa͡inͥ | bison's brain at postachio</a></li>\n<li><a href=\"https://www.wdic.org/w/WDIC/%E3%81%BD%E3%82%93%E3%81%BD%E3%82%93%E3%81%BA%E3%81%84%E3%82%93\" rel=\"nofollow noopener\" target=\"_blank\">ぽんぽんぺいん ‐ 通信用語の基礎知識</a></li>\n</ul>\n\n<p>まあ要するに、不思議な上付き文字を組み合わせて、文字に副題（ルビ）をふろうって感じの遊びのことで、昔流行ったみたいです。</p>\n\n<p>今回はクリックだけで上付き文字を加えられるサイトを作ったのでぜひみんなに遊んでほしいなと思っています。</p>\n\n<h2>\n<span id=\"投稿について\" class=\"fragment\"></span><a href=\"#%E6%8A%95%E7%A8%BF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>投稿について</h2>\n\n<p>UbuntuのChromeだと綺麗に表示されないのですが、Twitterだといい感じになるみたいです。</p>\n\n<p>傑作ができたら、 <code>#pͪoͣnͬpͣoͥnͭpͣa͡inͥを支える技術</code> とかハッシュタグつけてツイートしてくれるか、Qiitaにコメントいただけると全部見ます！！！</p>\n\n<p>私が作ったのは ponponpain(moudameda)です。電車の中で、この文字を見ていただけると幸いです。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/8206fb3c6e7566ee05152a485054efa338aef800/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f33356538623366382d623130632d393432322d316134312d6466353631616331386432632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"393\" alt=\"スクリーンショット 2019-04-25 2.27.05.png\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F35e8b3f8-b10c-9422-1a41-df561ac18d2c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=1bd6f8c5322fd63db7d5fd318cf412b4\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/35e8b3f8-b10c-9422-1a41-df561ac18d2c.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F35e8b3f8-b10c-9422-1a41-df561ac18d2c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=88cf9ddeacd4802ec33e6222ae7cc696 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<p>そんなに難しくないので、こちらの画像を見ていただけるとなんとなくわかるかと思います。もしくは既出のGIF動画を見てからお使いください。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/4da94d3b0c7b5038cfc83b4bb34a78c89dc175d1/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f39666665663834662d363366612d366366362d353537632d3366323136343435613437362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"1262\" alt=\"スクリーンショット 2019-04-25 1.09.26.png\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F9ffef84f-63fa-6cf6-557c-3f216445a476.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a430a1b8b0e8dad1ebb415627297a291\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/9ffef84f-63fa-6cf6-557c-3f216445a476.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F9ffef84f-63fa-6cf6-557c-3f216445a476.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=75eeb02be9f307b02fd44689c84e19de 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"おわり\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A\"><i class=\"fa fa-link\"></i></a>おわり</h2>\n\n<p>たくさん、遊んでいただけると幸いです！！！</p>\n\n<hr>\n\n<p>以下は、ちょっとだけ、真面目な話するよ、読む人は優しい心を持ってみてね！！</p>\n\n<hr>\n\n<h2>\n<span id=\"真面目な話\" class=\"fragment\"></span><a href=\"#%E7%9C%9F%E9%9D%A2%E7%9B%AE%E3%81%AA%E8%A9%B1\"><i class=\"fa fa-link\"></i></a>真面目な話</h2>\n\n<p>この上付きの文字は <code>ダイアクリティカルマーク</code> というみたいで、日本語の <code>ﾊﾟ</code> の <code>̊</code> とかそういうもんだと考えればなんとなく文字コードが別にあっても不思議ではないのではないでしょうか。</p>\n\n<ul>\n<li><a href=\"https://ja.wikipedia.org/wiki/%E3%83%80%E3%82%A4%E3%82%A2%E3%82%AF%E3%83%AA%E3%83%86%E3%82%A3%E3%82%AB%E3%83%AB%E3%83%9E%E3%83%BC%E3%82%AF\" rel=\"nofollow noopener\" target=\"_blank\">wiki/ダイアクリティカルマーク</a></li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"javascript\"><div class=\"highlight\"><pre><code><span class=\"c1\">// Chromeのコンソールで以下のコードを入力してください</span>\n<span class=\"s2\">` </span><span class=\"p\">${</span><span class=\"nb\">String</span><span class=\"p\">.</span><span class=\"nx\">fromCharCode</span><span class=\"p\">(</span><span class=\"mi\">867</span><span class=\"p\">)}</span><span class=\"s2\"> `</span> <span class=\"c1\">// 見やすい様に半角スペースいれている</span>\n<span class=\"c1\">//   ͣ がでてきます。</span>\n</code></pre></div></div>\n\n<p>ダイアクリティカルマークは番号でいうと <code>768 ~ 879</code> HEXでいうと <code>0x300 ~ 0x36F</code> が該当するみたいです。</p>\n\n<p>逆向きの変換は <code>'A'.codePointAt(0);</code> みたいなStringのAPIを使えば、 <code>A</code> の文字コード。</p>\n\n<p><code>pͪoͣnͬpͣoͥnͭpͣa͡inͥ</code> の文字コードはというと</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\"><div class=\"highlight\"><pre><code><span class=\"dl\">\"</span><span class=\"s2\">pͪoͣnͬpͣoͥnͭpͣa͡inͥ</span><span class=\"dl\">\"</span><span class=\"p\">.</span><span class=\"nx\">codePointAt</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"c1\">// 112 普通のpが一文字目</span>\n<span class=\"dl\">\"</span><span class=\"s2\">pͪoͣnͬpͣoͥnͭpͣa͡inͥ</span><span class=\"dl\">\"</span><span class=\"p\">.</span><span class=\"nx\">codePointAt</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\">// 874 上付きのhが二文字目にきます</span>\n<span class=\"c1\">// 気になる人はChromeのコンソールに右の値を入れましょう ` ${String.fromCharCode(874)} `</span>\n<span class=\"c1\">//  ͪ がでてきます</span>\n</code></pre></div></div>\n\n<p>てな感じになります。</p>\n\n<p>javascriptでいい感じに扱いやすくしたのは <a href=\"https://github.com/ykhirao/qiita/blob/master/ponponpain/src/assets/codes.js\" rel=\"nofollow noopener\" target=\"_blank\">GitHub</a> に乗せているので良かったら使ってください。↓以下のようなコードになります。</p>\n\n<div class=\"code-frame\" data-lang=\"js\"><div class=\"highlight\"><pre><code><span class=\"kd\">const</span> <span class=\"nx\">codes</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span> <span class=\"dl\">\"</span><span class=\"s2\">id</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">hex</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">0x300</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">val</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">̀</span><span class=\"dl\">\"</span> <span class=\"p\">},</span>\n  <span class=\"p\">{</span> <span class=\"dl\">\"</span><span class=\"s2\">id</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"mi\">769</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">hex</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">0x301</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">val</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">́</span><span class=\"dl\">\"</span> <span class=\"p\">},</span>\n  <span class=\"p\">{</span> <span class=\"dl\">\"</span><span class=\"s2\">id</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"mi\">770</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">hex</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">0x302</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">val</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">̂</span><span class=\"dl\">\"</span> <span class=\"p\">},</span>\n  <span class=\"c1\">// ryaku</span>\n<span class=\"p\">]</span>\n</code></pre></div></div>\n\n<p>またフロントエンドの実装はVue.jsでサクッとやったので、参考にする奇特な方がいたらこちらをどうぞ！！<br>\n<a href=\"https://github.com/ykhirao/qiita/blob/master/ponponpain/src/components/DraggableText.vue\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/ykhirao/qiita/blob/master/ponponpain/src/components/DraggableText.vue</a> このあたり。</p>\n\n<p>右から左に文字列を読むアラビア語などのために <code>U+202E</code>という制御コードがあったり、UnicodeがーーとかSJISがーーーとか、正直難しい世界ですよね。</p>\n\n<p>なんで今回文字コードを追ってみようと思ったかというと、弊社でよく文字コードを見る機会があって、具体的には日本郵便とかに出す送り状を印刷している部分がWindows上のC#で書かれたアプリケーションでやっていて、WinのMS系のフォントにない文字コードのものは文字化けして大変なことになるんです。</p>\n\n<p>文字コードの深淵を覗く時、文字コードの深淵もまたあなたを覗いているとニーチェが言ったとか（言ってない）ありますけど、今回いろいろ調べたので少しだけ文字コードと仲良くなれた気がします。</p>\n\n<p>以上。ありがとうございました。</p>\n\n<p>.</p>\n","body":"# pͪoͣnͬpͣoͥnͭpͣa͡inͥの作り方\n\nぽんぽんぺいんを簡単に作るサイトを作ったのでよかったら使ってみてください。\n\n[【ここをクリック】](https://ykhirao.github.io/qiita/ponponpain/dist/)\n\n![タイトルなし.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/972150a9-cc61-3486-cec8-4e73c98c488b.gif)\n\n## ponponpain(haraita-i)とは\n\n画像でいうとこんなやつのこと。\n\n<img width=\"380\" alt=\"スクリーンショット 2019-04-25 2.28.11.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/dee541f3-887f-1aae-978c-1cf092f70398.png\">\n\n今回参考にさせていただきましたが、以下のサイトによくまとまっていると思います。\n\n- [不思議な文字 pͪoͣnͬpͣoͥnͭpͣa͡inͥ | bison's brain at postachio](http://mylog.jp/post/bu-si-yi-nawen-zi-phoanrpaointpaaini)\n- [ぽんぽんぺいん ‐ 通信用語の基礎知識](https://www.wdic.org/w/WDIC/%E3%81%BD%E3%82%93%E3%81%BD%E3%82%93%E3%81%BA%E3%81%84%E3%82%93)\n\nまあ要するに、不思議な上付き文字を組み合わせて、文字に副題（ルビ）をふろうって感じの遊びのことで、昔流行ったみたいです。\n\n今回はクリックだけで上付き文字を加えられるサイトを作ったのでぜひみんなに遊んでほしいなと思っています。\n\n## 投稿について\n\nUbuntuのChromeだと綺麗に表示されないのですが、Twitterだといい感じになるみたいです。\n\n傑作ができたら、 `#pͪoͣnͬpͣoͥnͭpͣa͡inͥを支える技術` とかハッシュタグつけてツイートしてくれるか、Qiitaにコメントいただけると全部見ます！！！\n\n私が作ったのは ponponpain(moudameda)です。電車の中で、この文字を見ていただけると幸いです。\n\n<img width=\"393\" alt=\"スクリーンショット 2019-04-25 2.27.05.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/35e8b3f8-b10c-9422-1a41-df561ac18d2c.png\">\n\n## 使い方\nそんなに難しくないので、こちらの画像を見ていただけるとなんとなくわかるかと思います。もしくは既出のGIF動画を見てからお使いください。\n\n<img width=\"1262\" alt=\"スクリーンショット 2019-04-25 1.09.26.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/9ffef84f-63fa-6cf6-557c-3f216445a476.png\">\n\n\n## おわり\n\nたくさん、遊んでいただけると幸いです！！！\n\n\n---\n\n以下は、ちょっとだけ、真面目な話するよ、読む人は優しい心を持ってみてね！！\n\n---\n\n## 真面目な話\n\nこの上付きの文字は `ダイアクリティカルマーク` というみたいで、日本語の `ﾊﾟ` の `̊` とかそういうもんだと考えればなんとなく文字コードが別にあっても不思議ではないのではないでしょうか。\n\n- [wiki/ダイアクリティカルマーク](https://ja.wikipedia.org/wiki/%E3%83%80%E3%82%A4%E3%82%A2%E3%82%AF%E3%83%AA%E3%83%86%E3%82%A3%E3%82%AB%E3%83%AB%E3%83%9E%E3%83%BC%E3%82%AF)\n\n```javascript\n// Chromeのコンソールで以下のコードを入力してください\n` ${String.fromCharCode(867)} ` // 見やすい様に半角スペースいれている\n//   ͣ がでてきます。\n```\n\nダイアクリティカルマークは番号でいうと `768 ~ 879` HEXでいうと `0x300 ~ 0x36F` が該当するみたいです。\n\n逆向きの変換は `'A'.codePointAt(0);` みたいなStringのAPIを使えば、 `A` の文字コード。\n\n`pͪoͣnͬpͣoͥnͭpͣa͡inͥ` の文字コードはというと\n\n```javascript\n\"pͪoͣnͬpͣoͥnͭpͣa͡inͥ\".codePointAt(0) // 112 普通のpが一文字目\n\"pͪoͣnͬpͣoͥnͭpͣa͡inͥ\".codePointAt(1) // 874 上付きのhが二文字目にきます\n// 気になる人はChromeのコンソールに右の値を入れましょう ` ${String.fromCharCode(874)} `\n//  ͪ がでてきます\n```\n\nてな感じになります。\n\njavascriptでいい感じに扱いやすくしたのは [GitHub](https://github.com/ykhirao/qiita/blob/master/ponponpain/src/assets/codes.js\n) に乗せているので良かったら使ってください。↓以下のようなコードになります。\n\n```js\nconst codes = [\n  { \"id\": 768, \"hex\": \"0x300\", \"val\": \"̀\" },\n  { \"id\": 769, \"hex\": \"0x301\", \"val\": \"́\" },\n  { \"id\": 770, \"hex\": \"0x302\", \"val\": \"̂\" },\n  // ryaku\n]\n```\n\nまたフロントエンドの実装はVue.jsでサクッとやったので、参考にする奇特な方がいたらこちらをどうぞ！！\nhttps://github.com/ykhirao/qiita/blob/master/ponponpain/src/components/DraggableText.vue このあたり。\n\n右から左に文字列を読むアラビア語などのために `U+202E`という制御コードがあったり、UnicodeがーーとかSJISがーーーとか、正直難しい世界ですよね。\n\nなんで今回文字コードを追ってみようと思ったかというと、弊社でよく文字コードを見る機会があって、具体的には日本郵便とかに出す送り状を印刷している部分がWindows上のC#で書かれたアプリケーションでやっていて、WinのMS系のフォントにない文字コードのものは文字化けして大変なことになるんです。\n\n文字コードの深淵を覗く時、文字コードの深淵もまたあなたを覗いているとニーチェが言ったとか（言ってない）ありますけど、今回いろいろ調べたので少しだけ文字コードと仲良くなれた気がします。\n\n以上。ありがとうございました。\n\n\n.\n","coediting":false,"comments_count":9,"created_at":"2019-04-25T11:07:49+09:00","group":null,"id":"9ca1fbd294883e06dbd6","likes_count":656,"private":false,"reactions_count":0,"tags":[{"name":"JavaScript","versions":[]},{"name":"ネタ","versions":[]},{"name":"Vue.js","versions":[]}],"title":"pͪoͣnͬpͣoͥnͭpͣa͡inͥを支える技術","updated_at":"2020-10-20T13:43:57+09:00","url":"https://qiita.com/ykhirao/items/9ca1fbd294883e06dbd6","user":{"description":"Web Developer For 6 years.\r\nPHP/Laravel && (React OR Vue.js)\r\nTypeScript/node.js\r\n\r\n業務委託の依頼とかはWantedlyとかからでお願いします！","facebook_id":"","followees_count":39,"followers_count":94,"github_login_name":"ykhirao","id":"ykhirao","items_count":57,"linkedin_id":"","location":"Tokyo, Japan","name":"yk","organization":"","permanent_id":112929,"profile_image_url":"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/profile-images/1639030792","team_only":false,"twitter_screen_name":"yk_hirao","website_url":"https://www.wantedly.com/id/ykhirao"},"page_views_count":null,"team_membership":null}},"path":"posts/9ca1fbd294883e06dbd6"}
