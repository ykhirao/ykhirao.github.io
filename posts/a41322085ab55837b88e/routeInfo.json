{"template":"__react_static_root__/src/components/QiitaPost","sharedHashesByProp":{},"data":{"post":{"rendered_body":"\n<h1>\n<span id=\"jsonを返す無料apiを3分で作る方法\" class=\"fragment\"></span><a href=\"#json%E3%82%92%E8%BF%94%E3%81%99%E7%84%A1%E6%96%99api%E3%82%923%E5%88%86%E3%81%A7%E4%BD%9C%E3%82%8B%E6%96%B9%E6%B3%95\"><i class=\"fa fa-link\"></i></a>JSONを返す無料APIを3分で作る方法</h1>\n\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>この記事の読書対象者は以下のようなエンジニアです。</p>\n\n<ul>\n<li>Ajaxで叩くAPIを用意してあげようとしている新人教育中の優しい先輩</li>\n<li>なんかのサンプルアプリを作っているときのモックとして</li>\n</ul>\n\n<h2>\n<span id=\"api作成\" class=\"fragment\"></span><a href=\"#api%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>API作成</h2>\n\n<ul>\n<li>実際に通信する\n\n<ul>\n<li>Google Apps Script (GAS)で作成する</li>\n<li>MyJson (既存のWebサービス)でJsonを登録する</li>\n</ul>\n</li>\n<li>ローカルサーバーを立てる\n\n<ul>\n<li>json-server（npmで導入する）</li>\n</ul>\n</li>\n</ul>\n\n<h3>\n<span id=\"google-apps-scriptgasを使う\" class=\"fragment\"></span><a href=\"#google-apps-scriptgas%E3%82%92%E4%BD%BF%E3%81%86\"><i class=\"fa fa-link\"></i></a>Google Apps Script(GAS)を使う</h3>\n\n<p>以下のコードをGASに貼り付けて、「公開」「ウェブアプリケーションとして導入」を押して発行されたURLを叩くと文字列のJSONが返ってくる。</p>\n\n<div class=\"code-frame\" data-lang=\"js\"><div class=\"highlight\"><pre><code><span class=\"kd\">function</span> <span class=\"nx\">doGet</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">ContentService</span><span class=\"p\">.</span><span class=\"nx\">createTextOutput</span><span class=\"p\">(</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">({</span><span class=\"dl\">'</span><span class=\"s1\">name</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">Qiita</span><span class=\"dl\">'</span><span class=\"p\">}))</span>\n    <span class=\"p\">.</span><span class=\"nx\">setMimeType</span><span class=\"p\">(</span><span class=\"nx\">ContentService</span><span class=\"p\">.</span><span class=\"nx\">MimeType</span><span class=\"p\">.</span><span class=\"nx\">JSON</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><a href=\"https://camo.qiitausercontent.com/10ada0fa694393dc7ed87f86622a66b57b2601e4/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3131323932392f32346136366337342d363837612d623138612d303137662d3561613539643065373362362e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2F24a66c74-687a-b18a-017f-5aa59d0e73b6.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2d52715e9c82d9c03c396c7d3b6be25e\" alt=\"スクリーンショット\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/112929/24a66c74-687a-b18a-017f-5aa59d0e73b6.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2F24a66c74-687a-b18a-017f-5aa59d0e73b6.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=85f86a6e8f2cf6c538526c30a9cb2bcc 1x\" loading=\"lazy\"></a></p>\n\n<p>参考： <a href=\"https://developers.google.com/apps-script/guides/content#serving_json_from_scripts\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://developers.google.com/apps-script/guides/content#serving_json_from_scripts</a></p>\n\n<p>GetメソッドにtokenをつけてたらJsonを返すとかそういう処理もできるのでオススメ！</p>\n\n<h3>\n<span id=\"json-okibaというwebサービスを使う\" class=\"fragment\"></span><a href=\"#json-okiba%E3%81%A8%E3%81%84%E3%81%86web%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E4%BD%BF%E3%81%86\"><i class=\"fa fa-link\"></i></a>Json okibaというWebサービスを使う</h3>\n\n<p>日本語で使えるサイトです。保存する前に動的にで正しいJSON形式かチェックしてくれます。<a href=\"https://json.okiba.me/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://json.okiba.me/</a></p>\n\n<div class=\"code-frame\" data-lang=\"shell\"><div class=\"highlight\"><pre><code>curl https://jsondata.okiba.me/v1/json/z9Hu6180423002129\n<span class=\"c\"># {</span>\n<span class=\"c\"># \"name\": \"ジェイソン\",</span>\n<span class=\"c\"># \"movie\": \"13日の金曜日\"</span>\n<span class=\"c\"># }</span>\n</code></pre></div></div>\n\n<p>情報ありがとうございます <a href=\"/imai\" class=\"user-mention js-hovercard\" title=\"imai\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"imai\">@imai</a> さん</p>\n\n<h3>\n<span id=\"localにjson-serverを立てて使う\" class=\"fragment\"></span><a href=\"#local%E3%81%ABjson-server%E3%82%92%E7%AB%8B%E3%81%A6%E3%81%A6%E4%BD%BF%E3%81%86\"><i class=\"fa fa-link\"></i></a>localに<a href=\"https://github.com/typicode/json-server\" rel=\"nofollow noopener\" target=\"_blank\">json-server</a>を立てて使う</h3>\n\n<p>Node.js等を使える人はjson-serverがおすすめみたいです！</p>\n\n<p>参考：<a href=\"https://qiita.com/futoase/items/2859a60c8b240da70572\" id=\"reference-efbc2bde0ad5d33e4eaf\">JSON Serverを使って手っ取り早くWebAPIのモックアップを作る</a></p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>npm install -g json-server\n</code></pre></div></div>\n\n<p>npmインストールとか必要だけどAPIモックにするのにはすごく便利なのでオススメ！</p>\n\n<h3>\n<span id=\"api-gatewayのmockを使う\" class=\"fragment\"></span><a href=\"#api-gateway%E3%81%AEmock%E3%82%92%E4%BD%BF%E3%81%86\"><i class=\"fa fa-link\"></i></a>API GatewayのMockを使う</h3>\n\n<p>awsサービス使っている方は楽</p>\n\n<h3>\n<span id=\"その他\" class=\"fragment\"></span><a href=\"#%E3%81%9D%E3%81%AE%E4%BB%96\"><i class=\"fa fa-link\"></i></a>その他</h3>\n\n<p>Gistを使ってもいけた。</p>\n\n<div class=\"code-frame\" data-lang=\"js\"><div class=\"highlight\"><pre><code><span class=\"kd\">var</span> <span class=\"nx\">url</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">https://api.github.com/gists/3137d994d72040d00a84f422349757d4</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"nx\">fetch</span><span class=\"p\">(</span> <span class=\"nx\">url</span> <span class=\"p\">)</span>\n<span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span> <span class=\"kd\">function</span><span class=\"p\">(</span> <span class=\"nx\">data</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">();</span>\n<span class=\"p\">})</span>\n<span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span> <span class=\"kd\">function</span><span class=\"p\">(</span> <span class=\"nx\">json</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span> <span class=\"nx\">json</span><span class=\"p\">.</span><span class=\"nx\">files</span><span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">sample.json</span><span class=\"dl\">'</span><span class=\"p\">].</span><span class=\"nx\">content</span> <span class=\"p\">);</span>\n<span class=\"p\">})</span>\n</code></pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"shell\"><div class=\"highlight\"><pre><code><span class=\"c\"># json</span>\ncurl https://api.github.com/gists/3137d994d72040d00a84f422349757d4\n</code></pre></div></div>\n\n<p>お手軽ではないです。</p>\n\n<h2>\n<span id=\"終わりに\" class=\"fragment\"></span><a href=\"#%E7%B5%82%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>終わりに</h2>\n\n<p>AjaxとかAPIとかよくわかってなかった時期がありました。それくらいのレベルの人に教えるときに先輩エンジニアが「API作っといたのでこれ自由に叩いていいよ」って感じの世界素敵ですね！！</p>\n\n<p>それでは素敵なAPIライフを！！</p>\n","body":"# JSONを返す無料APIを3分で作る方法\n\n## はじめに\n\nこの記事の読書対象者は以下のようなエンジニアです。\n\n* Ajaxで叩くAPIを用意してあげようとしている新人教育中の優しい先輩\n* なんかのサンプルアプリを作っているときのモックとして\n\n## API作成\n\n* 実際に通信する\n  * Google Apps Script (GAS)で作成する\n  * MyJson (既存のWebサービス)でJsonを登録する\n* ローカルサーバーを立てる\n  * json-server（npmで導入する）\n\n### Google Apps Script(GAS)を使う\n\n以下のコードをGASに貼り付けて、「公開」「ウェブアプリケーションとして導入」を押して発行されたURLを叩くと文字列のJSONが返ってくる。\n\n```js\nfunction doGet(e) {\n  return ContentService.createTextOutput(JSON.stringify({'name': 'Qiita'}))\n    .setMimeType(ContentService.MimeType.JSON);\n}\n```\n\n![スクリーンショット](https://qiita-image-store.s3.amazonaws.com/0/112929/24a66c74-687a-b18a-017f-5aa59d0e73b6.jpeg)\n\n参考： <https://developers.google.com/apps-script/guides/content#serving_json_from_scripts>\n\nGetメソッドにtokenをつけてたらJsonを返すとかそういう処理もできるのでオススメ！\n\n### Json okibaというWebサービスを使う\n\n日本語で使えるサイトです。保存する前に動的にで正しいJSON形式かチェックしてくれます。<https://json.okiba.me/>\n\n```shell\ncurl https://jsondata.okiba.me/v1/json/z9Hu6180423002129\n# {\n# \"name\": \"ジェイソン\",\n# \"movie\": \"13日の金曜日\"\n# }\n```\n\n情報ありがとうございます @imai さん\n\n### localに[json-server](https://github.com/typicode/json-server)を立てて使う\n\nNode.js等を使える人はjson-serverがおすすめみたいです！\n\n参考：[JSON Serverを使って手っ取り早くWebAPIのモックアップを作る](https://qiita.com/futoase/items/2859a60c8b240da70572)\n\n```\nnpm install -g json-server\n```\n\nnpmインストールとか必要だけどAPIモックにするのにはすごく便利なのでオススメ！\n\n### API GatewayのMockを使う\n\nawsサービス使っている方は楽\n\n### その他\n\nGistを使ってもいけた。\n\n```js\nvar url = 'https://api.github.com/gists/3137d994d72040d00a84f422349757d4';\n\nfetch( url )\n.then( function( data ) {\n  return data.json();\n})\n.then( function( json ) {\n  console.log( json.files['sample.json'].content );\n})\n```\n\n```shell\n# json\ncurl https://api.github.com/gists/3137d994d72040d00a84f422349757d4\n```\n\nお手軽ではないです。\n\n## 終わりに\n\nAjaxとかAPIとかよくわかってなかった時期がありました。それくらいのレベルの人に教えるときに先輩エンジニアが「API作っといたのでこれ自由に叩いていいよ」って感じの世界素敵ですね！！\n\nそれでは素敵なAPIライフを！！\n","coediting":false,"comments_count":5,"created_at":"2018-03-05T02:36:35+09:00","group":null,"id":"a41322085ab55837b88e","likes_count":624,"private":false,"reactions_count":0,"tags":[{"name":"JavaScript","versions":[]},{"name":"api","versions":[]},{"name":"GoogleAppsScript","versions":[]},{"name":"JSON","versions":[]}],"title":"JSONを返す無料APIを3分で作る方法","updated_at":"2021-05-19T17:39:35+09:00","url":"https://qiita.com/ykhirao/items/a41322085ab55837b88e","user":{"description":"Web Developer For 6 years.\r\nPHP/Laravel && (React OR Vue.js)\r\nTypeScript/node.js\r\n\r\n業務委託の依頼とかはWantedlyとかからでお願いします！","facebook_id":"","followees_count":39,"followers_count":94,"github_login_name":"ykhirao","id":"ykhirao","items_count":58,"linkedin_id":"","location":"Tokyo, Japan","name":"yk","organization":"","permanent_id":112929,"profile_image_url":"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/profile-images/1639030792","team_only":false,"twitter_screen_name":"yk_hirao","website_url":"https://www.wantedly.com/id/ykhirao"},"page_views_count":null,"team_membership":null}},"path":"posts/a41322085ab55837b88e"}
