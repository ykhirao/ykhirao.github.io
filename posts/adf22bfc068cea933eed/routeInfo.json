{"template":"__react_static_root__/src/components/QiitaPost","sharedHashesByProp":{},"data":{"post":{"rendered_body":"\n<h1>\n<span id=\"vue-meetupでテスト書いている人が少なかったのでオレオレテストを晒してみる-part-1\" class=\"fragment\"></span><a href=\"#vue-meetup%E3%81%A7%E3%83%86%E3%82%B9%E3%83%88%E6%9B%B8%E3%81%84%E3%81%A6%E3%81%84%E3%82%8B%E4%BA%BA%E3%81%8C%E5%B0%91%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%AE%E3%81%A7%E3%82%AA%E3%83%AC%E3%82%AA%E3%83%AC%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E6%99%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B-part-1\"><i class=\"fa fa-link\"></i></a>Vue meetupでテスト書いている人が少なかったのでオレオレテストを晒してみる Part. 1</h1>\n\n<p><a href=\"http://blog.hde.co.jp/entry/2018/03/05/130121\" rel=\"nofollow noopener\" target=\"_blank\">Vue.js ではじめるシングルページアプリケーションの開発 - HDE BLOG</a></p>\n\n<p>みなさん Vue.js Tokyo v-meetup #7 お疲れ様でした！！kazuponさんを始めスタッフのおかげで、100人くらいの募集に300人近くの募集が来て、当日は98%(くらい?)の参加率という異例の盛り上がりを見せているVue.js界隈でしたね！！！</p>\n\n<p>当日の様子はkazuponさんがとぅぎゃったー(?)でまとめているので楽しそうな雰囲気が伝わるかと思います。</p>\n\n<blockquote class=\"twitter-tweet\">\n<p>「Vue.js v-meetup #7 のTweets まとめ」をトゥギャりました。 <a href=\"https://t.co/pBeur6B9z1\" rel=\"nofollow noopener\" target=\"_blank\">https://t.co/pBeur6B9z1</a></p>— 🐤kazupon🐤 (@kazu_pon) <a href=\"https://twitter.com/kazu_pon/status/999449269722468352?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\">2018年5月24日</a>\n</blockquote>\n\n<script async src=\"https://platform.twitter.com/widgets.js\"></script>\n\n<p>テストユーザーとして個人的に一番大好きなLTははりぼてさんのSnapshotによるSVGのテスト [SVG makes your components to testable ] です！！！（私のアイコンはAutocordに対して、はりぼてさんはハッセルで好感度Maxでした）</p>\n\n<p>ただそのときのLTで「私テストやってます」って自信持って手をあげている人が少なかったのが印象的でした😇</p>\n\n<p>なのでVueで簡単なテストのサンプルを書いていくので時間ある方はちょっとずつテストいれていきましょう！！！</p>\n\n<blockquote>\n<p>twadaがよく引用するやつを引用しておく（二重引用）</p>\n\n<p>テストを書く時間がないのではなく、テストを書かないから時間がなくなるのです。 </p>\n\n<p>by <a href=\"https://twitter.com/jwgrenning\" rel=\"nofollow noopener\" target=\"_blank\">James Grenning(@jwgrenning) | Twitter</a></p>\n</blockquote>\n\n<h2>\n<span id=\"環境とアプリの構築\" class=\"fragment\"></span><a href=\"#%E7%92%B0%E5%A2%83%E3%81%A8%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AE%E6%A7%8B%E7%AF%89\"><i class=\"fa fa-link\"></i></a>環境とアプリの構築</h2>\n\n<p>とりあえずこの段階で必要なものは</p>\n\n<ul>\n<li>node</li>\n<li>npm</li>\n<li>vue-cli\n\n<ul>\n<li><code>sudo npm install -g vue-cli</code></li>\n</ul>\n</li>\n</ul>\n\n<p>とします。</p>\n\n<p>バージョン確認（なかったら必要に応じてインストールしてください。）</p>\n\n<div class=\"code-frame\" data-lang=\"console\"><div class=\"highlight\"><pre><code><span class=\"gp\">$</span><span class=\"w\"> </span>node <span class=\"nt\">-v</span>\n<span class=\"go\">v10.1.0\n</span><span class=\"gp\">$</span><span class=\"w\"> </span>npm <span class=\"nt\">-v</span>\n<span class=\"go\">5.6.0\n</span><span class=\"gp\">$</span><span class=\"w\"> </span>vue <span class=\"nt\">-V</span>\n<span class=\"go\">2.9.3\n</span></code></pre></div></div>\n\n<p>次はVueアプリの作成</p>\n\n<div class=\"code-frame\" data-lang=\"console\"><div class=\"highlight\"><pre><code><span class=\"gp\">$</span><span class=\"w\"> </span>vue init webpack-simple vue-test-sample\n<span class=\"gp\">#</span><span class=\"w\"> </span>この後とりあえず全部Enterでもいいかと思います。\n</code></pre></div></div>\n\n<p><code>To get started:</code> とメッセージが出てくるので、その指示に従って以下のコマンドを打ちます。</p>\n\n<div class=\"code-frame\" data-lang=\"console\"><div class=\"highlight\"><pre><code><span class=\"gp\">$</span><span class=\"w\"> </span><span class=\"nb\">cd </span>vue-test-sample\n<span class=\"gp\">$</span><span class=\"w\"> </span>npm <span class=\"nb\">install</span>\n<span class=\"gp\">$</span><span class=\"w\"> </span>npm run dev\n</code></pre></div></div>\n\n<p><a href=\"https://camo.qiitausercontent.com/4d8a26a86ba05344228f1cc3d3e6576fc3a8dbb3/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3131323932392f65316237346161392d336564332d373266322d356331622d3061356136313434646462342e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"1131\" alt=\"スクリーンショット 2018-05-25 0.04.10.jpg\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2Fe1b74aa9-3ed3-72f2-5c1b-0a5a6144ddb4.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=de5edb4799d0d660269cfcb65c65e2bd\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/112929/e1b74aa9-3ed3-72f2-5c1b-0a5a6144ddb4.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2Fe1b74aa9-3ed3-72f2-5c1b-0a5a6144ddb4.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=618d3157b2e907401c1c8108a7459c8d 1x\" loading=\"lazy\"></a></p>\n\n<p>サンプルアプリケーションが立ち上がりましたのですぐに <code>vue-test-utils</code> と <code>jest</code> とかの必要なパッケージを入れましょう！</p>\n\n<p>この<a href=\"https://vue-test-utils.vuejs.org/ja/guides/#jest-%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E5%8D%98%E4%B8%80%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE%E3%83%86%E3%82%B9%E3%83%88\" rel=\"nofollow noopener\" target=\"_blank\">Jest を使用した単一ファイルコンポーネントのテスト</a>を見ながらやるといれれます。</p>\n\n<div class=\"code-frame\" data-lang=\"shell\"><div class=\"highlight\"><pre><code>npm <span class=\"nb\">install</span> <span class=\"nt\">--save-dev</span> jest @vue/test-utils vue-jest babel-jest jest-serializer-vue\n</code></pre></div></div>\n\n<p>vue-test-utilsのドキュメント <a href=\"https://vue-test-utils.vuejs.org/ja/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://vue-test-utils.vuejs.org/ja/</a></p>\n\n<blockquote>\n<p>Jestは、テスト対象のコードのすぐ隣に<strong>tests</strong>ディレクトリを作成することを推奨していますが、適切にテストを構造化することは自由です。 Jestがスナップショットテストを実行するテストファイルの隣に<strong>snapshots</strong>ディレクトリを作成することに注意してください。</p>\n</blockquote>\n\n<p><code>App.vue</code> をテストする場合は同じ階層に <code>__tests__</code> というフォルダを作ってそこにテストを入れるのが一般的です。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>$ tree\n├── package-lock.json\n├── package.json\n├── src\n│   ├── App.vue\n│   ├── __tests__\n│   ├── assets\n│   └── main.js\n└── webpack.config.js\n</code></pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>$ cd src\n$ tree -L 2\n.\n├── App.vue\n├── __tests__\n│   └── App.test.js\n\n</code></pre></div></div>\n\n<p>こんな感じで <code>App.test.js</code> ファイルを作成します。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">App.test.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nx\">describe</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Counter</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n\n  <span class=\"nx\">it</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">run test !!!!!!!!!</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"nx\">toBe</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">})</span>\n</code></pre></div>\n</div>\n\n<p>ここでgitの差分だけHot reloadでテストしてくれるやり方を紹介すると</p>\n\n<div class=\"code-frame\" data-lang=\"console\"><div class=\"highlight\"><pre><code><span class=\"gp\">$</span><span class=\"w\"> </span>git add <span class=\"nb\">.</span>\n<span class=\"gp\">$</span><span class=\"w\"> </span>git commit <span class=\"nt\">-m</span> <span class=\"s2\">\"Init vue-test-app\"</span>\n<span class=\"gp\">#</span><span class=\"w\"> </span>App.test.jsファイルを編集する <span class=\"o\">(</span>空白文字とかでもよし<span class=\"o\">)</span>\n<span class=\"gp\">$</span><span class=\"w\"> </span>yarn jest <span class=\"nt\">--watch</span>\n<span class=\"gp\">#</span><span class=\"w\"> </span>npmだと <span class=\"nt\">--watch</span>が動かないキガスル\n</code></pre></div></div>\n\n<p>最初は <code>› Press Enter to trigger a test run.</code> と出てるので<code>Enter</code>を押してあげてください。そうするとこんな感じで差分があるファイルだけ永遠とテストしてくれるので便利です。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/b5af18b77e7d044e46a94da4ec0579bebf6b484b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3131323932392f37643961663837662d653036652d343836622d333364612d6438306265313666663161372e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"787\" alt=\"スクリーンショット 2018-05-25 1.51.06.jpg\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2F7d9af87f-e06e-486b-33da-d80be16ff1a7.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=8ad6510e2a3a944db1039d01e2534335\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/112929/7d9af87f-e06e-486b-33da-d80be16ff1a7.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2F7d9af87f-e06e-486b-33da-d80be16ff1a7.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=bc64df1ddb98e92bb7f81e08560c75ac 1x\" loading=\"lazy\"></a></p>\n\n<p>とりあえず一旦ここまでにしますがテスト導入お疲れ様でした〜！！！！</p>\n\n<p>少しずつテスト増やしていけるチーム作っていきたいですね〜！！</p>\n\n<h2>\n<span id=\"snapshotテストを追加してみるマークアップを保存して差分を見れくれる\" class=\"fragment\"></span><a href=\"#snapshot%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B%E3%83%9E%E3%83%BC%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E3%82%92%E4%BF%9D%E5%AD%98%E3%81%97%E3%81%A6%E5%B7%AE%E5%88%86%E3%82%92%E8%A6%8B%E3%82%8C%E3%81%8F%E3%82%8C%E3%82%8B\"><i class=\"fa fa-link\"></i></a>snapshotテストを追加してみる（マークアップを保存して差分を見れくれる）</h2>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">App.test.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">shallowMount</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@vue/test-utils</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"nx\">App</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">../App.vue</span><span class=\"dl\">'</span>\n\n<span class=\"nx\">describe</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">App.vue</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">it</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">renders the correct markup</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">shallowMount</span><span class=\"p\">(</span><span class=\"nx\">App</span><span class=\"p\">)</span>\n\n    <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">).</span><span class=\"nx\">toMatchSnapshot</span><span class=\"p\">()</span> <span class=\"c1\">// これだけでスナップショットが作成されます！！！簡単！！</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">})</span>\n</code></pre></div>\n</div>\n\n<p><code>__snapshots__</code> フォルダが作成されています。</p>\n\n<div class=\"code-frame\" data-lang=\"shell-session\"><div class=\"highlight\"><pre><code><span class=\"gp\">yk:vue-test-sample yk$</span><span class=\"w\"> </span><span class=\"nb\">cd </span>src/\n<span class=\"gp\">yk:src yk$</span><span class=\"w\"> </span>tree <span class=\"nt\">-L</span> 2\n<span class=\"c\">.\n</span><span class=\"go\">├── App.vue\n├── __tests__\n│   ├── App.test.js\n│   └── __snapshots__\n├── assets\n│   └── logo.png\n└── main.js\n\n</span></code></pre></div></div>\n\n<p>これをしておくと</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/ae05aa1c1e88b7f003c2281e3b591775f57eb503/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3131323932392f36396264663438302d316433642d393839342d373837662d3363333764366435616161642e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"1061\" alt=\"スクリーンショット 2018-05-25 2.08.30.jpg\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2F69bdf480-1d3d-9894-787f-3c37d6d5aaad.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ce0cf925cc5ef3b8c1ece5d399c1383c\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/112929/69bdf480-1d3d-9894-787f-3c37d6d5aaad.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2F69bdf480-1d3d-9894-787f-3c37d6d5aaad.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=beb507f5bc185acadf79bb44b412ea83 1x\" loading=\"lazy\"></a></p>\n\n<p>予期せぬときに <code>文字を赤色にしちゃった</code> 的な意図せぬ変更が検知できます。</p>\n\n<div class=\"code-frame\" data-lang=\"html\"><div class=\"highlight\"><pre><code><span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"https://vuejs.org\"</span> <span class=\"na\">style=</span><span class=\"s\">\"color:red;\"</span> <span class=\"na\">target=</span><span class=\"s\">\"_blank\"</span><span class=\"nt\">&gt;</span>Core Docs<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n</code></pre></div></div>\n\n<p><code>style=\"color:red;\"</code>に反応して</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/35319b8ffa2dc3e7ac705f5614643c64ece15d0b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3131323932392f65323631393064662d343537622d393733342d333561342d6561363764313562633433322e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"420\" alt=\"スクリーンショット 2018-05-25 2.11.07.jpg\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2Fe26190df-457b-9734-35a4-ea67d15bc432.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=aa13fd3809c2a42982ef0e89a56506aa\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/112929/e26190df-457b-9734-35a4-ea67d15bc432.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2Fe26190df-457b-9734-35a4-ea67d15bc432.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=32fd6328d6ac0bb260a3c64355aa951e 1x\" loading=\"lazy\"></a></p>\n\n<p>差分を検知して <code>色が赤になってるけど大丈夫？</code> って聞いてくれます！便利！！</p>\n\n<p>もちろんマークアップの上書きも簡単で</p>\n\n<div class=\"code-frame\" data-lang=\"shell-session\"><div class=\"highlight\"><pre><code><span class=\"go\"> › 1 snapshot test failed in 1 test suite. Inspect your code changes or press `u` to update them.\n</span></code></pre></div></div>\n\n<p>言葉の通り <code>u</code> を押すだけです。そしたらAll green testになります〜</p>\n\n<h2>\n<span id=\"スナップショットを導入するとき弊社の場合\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%83%8A%E3%83%83%E3%83%97%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E5%BC%8A%E7%A4%BE%E3%81%AE%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>スナップショットを導入するとき（弊社の場合）</h2>\n\n<p>参考になるかまったくわからないのですが（macのプレビューでやっつけで作った図）</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/d43a47a569b9ee69b88144f447a57632207e22fb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3131323932392f32653331343038312d343935382d623062382d653937382d3037386664633130333064622e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"1061\" alt=\"スクリーンショット 2018-05-25 2.08.30.jpg\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2F2e314081-4958-b0b8-e978-078fdc1030db.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=87869ec5747a589d3f3aa1dce93d3eec\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/112929/2e314081-4958-b0b8-e978-078fdc1030db.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F112929%2F2e314081-4958-b0b8-e978-078fdc1030db.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=21d99593c1014262421ef5bdbd0defbb 1x\" loading=\"lazy\"></a></p>\n\n<ul>\n<li>componentsをまとめているcontainer的な要素はsnapshot取らなかったりします\n\n<ul>\n<li>代わりにロジックのテストはしっかり書きます</li>\n</ul>\n</li>\n<li>containerの中の更に小さいcomponentsはpropsを渡す、もしくはemitするだけの構成にして、Snapshotメインのテストを書いたりします\n\n<ul>\n<li>親からのpropsは<code>propsData</code>的なので簡単にstubsを作れるので楽です〜</li>\n</ul>\n</li>\n</ul>\n\n<p>弊社はロジック層とビュー層を意識的に分けてテストしていますが、他にも会社やチームで最適なテストの書き方を見つけるといいかと思います。Rspecとかの歴史にくらべてフロントエンドのテストはまだ歴史も浅く、ベスト・プラクティスが少なめ（ベタープラクティス?）なので、良い書き方・知恵があれば、みなさんQiitaとかに投稿して知見ためていきましょう〜〜</p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<ul>\n<li>vue-test-utils使ってみよう！！</li>\n<li>Snapshotはマークアップの意図しない変更をキャッチしてくれるよ！！</li>\n<li>テストは文化である。文化は時間をかけて醸造していくものである。</li>\n</ul>\n\n<p>以上。読んでくれてありがとうございました〜〜！！！</p>\n\n<p>p.s. 最近Meetupのときつぶやきたいがためにツイッターを始めたのでフォローしろください（ <a href=\"https://twitter.com/yk_hirao\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://twitter.com/yk_hirao</a> ）</p>\n","body":"# Vue meetupでテスト書いている人が少なかったのでオレオレテストを晒してみる Part. 1\n\n[Vue.js ではじめるシングルページアプリケーションの開発 - HDE BLOG](http://blog.hde.co.jp/entry/2018/03/05/130121)\n\nみなさん Vue.js Tokyo v-meetup #7 お疲れ様でした！！kazuponさんを始めスタッフのおかげで、100人くらいの募集に300人近くの募集が来て、当日は98%(くらい?)の参加率という異例の盛り上がりを見せているVue.js界隈でしたね！！！\n\n当日の様子はkazuponさんがとぅぎゃったー(?)でまとめているので楽しそうな雰囲気が伝わるかと思います。\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">「Vue.js v-meetup #7 のTweets まとめ」をトゥギャりました。 <a href=\"https://t.co/pBeur6B9z1\">https://t.co/pBeur6B9z1</a></p>&mdash; 🐤kazupon🐤 (@kazu_pon) <a href=\"https://twitter.com/kazu_pon/status/999449269722468352?ref_src=twsrc%5Etfw\">2018年5月24日</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\nテストユーザーとして個人的に一番大好きなLTははりぼてさんのSnapshotによるSVGのテスト [SVG makes your components to testable ] です！！！（私のアイコンはAutocordに対して、はりぼてさんはハッセルで好感度Maxでした）\n\nただそのときのLTで「私テストやってます」って自信持って手をあげている人が少なかったのが印象的でした😇\n\nなのでVueで簡単なテストのサンプルを書いていくので時間ある方はちょっとずつテストいれていきましょう！！！\n\n> twadaがよく引用するやつを引用しておく（二重引用）\n> \n> テストを書く時間がないのではなく、テストを書かないから時間がなくなるのです。 \n> \n> by [James Grenning(@jwgrenning) | Twitter](https://twitter.com/jwgrenning)\n\n## 環境とアプリの構築\n\nとりあえずこの段階で必要なものは\n\n- node\n- npm\n- vue-cli\n  - `sudo npm install -g vue-cli`\n\nとします。\n\nバージョン確認（なかったら必要に応じてインストールしてください。）\n\n```console\n$ node -v\nv10.1.0\n$ npm -v\n5.6.0\n$ vue -V\n2.9.3\n```\n\n次はVueアプリの作成\n\n```console\n$ vue init webpack-simple vue-test-sample\n# この後とりあえず全部Enterでもいいかと思います。\n```\n\n`To get started:` とメッセージが出てくるので、その指示に従って以下のコマンドを打ちます。\n\n```console\n$ cd vue-test-sample\n$ npm install\n$ npm run dev\n```\n\n<img width=\"1131\" alt=\"スクリーンショット 2018-05-25 0.04.10.jpg\" src=\"https://qiita-image-store.s3.amazonaws.com/0/112929/e1b74aa9-3ed3-72f2-5c1b-0a5a6144ddb4.jpeg\">\n\nサンプルアプリケーションが立ち上がりましたのですぐに `vue-test-utils` と `jest` とかの必要なパッケージを入れましょう！\n\nこの[Jest を使用した単一ファイルコンポーネントのテスト](https://vue-test-utils.vuejs.org/ja/guides/#jest-%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E5%8D%98%E4%B8%80%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE%E3%83%86%E3%82%B9%E3%83%88)を見ながらやるといれれます。\n\n```shell\nnpm install --save-dev jest @vue/test-utils vue-jest babel-jest jest-serializer-vue\n```\n\nvue-test-utilsのドキュメント https://vue-test-utils.vuejs.org/ja/\n\n> Jestは、テスト対象のコードのすぐ隣に__tests__ディレクトリを作成することを推奨していますが、適切にテストを構造化することは自由です。 Jestがスナップショットテストを実行するテストファイルの隣に__snapshots__ディレクトリを作成することに注意してください。\n\n`App.vue` をテストする場合は同じ階層に `__tests__` というフォルダを作ってそこにテストを入れるのが一般的です。\n\n```\n$ tree\n├── package-lock.json\n├── package.json\n├── src\n│   ├── App.vue\n│   ├── __tests__\n│   ├── assets\n│   └── main.js\n└── webpack.config.js\n```\n\n```\n$ cd src\n$ tree -L 2\n.\n├── App.vue\n├── __tests__\n│   └── App.test.js\n\n```\n\nこんな感じで `App.test.js` ファイルを作成します。\n\n```App.test.js\ndescribe('Counter', () => {\n\n  it('run test !!!!!!!!!', () => {\n    expect(1).toBe(1)\n  })\n})\n```\n\nここでgitの差分だけHot reloadでテストしてくれるやり方を紹介すると\n\n```console\n$ git add .\n$ git commit -m \"Init vue-test-app\"\n# App.test.jsファイルを編集する (空白文字とかでもよし)\n$ yarn jest --watch\n# npmだと --watchが動かないキガスル\n```\n\n最初は `› Press Enter to trigger a test run.` と出てるので`Enter`を押してあげてください。そうするとこんな感じで差分があるファイルだけ永遠とテストしてくれるので便利です。\n\n<img width=\"787\" alt=\"スクリーンショット 2018-05-25 1.51.06.jpg\" src=\"https://qiita-image-store.s3.amazonaws.com/0/112929/7d9af87f-e06e-486b-33da-d80be16ff1a7.jpeg\">\n\n\nとりあえず一旦ここまでにしますがテスト導入お疲れ様でした〜！！！！\n\n少しずつテスト増やしていけるチーム作っていきたいですね〜！！\n\n## snapshotテストを追加してみる（マークアップを保存して差分を見れくれる）\n\n```App.test.js\nimport { shallowMount } from '@vue/test-utils'\nimport App from '../App.vue'\n\ndescribe('App.vue', () => {\n  it('renders the correct markup', () => {\n    const app = shallowMount(App)\n\n    expect(app).toMatchSnapshot() // これだけでスナップショットが作成されます！！！簡単！！\n  })\n})\n```\n\n`__snapshots__` フォルダが作成されています。\n\n```shell-session\nyk:vue-test-sample yk$ cd src/\nyk:src yk$ tree -L 2\n.\n├── App.vue\n├── __tests__\n│   ├── App.test.js\n│   └── __snapshots__\n├── assets\n│   └── logo.png\n└── main.js\n\n```\n\nこれをしておくと\n\n<img width=\"1061\" alt=\"スクリーンショット 2018-05-25 2.08.30.jpg\" src=\"https://qiita-image-store.s3.amazonaws.com/0/112929/69bdf480-1d3d-9894-787f-3c37d6d5aaad.jpeg\">\n\n予期せぬときに `文字を赤色にしちゃった` 的な意図せぬ変更が検知できます。\n\n```html\n<li><a href=\"https://vuejs.org\" style=\"color:red;\" target=\"_blank\">Core Docs</a></li>\n```\n\n`style=\"color:red;\"`に反応して\n\n<img width=\"420\" alt=\"スクリーンショット 2018-05-25 2.11.07.jpg\" src=\"https://qiita-image-store.s3.amazonaws.com/0/112929/e26190df-457b-9734-35a4-ea67d15bc432.jpeg\">\n\n差分を検知して `色が赤になってるけど大丈夫？` って聞いてくれます！便利！！\n\nもちろんマークアップの上書きも簡単で\n\n```shell-session\n › 1 snapshot test failed in 1 test suite. Inspect your code changes or press `u` to update them.\n```\n\n言葉の通り `u` を押すだけです。そしたらAll green testになります〜\n\n## スナップショットを導入するとき（弊社の場合）\n\n参考になるかまったくわからないのですが（macのプレビューでやっつけで作った図）\n\n<img width=\"1061\" alt=\"スクリーンショット 2018-05-25 2.08.30.jpg\" src=\"https://qiita-image-store.s3.amazonaws.com/0/112929/2e314081-4958-b0b8-e978-078fdc1030db.jpeg\">\n\n- componentsをまとめているcontainer的な要素はsnapshot取らなかったりします\n  - 代わりにロジックのテストはしっかり書きます\n- containerの中の更に小さいcomponentsはpropsを渡す、もしくはemitするだけの構成にして、Snapshotメインのテストを書いたりします\n    - 親からのpropsは`propsData`的なので簡単にstubsを作れるので楽です〜\n\n弊社はロジック層とビュー層を意識的に分けてテストしていますが、他にも会社やチームで最適なテストの書き方を見つけるといいかと思います。Rspecとかの歴史にくらべてフロントエンドのテストはまだ歴史も浅く、ベスト・プラクティスが少なめ（ベタープラクティス?）なので、良い書き方・知恵があれば、みなさんQiitaとかに投稿して知見ためていきましょう〜〜\n\n## まとめ\n\n- vue-test-utils使ってみよう！！\n- Snapshotはマークアップの意図しない変更をキャッチしてくれるよ！！\n- テストは文化である。文化は時間をかけて醸造していくものである。\n\n以上。読んでくれてありがとうございました〜〜！！！\n\np.s. 最近Meetupのときつぶやきたいがためにツイッターを始めたのでフォローしろください（ https://twitter.com/yk_hirao ）\n\n","coediting":false,"comments_count":0,"created_at":"2018-05-25T10:03:59+09:00","group":null,"id":"adf22bfc068cea933eed","likes_count":110,"private":false,"reactions_count":0,"tags":[{"name":"JavaScript","versions":[]},{"name":"test","versions":[]},{"name":"Vue.js","versions":[]},{"name":"vue-cli","versions":[]},{"name":"vue-test-utils","versions":[]}],"title":"Vue meetupでテスト書いている人が少なかったのでオレオレテストを晒してみる Part. 1","updated_at":"2019-05-10T13:02:00+09:00","url":"https://qiita.com/ykhirao/items/adf22bfc068cea933eed","user":{"description":"Web Developer For 6 years.\r\nPHP/Laravel && (React OR Vue.js)\r\nTypeScript/node.js\r\n\r\n業務委託の依頼とかはWantedlyとかからでお願いします！","facebook_id":"","followees_count":38,"followers_count":95,"github_login_name":"ykhirao","id":"ykhirao","items_count":58,"linkedin_id":"","location":"Tokyo, Japan","name":"yk","organization":"","permanent_id":112929,"profile_image_url":"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/profile-images/1639030792","team_only":false,"twitter_screen_name":"yk_hirao","website_url":"https://www.wantedly.com/id/ykhirao"},"page_views_count":null,"team_membership":null}},"path":"posts/adf22bfc068cea933eed"}
