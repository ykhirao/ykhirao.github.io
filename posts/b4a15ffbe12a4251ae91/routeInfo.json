{"template":"__react_static_root__/src/components/QiitaPost","sharedHashesByProp":{},"data":{"post":{"rendered_body":"<h1 data-sourcepos=\"1:1-1:14\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n<p data-sourcepos=\"3:1-4:101\">最近短縮URLの事故とかよく見るので、エンジニアとしてなんだかなあと思っていて、Firebaseで短縮URLサービス作ったので、クローンして使ってほしいです。<br>\nよいと思ったらいいね、保存、同僚とかに拡散していただけると。。。<img alt=\":bow:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f647.png\" title=\":bow:\" width=\"20\" loading=\"lazy\"></p>\n<h2 data-sourcepos=\"6:1-6:54\">\n<span id=\"2023年11月現在短縮urlを取り巻く現状\" class=\"fragment\"></span><a href=\"#2023%E5%B9%B411%E6%9C%88%E7%8F%BE%E5%9C%A8%E7%9F%AD%E7%B8%AEurl%E3%82%92%E5%8F%96%E3%82%8A%E5%B7%BB%E3%81%8F%E7%8F%BE%E7%8A%B6\"><i class=\"fa fa-link\"></i></a>2023年11月現在、短縮URLを取り巻く現状</h2>\n<h3 data-sourcepos=\"8:1-8:79\">\n<span id=\"フィッシング詐欺に利用されたとして世間を騒がせた\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%82%A3%E3%83%83%E3%82%B7%E3%83%B3%E3%82%B0%E8%A9%90%E6%AC%BA%E3%81%AB%E5%88%A9%E7%94%A8%E3%81%95%E3%82%8C%E3%81%9F%E3%81%A8%E3%81%97%E3%81%A6%E4%B8%96%E9%96%93%E3%82%92%E9%A8%92%E3%81%8C%E3%81%9B%E3%81%9F\"><i class=\"fa fa-link\"></i></a>フィッシング詐欺に利用された？として世間を騒がせた</h3>\n<p data-sourcepos=\"10:1-10:189\">現状フリーの短縮URLサイト使って多くの被害事例が出ている状況で、多くの人に見てほしいので拡散されやすそうなタイトルになってます。</p>\n<ul data-sourcepos=\"12:1-14:0\">\n<li data-sourcepos=\"12:1-12:221\"><a href=\"https://www.itmedia.co.jp/news/articles/2311/15/news194.html\" rel=\"nofollow noopener\" target=\"_blank\">原因は「短縮URL」か？　QRコードから不正サイトへ誘導される事例が相次ぐ　オートバックスセブン、学習院大学も</a></li>\n<li data-sourcepos=\"13:1-14:0\"><a href=\"https://www.soumu.go.jp/main_sosiki/cybersecurity/kokumin/enduser/enduser_security02_05.html\" rel=\"nofollow noopener\" target=\"_blank\">SNS利用上の注意点｜国民のためのサイバーセキュリティサイト</a></li>\n</ul>\n<p data-sourcepos=\"15:1-15:306\">今回の先日起きたフィッシング詐欺の問題は短縮URLそのものではなく、短縮URLを運営しているサイトさんが「サーバー費用捻出などのため」などに利用していたGoogle広告にフィッシング詐欺広告が紛れていた、という認識です。</p>\n<p data-sourcepos=\"17:1-17:105\">なので今回の件、Google広告が悪いという認識。認識ずれていたらすみません。</p>\n<p data-sourcepos=\"19:1-19:393\">私も法人契約で月額数千円の委託料で短縮URLサイト作ってくれと言われたらホスティング作れますが、一般ユーザーが作う急にアクセス過多になったりするサービスを運営するのはちょっと気が引けます。それを加味しても国産の短縮URLサイト運営している人たちはすごいな、、と思います。</p>\n<h3 data-sourcepos=\"21:1-21:52\">\n<span id=\"短縮urlサイトはどんどん移り変わる\" class=\"fragment\"></span><a href=\"#%E7%9F%AD%E7%B8%AEurl%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AF%E3%81%A9%E3%82%93%E3%81%A9%E3%82%93%E7%A7%BB%E3%82%8A%E5%A4%89%E3%82%8F%E3%82%8B\"><i class=\"fa fa-link\"></i></a>短縮URLサイトはどんどん移り変わる</h3>\n<h4 data-sourcepos=\"23:1-23:48\">\n<span id=\"2019年にサービスが終了したgoogl\" class=\"fragment\"></span><a href=\"#2019%E5%B9%B4%E3%81%AB%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%8C%E7%B5%82%E4%BA%86%E3%81%97%E3%81%9Fgoogl\"><i class=\"fa fa-link\"></i></a>2019年にサービスが終了したgoo.gl</h4>\n<ul data-sourcepos=\"25:1-26:0\">\n<li data-sourcepos=\"25:1-26:0\"><a href=\"https://webtan.impress.co.jp/u/2018/04/05/28895\" rel=\"nofollow noopener\" target=\"_blank\">GoogleのURL短縮サービスが終了（2019年3月末終了済）。代わりとなるサービスはどれ？</a></li>\n</ul>\n<h4 data-sourcepos=\"27:1-27:82\">\n<span id=\"firebase-dynamic-links-は2025-年-8-月-25-日を持って使えなくなる\" class=\"fragment\"></span><a href=\"#firebase-dynamic-links-%E3%81%AF2025-%E5%B9%B4-8-%E6%9C%88-25-%E6%97%A5%E3%82%92%E6%8C%81%E3%81%A3%E3%81%A6%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%8F%E3%81%AA%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Firebase Dynamic Links は2025 年 8 月 25 日を持って使えなくなる</h4>\n<ul data-sourcepos=\"28:1-29:0\">\n<li data-sourcepos=\"28:1-29:0\"><a href=\"https://firebase.google.com/support/dynamic-links-faq?hl=ja\" rel=\"nofollow noopener\" target=\"_blank\">Dynamic Links の非推奨に関するよくある質問  |  Firebase</a></li>\n</ul>\n<h3 data-sourcepos=\"30:1-30:37\">\n<span id=\"その他有名な短縮サイト\" class=\"fragment\"></span><a href=\"#%E3%81%9D%E3%81%AE%E4%BB%96%E6%9C%89%E5%90%8D%E3%81%AA%E7%9F%AD%E7%B8%AE%E3%82%B5%E3%82%A4%E3%83%88\"><i class=\"fa fa-link\"></i></a>その他有名な短縮サイト</h3>\n<ul data-sourcepos=\"32:1-34:0\">\n<li data-sourcepos=\"32:1-34:0\">\n<a href=\"https://bitly.com/\" rel=\"nofollow noopener\" target=\"_blank\">Bitly</a>\n<ul data-sourcepos=\"33:5-34:0\">\n<li data-sourcepos=\"33:5-34:0\">英語でいいなら一番古くて安心感ある</li>\n</ul>\n</li>\n</ul>\n<h3 data-sourcepos=\"35:1-35:37\">\n<span id=\"今回の記事の動機まとめ\" class=\"fragment\"></span><a href=\"#%E4%BB%8A%E5%9B%9E%E3%81%AE%E8%A8%98%E4%BA%8B%E3%81%AE%E5%8B%95%E6%A9%9F%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>今回の記事の動機まとめ</h3>\n<p data-sourcepos=\"37:1-37:252\">なので直接は関係ないですが、法人で営業しているなら短縮URLのサーバー代金は自社でもちましょう（自社でソースコードのホスティング等しましょうよ！）というのが今回の記事です。</p>\n<p data-sourcepos=\"39:1-39:398\">今回の技術は、一日5万クリックとかだと無料で使えるはず（ツイッターに使っても万バズにも耐えられる！）で、超えても100,000クリックあたり$0.06（9円くらい）とかの料金体系になると思います。なので検討の余地はあるかと思います。（Firestoreの料金のみの計算、functions側の計算は別途必要）</p>\n<p data-sourcepos=\"41:1-41:459\">以下ソースコードもMITライセンスで<a href=\"https://github.com/ykhirao/short-url\" rel=\"nofollow noopener\" target=\"_blank\">GitHub上で公開</a>していきますし、Firestore等使うので料金体系の簡単な説明もします、DNS設定できたら自社ドメインでも運用できます。この記事を見た非エンジニアの方は、自社の社内SEの方やエンジニアの方に一度記事を投げてみてください。検討はしてくれるかもしれません。</p>\n<p data-sourcepos=\"44:1-44:208\">MITライセンスで、作成者はコードの責任は取れません。自社内でよく検討のうえ利用してください。<a href=\"https://github.com/ykhirao/short-url/blob/main/LICENSE\" rel=\"nofollow noopener\" target=\"_blank\">ライセンス</a></p>\n<h3 data-sourcepos=\"46:1-46:13\">\n<span id=\"お願い\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E9%A1%98%E3%81%84\"><i class=\"fa fa-link\"></i></a>お願い</h3>\n<p data-sourcepos=\"49:1-49:227\">現状の短縮URL界隈にどうにかならないかなあと思っているエンジニアの方は、ぜひレビューお願いしたいです。遠慮なくGitHubでPR等だしてください。イシューください。</p>\n<p data-sourcepos=\"51:1-51:42\"><iframe id=\"qiita-embed-content__f3342a2f694a9654b2f16fa71f5d4bcc\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f3342a2f694a9654b2f16fa71f5d4bcc\" data-content=\"https%3A%2F%2Fgithub.com%2Fykhirao%2Fshort-url%2Fpulls\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"53:1-53:48\">もしくはTwitterのDMに連絡ください。</p>\n<p data-sourcepos=\"55:1-55:27\"><iframe id=\"qiita-embed-content__6d681c024646e9aa4b03bc5a4be60c61\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6d681c024646e9aa4b03bc5a4be60c61\" data-content=\"https%3A%2F%2Ftwitter.com%2Fykhirao\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"57:1-57:33\">よろしくお願いします。</p>\n<p data-sourcepos=\"59:1-60:122\">スクショしてもfirestoreのUI変更されたら追従できないので結構端折っている箇所あったりします。<br>\nわかりにくいところは気軽にQiitaへの編集リクエストなど出していただけると助かります。</p>\n<p data-sourcepos=\"62:1-62:218\">セキュリティ上気をつける点とかあればQiita上でコメントくだれると、後日見た人が参考になると思うので、ぜひ優しい口調でコメントいただけると助かります。</p>\n<h1 data-sourcepos=\"64:1-64:76\">\n<span id=\"短縮urlをfirebaseでホスティングできる用にコード書いた\" class=\"fragment\"></span><a href=\"#%E7%9F%AD%E7%B8%AEurl%E3%82%92firebase%E3%81%A7%E3%83%9B%E3%82%B9%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%A7%E3%81%8D%E3%82%8B%E7%94%A8%E3%81%AB%E3%82%B3%E3%83%BC%E3%83%89%E6%9B%B8%E3%81%84%E3%81%9F\"><i class=\"fa fa-link\"></i></a>短縮URLをfirebaseでホスティングできる用にコード書いた</h1>\n<h2 data-sourcepos=\"66:1-66:17\">\n<span id=\"firebase周り\" class=\"fragment\"></span><a href=\"#firebase%E5%91%A8%E3%82%8A\"><i class=\"fa fa-link\"></i></a>Firebase周り</h2>\n<p data-sourcepos=\"68:1-68:44\">GoogleのアカウントもっていたらOK</p>\n<h3 data-sourcepos=\"70:1-70:16\">\n<span id=\"cliの設定\" class=\"fragment\"></span><a href=\"#cli%E3%81%AE%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>CLIの設定</h3>\n<p data-sourcepos=\"72:1-72:56\"><iframe id=\"qiita-embed-content__7301cc8260f0057bd1f722cc10dc77cd\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__7301cc8260f0057bd1f722cc10dc77cd\" data-content=\"https%3A%2F%2Ffirebase.google.com%2Fdocs%2Fcli%3Fhl%3Dja%23mac-linux-npm\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<div class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"74:1-81:3\"><div class=\"highlight\"><pre><code><span class=\"gp\">$</span><span class=\"w\"> </span>npm <span class=\"nb\">install</span> <span class=\"nt\">-g</span> firebase-tools\n<span class=\"gp\">$</span><span class=\"w\"> </span>firebase login\n<span class=\"go\">\ni  Firebase optionally collects CLI and Emulator Suite usage and error reporting information to help improve our products. Data is collected in accordance with Google's privacy policy (https://policies.google.com/privacy) and is not used to identify you.\n\n? Allow Firebase to collect CLI and Emulator Suite usage and error reporting information? (Y/n) \n</span></code></pre></div></div>\n<p data-sourcepos=\"83:1-85:47\">上記メッセージはエラーレポートの話なので Y でも n　でもどちらでもいいのでエンター。<br>\nChromeが開きGoogleのサインイン画面になります。使うアカウントでログインしましょう。<br>\nFirebaseCLIに許可を与えてください。</p>\n<h3 data-sourcepos=\"87:1-87:31\">\n<span id=\"プロジェクトの作成\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>プロジェクトの作成</h3>\n<p data-sourcepos=\"89:1-89:36\"><iframe id=\"qiita-embed-content__e1e43d2eb0dcb3106cbc3a5a535e9e18\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e1e43d2eb0dcb3106cbc3a5a535e9e18\" data-content=\"https%3A%2F%2Fconsole.firebase.google.com%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"91:1-91:48\">ここからプロジェクトを作ります。</p>\n<h4 data-sourcepos=\"93:1-93:32\">\n<span id=\"プロジェクトを追加\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E8%BF%BD%E5%8A%A0\"><i class=\"fa fa-link\"></i></a>プロジェクトを追加</h4>\n<h4 data-sourcepos=\"94:1-94:59\">\n<span id=\"まずプロジェクトに名前を付けましょう\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%9A%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E5%90%8D%E5%89%8D%E3%82%92%E4%BB%98%E3%81%91%E3%81%BE%E3%81%97%E3%82%87%E3%81%86\"><i class=\"fa fa-link\"></i></a>まずプロジェクトに名前を付けましょう</h4>\n<ul data-sourcepos=\"96:1-97:0\">\n<li data-sourcepos=\"96:1-97:0\">こちらは短縮URLのIDになるので自社名などをつけましょう</li>\n</ul>\n<p data-sourcepos=\"98:1-98:163\"><a href=\"https://camo.qiitausercontent.com/83406e640c3ea044fefc256db6bdb44767f17a18/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f33616133663361342d313663342d313564652d373462342d3566323137623339393663392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F3aa3f3a4-16c4-15de-74b4-5f217b3996c9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2219585ee452fe1f244c38030e73bf6a\" alt=\"スクリーンショット 2023-11-20 13.02.29.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/3aa3f3a4-16c4-15de-74b4-5f217b3996c9.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F3aa3f3a4-16c4-15de-74b4-5f217b3996c9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f9dfbc84e81a4d131b7f9a62ce29f0cb 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"100:1-101:206\">今回は qiita-link をIDとして設定しました。<br>\nこれは後ほど <a href=\"https://qiita-link.web.app/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://qiita-link.web.app/</a> でサイトを作成できます。もちろん自社ドメインとしてDNS設定いじるならここにはこだわる必要ないかもしれません。</p>\n<h4 data-sourcepos=\"103:1-103:35\">\n<span id=\"アナリティクスの設定\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%83%8A%E3%83%AA%E3%83%86%E3%82%A3%E3%82%AF%E3%82%B9%E3%81%AE%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>アナリティクスの設定</h4>\n<p data-sourcepos=\"104:1-104:51\">どちらでもよし。後から設定できる。</p>\n<h4 data-sourcepos=\"106:1-106:32\">\n<span id=\"プロジェクト作成後\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90%E5%BE%8C\"><i class=\"fa fa-link\"></i></a>プロジェクト作成後</h4>\n<p data-sourcepos=\"108:1-108:99\">リダイレクトされて以下のようなページでいろいろ設定できると思います</p>\n<p data-sourcepos=\"110:1-110:63\"><iframe id=\"qiita-embed-content__f4b0b8b1a70932069a96a1f282c0e6d6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f4b0b8b1a70932069a96a1f282c0e6d6\" data-content=\"https%3A%2F%2Fconsole.firebase.google.com%2Fproject%2Fqiita-link%2Foverview\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"112:1-112:163\"><a href=\"https://camo.qiitausercontent.com/7287c7e9915ca2f72bfd38d4fdfe70ec84c6d323/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f31323533613334382d656661382d643365332d383239382d3931376365393737653165392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F1253a348-efa8-d3e3-8298-917ce977e1e9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=cc4e6eec901eb602c93817542731ad38\" alt=\"スクリーンショット 2023-11-20 13.06.10.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/1253a348-efa8-d3e3-8298-917ce977e1e9.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F1253a348-efa8-d3e3-8298-917ce977e1e9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c600f2cc10286214e9430c3894a06cc9 1x\" loading=\"lazy\"></a></p>\n<h4 data-sourcepos=\"114:1-114:23\">\n<span id=\"firestoreの作成\" class=\"fragment\"></span><a href=\"#firestore%E3%81%AE%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>Firestoreの作成</h4>\n<p data-sourcepos=\"116:1-116:90\">「構築」→「Cloud Firestore」→「データベースを作成」しましょう。</p>\n<p data-sourcepos=\"118:1-119:182\">ロケーションは <code>nam5</code> 一択です。<br>\nhostingをrewriteしてfunctionsに飛ばすやりかたはfunctionsがus-central1 のみ対応しているので、firestore側もus-central1に対応するnam5を設定します。</p>\n<p data-sourcepos=\"121:1-121:104\">rewriteせずにfucionsだけで使う場合はURL長くなるので短縮・・とは？となります</p>\n<p data-sourcepos=\"123:1-123:63\"><a href=\"https://s-xxxxxxxxxxx-uc.a.run.app\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://s-xxxxxxxxxxx-uc.a.run.app</a> → https://<em>yourid</em>.web.app</p>\n<p data-sourcepos=\"125:1-125:163\"><a href=\"https://camo.qiitausercontent.com/5aa024708b8f0941f54ebd3ae503cad8c3b60976/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f62343439376666372d656537392d343739352d666132612d6162343463323437663161312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2Fb4497ff7-ee79-4795-fa2a-ab44c247f1a1.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=df3725e2bfa4a64f9b9bdf2f376dd889\" alt=\"スクリーンショット 2023-11-20 13.22.30.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/b4497ff7-ee79-4795-fa2a-ab44c247f1a1.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2Fb4497ff7-ee79-4795-fa2a-ab44c247f1a1.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f910f40137e05912cce43aa0333813a8 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"128:1-128:118\">次へ行き、 <code>本番環境モードで開始する</code> を選択してデータベースを作成してください。</p>\n<p data-sourcepos=\"130:1-130:139\">基本は全員に書き込み、読み込み権限を与えずフロント側からのclient sdkからの取得をすべて塞ぎます。</p>\n<div class=\"code-frame\" data-lang=\"json\" data-sourcepos=\"132:1-134:3\"><div class=\"highlight\"><pre><code><span class=\"err\">allow</span><span class=\"w\"> </span><span class=\"err\">read,</span><span class=\"w\"> </span><span class=\"err\">write:</span><span class=\"w\"> </span><span class=\"err\">if</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"err\">;</span><span class=\"w\">\n</span></code></pre></div></div>\n<p data-sourcepos=\"136:1-136:81\">リンクの作成等は、後ほどBearer認証でAPI受け口を作ります。</p>\n<p data-sourcepos=\"138:1-138:78\">作成したら次はローカルからコードをいじっていきます。</p>\n<h4 data-sourcepos=\"140:1-140:26\">\n<span id=\"課金体系を変更\" class=\"fragment\"></span><a href=\"#%E8%AA%B2%E9%87%91%E4%BD%93%E7%B3%BB%E3%82%92%E5%A4%89%E6%9B%B4\"><i class=\"fa fa-link\"></i></a>課金体系を変更</h4>\n<p data-sourcepos=\"142:1-143:70\">functionsを使うにはblazeにする必要があります。<br>\nこれを設定しないと firebase deployのときに落ちます。</p>\n<p data-sourcepos=\"145:1-145:163\"><a href=\"https://camo.qiitausercontent.com/3603aaf98bb780b50903707c3d2d626066b83188/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f61643632396361372d336462342d616438652d636436632d3231366662656465303031312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2Fad629ca7-3db4-ad8e-cd6c-216fbede0011.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=29b1a721eb65bd521b7670d5ac2bee1f\" alt=\"スクリーンショット 2023-11-20 13.41.30.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/ad629ca7-3db4-ad8e-cd6c-216fbede0011.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2Fad629ca7-3db4-ad8e-cd6c-216fbede0011.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=4146479c90003bbd94f1b5449050058e 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"147:1-147:68\">課金体系はFirebase公式を参考に、現状はスクショ。</p>\n<p data-sourcepos=\"149:1-149:35\"><iframe id=\"qiita-embed-content__132004f47118d13994009684c2ed63b9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__132004f47118d13994009684c2ed63b9\" data-content=\"https%3A%2F%2Ffirebase.google.com%2Fpricing\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"151:1-151:163\"><a href=\"https://camo.qiitausercontent.com/d559770215f2c30c4c7df78a68c4cba422eb04d4/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f38636665373537382d616634622d656330312d626436652d3934306461633531643934662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F8cfe7578-af4b-ec01-bd6e-940dac51d94f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=403af0d5e9aa1d8376f034cb5b22c73c\" alt=\"スクリーンショット 2023-11-20 13.44.21.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/8cfe7578-af4b-ec01-bd6e-940dac51d94f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F8cfe7578-af4b-ec01-bd6e-940dac51d94f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=7c5478ac6ce21e2c584b79cf3551bcbc 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"153:1-153:54\">今回はFirestoreとCloud Functionsを使います。</p>\n<p data-sourcepos=\"155:1-155:180\">Cloud Firestoreは「ドキュメントの読み取り」が一番使う予定ですが「読み取り 5 万件/日までは無料。その後は Google Cloud の料金」です。</p>\n<p data-sourcepos=\"157:1-160:199\">Cloud Functionsは「呼び出し」のあたりでしょうか。呼び出しだけなら月に200万件まで無料です。<br>\n「GB-秒数」「CPU-秒数」でいくらかは課金される可能性はあります。<br>\nFunctionsのメモリ割り当てが128MBで、Functions側の処理が重くて8秒かかったとき 0.128GB * 8 = 約1GB秒と計算されます。<br>\nこれが40万回分無料なので、128MBのfunctionsだと320万秒に実行が無料です。みたいな考え方です、詳細は公式ドキュメントみて計算してみてください。</p>\n<p data-sourcepos=\"162:1-162:413\">ちなみに私がメモリ1GBのバッチサーバーを4台並列で1日18時間くらい走らせてたとき今年4月の料金です。重いメモリを使い、時間のかかる処理をすると課金されますが、低メモリで軽い処理をするくらいならGPU時間とかは影響してこない気はしますが、自社で料金プラン等は検討してから導入してください。</p>\n<p data-sourcepos=\"164:1-164:163\"><a href=\"https://camo.qiitausercontent.com/b320a46a4180108fb4a8ea496fcd40c2ed0044d0/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f34356232656362342d303039382d633634652d393961302d6666333433343632343130622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F45b2ecb4-0098-c64e-99a0-ff343462410b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=067e7c195be46ddc8335974657c1171e\" alt=\"スクリーンショット 2023-11-20 13.50.02.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/45b2ecb4-0098-c64e-99a0-ff343462410b.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F45b2ecb4-0098-c64e-99a0-ff343462410b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=945522962966c61c60dc0ebc4b1fa215 1x\" loading=\"lazy\"></a></p>\n<h2 data-sourcepos=\"169:1-169:41\">\n<span id=\"npm-nodejs環境のインストール\" class=\"fragment\"></span><a href=\"#npm-nodejs%E7%92%B0%E5%A2%83%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>npm, nodejs環境のインストール</h2>\n<p data-sourcepos=\"171:1-172:94\">他記事に任せます。<br>\n<a href=\"https://nodejs.org/en\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://nodejs.org/en</a> からLTSバージョンのダウンロードでよい気がします。</p>\n<h2 data-sourcepos=\"174:1-174:42\">\n<span id=\"ソースコードのダウンロード\" class=\"fragment\"></span><a href=\"#%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AE%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>ソースコードのダウンロード</h2>\n<p data-sourcepos=\"176:1-176:156\"><a href=\"https://github.com/ykhirao/short-url\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/ykhirao/short-url</a> からソースコードをダウンロードしてくる。画面から <code>Code → Download Zip</code> か <code>git clone</code> で。</p>\n<div class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"178:1-180:3\"><div class=\"highlight\"><pre><code><span class=\"go\">git clone https://github.com/ykhirao/short-url.git\n</span></code></pre></div></div>\n<p data-sourcepos=\"182:1-183:36\">ダウンロードしたレポジトリにterminalから入って、firebaseと接続します。<br>\n選択は以下のような感じ。</p>\n<div class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"185:1-192:3\"><div class=\"highlight\"><pre><code><span class=\"go\">yk@yk-2 qiita-sample % firebase use --add\n? Which project do you want to add? qiita-link\n? What alias do you want to use for this project? (e.g. staging) staging\n\nCreated alias shortlink for qiita-link.\nNow using alias shortlink (qiita-link)\n</span></code></pre></div></div>\n<p data-sourcepos=\"194:1-194:45\">functionsに行ってデプロイします。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"196:1-214:3\"><div class=\"highlight\"><pre><code>$ cd functions\n$ npm ci\n\n# たちあがるか検証\n$ firebase serve    \n（中略）\n(http://localhost:5001/qiita-link/us-central1/s).\n\n# ↑立ち上がりが確認できたら、CMD + C か CMD + D でタスクキルする\n\n# 初回はhostingもあるのでこちらでデプロイします\n$ firebase deploy\n\n# 次回からは以下でfunctionsだけデプロイでOK\n$ npm run deploy\n（中略）\nHosting URL: https://qiita-link.web.app\n</code></pre></div></div>\n<p data-sourcepos=\"216:1-216:94\">これでもう使えるようになりました！！ <img alt=\":tada:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f389.png\" title=\":tada:\" width=\"20\" loading=\"lazy\">  <img alt=\":tada:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f389.png\" title=\":tada:\" width=\"20\" loading=\"lazy\">  <img alt=\":tada:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f389.png\" title=\":tada:\" width=\"20\" loading=\"lazy\">  <img alt=\":tada:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f389.png\" title=\":tada:\" width=\"20\" loading=\"lazy\">  <img alt=\":tada:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f389.png\" title=\":tada:\" width=\"20\" loading=\"lazy\"></p>\n<p data-sourcepos=\"219:1-219:96\"><code>Hosting URL: https://qiita-link.web.app</code> となっていたURLにアクセスしましょう。</p>\n<p data-sourcepos=\"221:1-221:27\"><iframe id=\"qiita-embed-content__2b65cca6bc253f4d28d9056419eecf5c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2b65cca6bc253f4d28d9056419eecf5c\" data-content=\"https%3A%2F%2Fqiita-link.web.app%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"223:1-223:163\"><a href=\"https://camo.qiitausercontent.com/51921cc2ee07f6cd2587bac5174231ad37707b52/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f62303564386134322d376630342d363835382d303133332d3864653766373061386663632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2Fb05d8a42-7f04-6858-0133-8de7f70a8fcc.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=eed1ffd89d0c297643cfa188e467e33c\" alt=\"スクリーンショット 2023-11-20 13.58.18.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/b05d8a42-7f04-6858-0133-8de7f70a8fcc.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2Fb05d8a42-7f04-6858-0133-8de7f70a8fcc.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d93f2c48519dbc0db3271d9bd41359e2 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"225:1-226:178\">こんな感じになっていたらOK。<br>\nこのページは public/index.html を編集したら自社サイトへのリンクを持ってきたりいろいろできるので必要なかたはいじってください。</p>\n<p data-sourcepos=\"228:1-228:76\">あとはfirebaseのコンソールから以下のように設定したらOK</p>\n<p data-sourcepos=\"230:1-230:82\"><iframe id=\"qiita-embed-content__a0e289a756135184fc0135dd634362aa\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a0e289a756135184fc0135dd634362aa\" data-content=\"https%3A%2F%2Fconsole.firebase.google.com%2Fproject%2Fqiita-link%2Ffirestore%2Fdata%2F%7E2Flinks%7E2F1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"232:1-232:163\"><a href=\"https://camo.qiitausercontent.com/ea4017d32bcaef9ed8d012e9fadc6aefef472617/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f32626561323861392d643665332d666666642d356566662d3266373862326236656138372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F2bea28a9-d6e3-fffd-5eff-2f78b2b6ea87.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=aa1e960d4316406496487426c10bcbef\" alt=\"スクリーンショット 2023-11-20 13.59.40.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/2bea28a9-d6e3-fffd-5eff-2f78b2b6ea87.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F2bea28a9-d6e3-fffd-5eff-2f78b2b6ea87.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=5c8a604eb5e94d12639dccb5785b021c 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"234:1-234:205\">この設定の場合は <code>https://qiita-link.web.app/s/1</code> が <code>https://www.google.com/</code> にリダイレクトされたら完成です。qiita-linkは最初に設定した自社のIDなどが入ります。</p>\n<h1 data-sourcepos=\"236:1-236:23\">\n<span id=\"以下開発者向け\" class=\"fragment\"></span><a href=\"#%E4%BB%A5%E4%B8%8B%E9%96%8B%E7%99%BA%E8%80%85%E5%90%91%E3%81%91\"><i class=\"fa fa-link\"></i></a>以下開発者向け</h1>\n<p data-sourcepos=\"238:1-239:83\">VSCodeのRestClient拡張機能向けツールは設定済みです。<br>\nrequest.http を.gitignoreしているのでコピーして使ってください。</p>\n<div class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"241:1-243:3\"><div class=\"highlight\"><pre><code><span class=\"gp\">$</span><span class=\"w\"> </span><span class=\"nb\">cp </span>request.http.sample request.http\n</code></pre></div></div>\n<p data-sourcepos=\"245:1-245:30\">以下が参考になります</p>\n<p data-sourcepos=\"247:1-247:54\"><iframe id=\"qiita-embed-content__48b124ad7242f19538ff7ad3e6cb5f6d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__48b124ad7242f19538ff7ad3e6cb5f6d\" data-content=\"https%3A%2F%2Fqiita.com%2Ftoshi0607%2Fitems%2Fc4440d3fbfa72eac840c\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"249:1-249:32\">\n<span id=\"adminトークン作成\" class=\"fragment\"></span><a href=\"#admin%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>Admin（トークン作成）</h2>\n<p data-sourcepos=\"251:1-251:95\"><a href=\"https://qiita-link.web.app/s/init\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://qiita-link.web.app/s/init</a> にアクセスするもしくはhttpファイルから叩く</p>\n<div class=\"code-frame\" data-lang=\"http\" data-sourcepos=\"253:1-262:3\">\n<div class=\"code-lang\"><span class=\"bold\">request.http</span></div>\n<div class=\"highlight\"><pre><code><span class=\"err\">@local_token = \n@production_token = \n@project_id = qiita-link\n@local_url = http://http://127.0.0.1:5002\n@production_url = https://{{project_id}}.web.app\n\n### INIT\nGET {{production_url}}/s/init\n</span></code></pre></div>\n</div>\n<p data-sourcepos=\"264:1-264:163\"><a href=\"https://camo.qiitausercontent.com/709a9fea1a4c038ef393de40e0918a2ae590407d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f31343437656563392d313136352d643630342d613132312d3234333030373531393363372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F1447eec9-1165-d604-a121-2430075193c7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=29fe3a0781c98a059e093003c562c268\" alt=\"スクリーンショット 2023-11-20 14.05.07.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/1447eec9-1165-d604-a121-2430075193c7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F1447eec9-1165-d604-a121-2430075193c7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=08f18b35d8c6761dc65fb2beb547d335 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"266:1-266:117\">そしたらFirebase上に96桁のTokenが生成されているのでそれをコピーして使ってください。</p>\n<p data-sourcepos=\"268:1-268:163\"><a href=\"https://camo.qiitausercontent.com/c9edae2318563861747153e77c8373a70f143cf6/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f32636132366232332d343530312d613761332d366239332d3730663833396631386134312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F2ca26b23-4501-a7a3-6b93-70f839f18a41.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f85a1226d73194328bb9a1c448849d77\" alt=\"スクリーンショット 2023-11-20 14.06.16.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/2ca26b23-4501-a7a3-6b93-70f839f18a41.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F2ca26b23-4501-a7a3-6b93-70f839f18a41.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d97ecade21524940c08152b810e719ea 1x\" loading=\"lazy\"></a></p>\n<div class=\"code-frame\" data-lang=\"ruby\" data-sourcepos=\"271:1-289:3\"><div class=\"highlight\"><pre><code><span class=\"vi\">@production_token</span> <span class=\"o\">=</span> <span class=\"err\">ここに今作ったトークンをコピペ</span>\n<span class=\"vi\">@project_id</span> <span class=\"o\">=</span> <span class=\"n\">qiita</span><span class=\"o\">-</span><span class=\"n\">link</span>\n<span class=\"vi\">@production_url</span> <span class=\"o\">=</span> <span class=\"n\">https</span><span class=\"ss\">:/</span><span class=\"o\">/</span><span class=\"p\">{{</span><span class=\"n\">project_id</span><span class=\"p\">}}.</span><span class=\"nf\">web</span><span class=\"p\">.</span><span class=\"nf\">app</span>\n\n<span class=\"c1\">### コンテンツ作成</span>\n<span class=\"c1\"># POST {{production_url}}/s</span>\n<span class=\"no\">POST</span> <span class=\"p\">{{</span><span class=\"n\">production_function_url</span><span class=\"p\">}}</span><span class=\"o\">/</span><span class=\"n\">s</span>\n<span class=\"no\">Content</span><span class=\"o\">-</span><span class=\"no\">Type</span><span class=\"p\">:</span> <span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">json</span>\n<span class=\"no\">Authorization</span><span class=\"p\">:</span> <span class=\"no\">Bearer</span> <span class=\"p\">{{</span><span class=\"n\">production_token</span><span class=\"p\">}}</span>\n\n<span class=\"p\">{</span>\n    <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"3\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.google.com/\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"ogps\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"&lt;meta property='og:title' content='我々のWebサイトです' /&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n<p data-sourcepos=\"291:1-291:76\">そしたら次はここのコンテンツ作成の部分でpostします。</p>\n<p data-sourcepos=\"295:1-295:155\">Qiitaのこの記事へのリンクにワンちゃんのOGP付きのリンクを貼りたいときは以下のようなポストをすると使えます。</p>\n<div class=\"code-frame\" data-lang=\"ruby\" data-sourcepos=\"297:1-316:3\"><div class=\"highlight\"><pre><code><span class=\"c1\">### コンテンツ作成</span>\n<span class=\"no\">POST</span> <span class=\"p\">{{</span><span class=\"n\">production_url</span><span class=\"p\">}}</span><span class=\"o\">/</span><span class=\"n\">s</span><span class=\"o\">/</span><span class=\"n\">links</span>\n<span class=\"no\">Content</span><span class=\"o\">-</span><span class=\"no\">Type</span><span class=\"p\">:</span> <span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">json</span>\n<span class=\"no\">Authorization</span><span class=\"p\">:</span> <span class=\"no\">Bearer</span> <span class=\"p\">{{</span><span class=\"n\">production_token</span><span class=\"p\">}}</span>\n\n<span class=\"p\">{</span>\n    <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"6\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://qiita.com/ykhirao/items/b4a15ffbe12a4251ae91\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"ogps\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"&lt;meta property='og:url' content='https://qiita.com/ykhirao/items/b4a15ffbe12a4251ae91' /&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"&lt;meta property='og:type' content='website' /&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"&lt;meta property='og:title' content='自社Qiitaへのリンク' /&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"&lt;meta property='og:description' content='Firebaseで使える短縮URLサイト作ったので使ってほしいという記事です。' /&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"&lt;meta property='og:site_name' content='Qiita | ブログ' /&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"&lt;meta name='twitter:card' content='summary_large_image' /&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"&lt;meta property='og:image' content='https://imgur.com/6xGMXaM.jpg' /&gt;\"</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n<p data-sourcepos=\"318:1-318:163\"><a href=\"https://camo.qiitausercontent.com/92fd9fdde9cef71c2d157b9194c969ffcdb652df/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f61646163303131372d653066622d303633662d333331642d6535663431363735666362392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2Fadac0117-e0fb-063f-331d-e5f41675fcb9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=013cc1f77e4d84fecc519e53b0e7375a\" alt=\"スクリーンショット 2023-11-20 21.18.53.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/adac0117-e0fb-063f-331d-e5f41675fcb9.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2Fadac0117-e0fb-063f-331d-e5f41675fcb9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=10be7ec0cd3c235b62a52500b4154442 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"321:1-322:194\">ツイッターに投稿するとこんな感じで表示されます。いい感じですね。<br>\nリダイレクト先はQiitaのOGPが設定されているはずですが、リダイレクト元に設定できるようにしているのでいい感じに上書きできると思います。</p>\n<p data-sourcepos=\"324:1-324:32\"><code>https://qiita-link.web.app/s/6</code></p>\n<p data-sourcepos=\"327:1-327:30\"><iframe id=\"qiita-embed-content__a29b8ca280a5057ca0884069325d7d69\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a29b8ca280a5057ca0884069325d7d69\" data-content=\"https%3A%2F%2Fqiita-link.web.app%2Fs%2F6\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"329:1-329:52\"><iframe id=\"qiita-embed-content__1ec75219f8b8542179ff1613d09f9ec5\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1ec75219f8b8542179ff1613d09f9ec5\" data-content=\"https%3A%2F%2Fqiita.com%2Fykhirao%2Fitems%2Fb4a15ffbe12a4251ae91\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"331:1-331:45\">以下QiitaとTwitterでのOGPの見え方。</p>\n<p data-sourcepos=\"333:1-333:163\"><a href=\"https://camo.qiitausercontent.com/4c0cd4b2e794e3b7e3fea60b4c89dc7e5e27939b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f35386530663431632d616261632d363432352d353265372d3662326436656530623435372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F58e0f41c-abac-6425-52e7-6b2d6ee0b457.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=bd361a1562cc9e2d556b920b672c015e\" alt=\"スクリーンショット 2023-11-20 21.25.25.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/58e0f41c-abac-6425-52e7-6b2d6ee0b457.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F58e0f41c-abac-6425-52e7-6b2d6ee0b457.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=e0186ab271038fc547913c523675222a 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"335:1-335:163\"><a href=\"https://camo.qiitausercontent.com/2e38e368894ebdf88ff80a66b914a5a51187db3f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f35316537636533612d316666652d303331612d323664302d6466343033363466653031362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F51e7ce3a-1ffe-031a-26d0-df40364fe016.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ee1a77ada178ced2e3ac8f9aa976b799\" alt=\"スクリーンショット 2023-11-20 21.19.38.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/51e7ce3a-1ffe-031a-26d0-df40364fe016.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F51e7ce3a-1ffe-031a-26d0-df40364fe016.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=a405a70d3954c09e862b4963a8eaf568 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"337:1-337:374\">ちなみにFirebaseはGoogle運営（グーグル合同会社の日本法人）なので、短縮リンク使って詐欺とかやって警察沙汰になったらもちろん情報開示されるので、短縮リンク使っていろいろやるのはやめたほうがいいと思います。qiita-link.web.appもすぐに利用停止にさせられると思います。</p>\n<p data-sourcepos=\"339:1-339:220\">Qiitaの下書き中のURLが <a href=\"https://qiita.com/drafts/b4a15ffbe12a4251ae91/edit\" class=\"autolink\">https://qiita.com/drafts/b4a15ffbe12a4251ae91/edit</a> なので 公開URLは <a href=\"https://qiita.com/ykhirao/items/b4a15ffbe12a4251ae91\" class=\"autolink\">https://qiita.com/ykhirao/items/b4a15ffbe12a4251ae91</a> として決め打ちしたがあっているかな <img alt=\":thinking:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f914.png\" title=\":thinking:\" width=\"20\" loading=\"lazy\"></p>\n<h1 data-sourcepos=\"342:1-342:32\">\n<span id=\"ローカル開発について\" class=\"fragment\"></span><a href=\"#%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E9%96%8B%E7%99%BA%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>ローカル開発について</h1>\n<p data-sourcepos=\"344:1-344:119\">PRとか投げてくださる人はある程度 README.md に書いていますが、以下2つターミナルで実行</p>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"346:1-349:3\"><div class=\"highlight\"><pre><code><span class=\"nv\">$ </span>firebase emulators:start\n<span class=\"nv\">$ </span><span class=\"nb\">cd </span>functions <span class=\"o\">&amp;&amp;</span> npm run build:watch\n</code></pre></div></div>\n<p data-sourcepos=\"351:1-351:89\"><a href=\"http://127.0.0.1:4000/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://127.0.0.1:4000/</a> でエミュレーターが立ち上がるので操作します。</p>\n<p data-sourcepos=\"353:1-353:163\"><a href=\"https://camo.qiitausercontent.com/a6f67286337bed049ae3cedab2316a39e07cbfb4/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f36643533313334642d306162342d363637382d393432342d3333343136646232333239332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F6d53134d-0ab4-6678-9424-33416db23293.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=67f988b75fc0a5701de548eb2b2baa22\" alt=\"スクリーンショット 2023-11-20 21.30.07.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/6d53134d-0ab4-6678-9424-33416db23293.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F6d53134d-0ab4-6678-9424-33416db23293.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ebe95ccd99feb4c597c87b3ff012ee61 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"355:1-355:45\">開発のログとかもここに出ます。</p>\n<p data-sourcepos=\"357:1-357:132\">Firestoreのデータもここに格納され、エミュレーター立ち上げるたびにデータの初期化は必要です。</p>\n<details><summary>index.tsのソースコード全文</summary>\n<div class=\"code-frame\" data-lang=\"ts\" data-sourcepos=\"361:1-498:3\"><div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">onRequest</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">firebase-functions/v2/https</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"o\">*</span> <span class=\"k\">as</span> <span class=\"nx\">logger</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">firebase-functions/logger</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"o\">*</span> <span class=\"k\">as</span> <span class=\"nx\">express</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">express</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"o\">*</span> <span class=\"k\">as</span> <span class=\"nx\">admin</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">firebase-admin</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nf\">express</span><span class=\"p\">();</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nf\">use</span><span class=\"p\">(</span><span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nf\">json</span><span class=\"p\">());</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nf\">use</span><span class=\"p\">(</span><span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nf\">urlencoded</span><span class=\"p\">({</span> <span class=\"na\">extended</span><span class=\"p\">:</span> <span class=\"kc\">true</span> <span class=\"p\">}));</span>\n<span class=\"nx\">admin</span><span class=\"p\">.</span><span class=\"nf\">initializeApp</span><span class=\"p\">();</span>\n<span class=\"kd\">const</span> <span class=\"nx\">db</span> <span class=\"o\">=</span> <span class=\"nx\">admin</span><span class=\"p\">.</span><span class=\"nf\">firestore</span><span class=\"p\">();</span>\n<span class=\"kd\">const</span> <span class=\"nx\">LINKS_COL</span> <span class=\"o\">=</span> <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nf\">collection</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">links</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">USERS_COL</span> <span class=\"o\">=</span> <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nf\">collection</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">users</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"p\">{</span>\n  <span class=\"nx\">NODE_ENV</span><span class=\"p\">,</span>\n  <span class=\"nx\">FUNCTIONS_EMULATOR</span><span class=\"p\">,</span>\n  <span class=\"nx\">FIREBASE_DEBUG_MODE</span><span class=\"p\">,</span>\n  <span class=\"nx\">GCLOUD_PROJECT</span><span class=\"p\">,</span>\n<span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">;</span>\n<span class=\"kd\">const</span> <span class=\"nx\">isDevelopment</span> <span class=\"o\">=</span> <span class=\"nx\">NODE_ENV</span> <span class=\"o\">===</span> <span class=\"dl\">'</span><span class=\"s1\">development</span><span class=\"dl\">'</span> <span class=\"o\">||</span> <span class=\"nx\">FUNCTIONS_EMULATOR</span> <span class=\"o\">===</span> <span class=\"dl\">'</span><span class=\"s1\">true</span><span class=\"dl\">'</span> <span class=\"o\">||</span> <span class=\"nx\">FIREBASE_DEBUG_MODE</span> <span class=\"o\">===</span> <span class=\"dl\">'</span><span class=\"s1\">true</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">NOT_EXISTS_URL</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">https://google.com</span><span class=\"dl\">'</span><span class=\"p\">;</span> <span class=\"c1\">// リンク切れなど自社のHPなどに飛ばす場合はここを変更</span>\n<span class=\"kd\">const</span> <span class=\"nx\">CACHE_CONTROL_TIME</span> <span class=\"o\">=</span> <span class=\"nx\">isDevelopment</span> <span class=\"p\">?</span> <span class=\"mi\">0</span> <span class=\"p\">:</span> <span class=\"mi\">300</span><span class=\"p\">;</span> <span class=\"c1\">// 本番は5分間キャッシュさせる</span>\n<span class=\"kd\">const</span> <span class=\"nx\">REDIRECT_TIME</span> <span class=\"o\">=</span> <span class=\"nx\">isDevelopment</span> <span class=\"p\">?</span> <span class=\"mi\">3</span> <span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"c1\">// 本番はリダイレクトまで0秒</span>\n<span class=\"kd\">const</span> <span class=\"nx\">BASE_URL</span> <span class=\"o\">=</span> <span class=\"nx\">isDevelopment</span> <span class=\"p\">?</span> <span class=\"s2\">`http://localhost:5002`</span> <span class=\"p\">:</span> <span class=\"s2\">`https://</span><span class=\"p\">${</span><span class=\"nx\">GCLOUD_PROJECT</span><span class=\"p\">}</span><span class=\"s2\">.web.app`</span><span class=\"p\">;</span>\n\n<span class=\"kd\">type</span> <span class=\"nx\">LinkDocType</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">url</span><span class=\"p\">?:</span> <span class=\"kr\">string</span><span class=\"p\">;</span>\n  <span class=\"nl\">ogps</span><span class=\"p\">?:</span> <span class=\"kr\">string</span><span class=\"p\">[];</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/** Adminユーザーの初期化 */</span>\n<span class=\"kd\">const</span> <span class=\"nx\">initAdminFunc</span> <span class=\"o\">=</span> <span class=\"k\">async </span><span class=\"p\">(</span><span class=\"nx\">_req</span><span class=\"p\">:</span> <span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">Request</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">:</span> <span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">Response</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">adminDoc</span> <span class=\"o\">=</span> <span class=\"nx\">USERS_COL</span><span class=\"p\">.</span><span class=\"nf\">doc</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">admin</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">user</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">adminDoc</span><span class=\"p\">.</span><span class=\"nf\">get</span><span class=\"p\">();</span>\n  <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">.</span><span class=\"nx\">exists</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Already initialized</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// Tokenの強さはお好みで変更お願いします。</span>\n    <span class=\"c1\">// Link作成時にヘッダーの `Authorization: Bearer &lt;token&gt;` で認証する</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"nf\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">crypto</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nf\">randomBytes</span><span class=\"p\">(</span><span class=\"mi\">48</span><span class=\"p\">).</span><span class=\"nf\">toString</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hex</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n    <span class=\"k\">await</span> <span class=\"nx\">adminDoc</span><span class=\"p\">.</span><span class=\"nf\">set</span><span class=\"p\">({</span> <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">admin</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">token</span> <span class=\"p\">});</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Initialized!</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/** リダイレクト処理 */</span>\n<span class=\"kd\">const</span> <span class=\"nx\">redirectFunc</span> <span class=\"o\">=</span> <span class=\"k\">async </span><span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">:</span> <span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">Request</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">:</span> <span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">Response</span><span class=\"p\">):</span> <span class=\"nb\">Promise</span><span class=\"o\">&lt;</span><span class=\"kr\">any</span><span class=\"o\">&gt;</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">id</span> <span class=\"o\">=</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">params</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"o\">||</span> <span class=\"dl\">'</span><span class=\"s1\">0</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">record</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">LINKS_COL</span><span class=\"p\">.</span><span class=\"nf\">doc</span><span class=\"p\">(</span><span class=\"nx\">id</span><span class=\"p\">).</span><span class=\"nf\">get</span><span class=\"p\">();</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"nx\">record</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">,</span> <span class=\"p\">...</span><span class=\"nx\">record</span><span class=\"p\">.</span><span class=\"nf\">data</span><span class=\"p\">()</span> <span class=\"p\">}</span> <span class=\"k\">as</span> <span class=\"nx\">LinkDocType</span><span class=\"p\">;</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">url</span> <span class=\"o\">=</span> <span class=\"nx\">data</span><span class=\"p\">?.</span><span class=\"nx\">url</span> <span class=\"o\">||</span> <span class=\"nx\">NOT_EXISTS_URL</span><span class=\"p\">;</span>\n  <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">url</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">status</span><span class=\"p\">(</span><span class=\"mi\">404</span><span class=\"p\">).</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Not Found</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">ogps</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">?.</span><span class=\"nx\">ogps</span> <span class=\"o\">||</span> <span class=\"p\">[]).</span><span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"nx\">ogp</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">ogp</span><span class=\"p\">).</span><span class=\"nf\">join</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"se\">\\n</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// レスポンスは5分間キャッシュさせる</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">set</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Cache-Control</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"s2\">`public, max-age=</span><span class=\"p\">${</span><span class=\"nx\">CACHE_CONTROL_TIME</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"s2\">`\n  &lt;!DOCTYPE html&gt;\n  &lt;html lang=\"ja\"&gt;\n  &lt;head prefix=\"og: https://ogp.me/ns#\"&gt;\n    &lt;title&gt;Redirect...&lt;/title&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"refresh\" content=\"</span><span class=\"p\">${</span><span class=\"nx\">REDIRECT_TIME</span><span class=\"p\">}</span><span class=\"s2\">;URL='</span><span class=\"p\">${</span><span class=\"nx\">url</span><span class=\"p\">}</span><span class=\"s2\">'\" /&gt;\n    &lt;meta name=\"robots\" content=\"noindex\" /&gt;\n    </span><span class=\"p\">${</span><span class=\"nx\">ogps</span><span class=\"p\">}</span><span class=\"s2\">\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;!--\n      &lt;noscript&gt;\n        Redirect: &lt;a href=\"</span><span class=\"p\">${</span><span class=\"nx\">url</span><span class=\"p\">}</span><span class=\"s2\">\"&gt; </span><span class=\"p\">${</span><span class=\"nx\">url</span><span class=\"p\">}</span><span class=\"s2\"> &lt;/a&gt;\n      &lt;/noscript&gt;\n      &lt;script&gt;\n        window.location = \"</span><span class=\"p\">${</span><span class=\"nx\">url</span><span class=\"p\">}</span><span class=\"s2\">\";\n      &lt;/script&gt;\n    --&gt;\n  &lt;/body&gt;\n  &lt;/html&gt;\n  `</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/** Link作成API */</span>\n<span class=\"kd\">const</span> <span class=\"nx\">createFunc</span> <span class=\"o\">=</span> <span class=\"k\">async </span><span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">:</span> <span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">Request</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">:</span> <span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">Response</span><span class=\"p\">):</span> <span class=\"nb\">Promise</span><span class=\"o\">&lt;</span><span class=\"kr\">any</span><span class=\"o\">&gt;</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">logger</span><span class=\"p\">.</span><span class=\"nf\">info</span><span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">structuredData</span><span class=\"p\">:</span> <span class=\"kc\">true</span> <span class=\"p\">});</span>\n\n  <span class=\"c1\">// Adminが作成されてなければエラー</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">admin</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">USERS_COL</span><span class=\"p\">.</span><span class=\"nf\">doc</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">admin</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nf\">get</span><span class=\"p\">();</span>\n  <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">admin</span><span class=\"p\">.</span><span class=\"nx\">exists</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">status</span><span class=\"p\">(</span><span class=\"mi\">404</span><span class=\"p\">).</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Not Found: Admin user is not initialized</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// Bearer Tokenがなければ認証エラー</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">headers</span><span class=\"p\">.</span><span class=\"nx\">authorization</span><span class=\"p\">?.</span><span class=\"nf\">replace</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Bearer </span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">''</span><span class=\"p\">);</span>\n  <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">token</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">status</span><span class=\"p\">(</span><span class=\"mi\">401</span><span class=\"p\">).</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Unauthorized: token is required</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// Bodyのパース等</span>\n  <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"nx\">reqId</span><span class=\"p\">,</span> <span class=\"nx\">url</span><span class=\"p\">,</span> <span class=\"nx\">ogps</span> <span class=\"o\">=</span> <span class=\"p\">[]</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">;</span>\n\n  <span class=\"c1\">// URLの存在チェック</span>\n  <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">url</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">status</span><span class=\"p\">(</span><span class=\"mi\">400</span><span class=\"p\">).</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Bad Request: url is required</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">id</span> <span class=\"o\">=</span> <span class=\"nx\">reqId</span> <span class=\"o\">||</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nf\">random</span><span class=\"p\">().</span><span class=\"nf\">toString</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">).</span><span class=\"nf\">substring</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// AdminのTokenとBearer Tokenが同じでなければエラー</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">adminToken</span> <span class=\"o\">=</span> <span class=\"nx\">admin</span><span class=\"p\">.</span><span class=\"nf\">data</span><span class=\"p\">()?.</span><span class=\"nx\">token</span><span class=\"p\">;</span>\n  <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">token</span> <span class=\"o\">!==</span> <span class=\"nx\">adminToken</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">status</span><span class=\"p\">(</span><span class=\"mi\">401</span><span class=\"p\">).</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"s2\">`Unauthorized: token is not valid`</span><span class=\"p\">);</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">ref</span> <span class=\"o\">=</span> <span class=\"nx\">LINKS_COL</span><span class=\"p\">.</span><span class=\"nf\">doc</span><span class=\"p\">(</span><span class=\"nx\">id</span><span class=\"p\">);</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">record</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">ref</span><span class=\"p\">.</span><span class=\"nf\">get</span><span class=\"p\">();</span>\n\n  <span class=\"c1\">// 該当IDのレコードがすでに存在していればエラー</span>\n  <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">record</span><span class=\"p\">.</span><span class=\"nx\">exists</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">status</span><span class=\"p\">(</span><span class=\"mi\">403</span><span class=\"p\">).</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"s2\">`Already exists: </span><span class=\"p\">${</span><span class=\"nx\">id</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\n\n  <span class=\"k\">await</span> <span class=\"nx\">ref</span><span class=\"p\">.</span><span class=\"nf\">set</span><span class=\"p\">({</span>\n    <span class=\"nx\">id</span><span class=\"p\">,</span>\n    <span class=\"nx\">url</span><span class=\"p\">,</span>\n    <span class=\"nx\">ogps</span><span class=\"p\">,</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">status</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">).</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"s2\">`OK, created </span><span class=\"p\">${</span><span class=\"nx\">id</span><span class=\"p\">}</span><span class=\"s2\">: </span><span class=\"p\">${</span><span class=\"nx\">BASE_URL</span><span class=\"p\">}</span><span class=\"s2\">/s/</span><span class=\"p\">${</span><span class=\"nx\">id</span><span class=\"p\">}</span><span class=\"s2\"> `</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Hoting用のルーティング</span>\n<span class=\"c1\">// http://127.0.0.1:5002/s</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">/s</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">_req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"mi\">404</span><span class=\"p\">));</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">/s/users/init</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">initAdminFunc</span><span class=\"p\">);</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nf\">post</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">/s/users/init</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">initAdminFunc</span><span class=\"p\">);</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nf\">post</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">/s/links</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">createFunc</span><span class=\"p\">);</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">/s/:id</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">redirectFunc</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Functions側のルーティング, /s をrootとする</span>\n<span class=\"c1\">// http://127.0.0.1:5001/{_YOUR PROJECT_ID_}/us-central1/s → app.get('/', ()=&gt;{})</span>\n<span class=\"c1\">// app.get('/', (_req, res) =&gt; res.send(404));</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nf\">onRequest</span><span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">);</span>\n\n</code></pre></div></div>\n</details>\n<p data-sourcepos=\"502:1-503:51\">Qiita用に1ファイルに書いてますが、普通にfunctionごとに別のファイルにしてよいと思います。<br>\n開発進んだら私もわけると思います。</p>\n<p data-sourcepos=\"505:1-505:74\"><code>NOT_EXISTS_URL</code> は自社ように置き換えて使ってください。</p>\n<p data-sourcepos=\"508:1-508:160\">130行くらいなのでさくっと読んでくれたらわかると思いますが、以下3つの関数くらいしかないので読めると思います。</p>\n<div class=\"code-frame\" data-lang=\"ts\" data-sourcepos=\"510:1-514:3\"><div class=\"highlight\"><pre><code><span class=\"kd\">const</span> <span class=\"nx\">initAdminFunc</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span><span class=\"dl\">'</span><span class=\"s1\">略</span><span class=\"dl\">'</span><span class=\"p\">}</span>\n<span class=\"kd\">const</span> <span class=\"nx\">redirectFunc</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span><span class=\"dl\">'</span><span class=\"s1\">略</span><span class=\"dl\">'</span><span class=\"p\">}</span>\n<span class=\"kd\">const</span> <span class=\"nx\">createFunc</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span><span class=\"dl\">'</span><span class=\"s1\">略</span><span class=\"dl\">'</span><span class=\"p\">}</span>\n</code></pre></div></div>\n<p data-sourcepos=\"517:1-517:131\">firebase.jsonはrewriteのところが重要かと思いますが、ほとんどのケースでこのまま使えるはずです。</p>\n<p data-sourcepos=\"519:1-520:113\">index.htmlを書き換えて使ったりいろいろできるとは思います。<br>\nここにReactのアプリをいれて、ログインして編集できるアドミン画面を作る〜〜等。</p>\n<p data-sourcepos=\"522:1-522:145\">firestore.rules は、Firestoreのclient sdkからの書き込みを　<code>if false</code> にしているので色々設定しなおしてください。</p>\n<p data-sourcepos=\"524:1-525:110\">.firebaserc　は人によって変わるので.gitignoreでコミットしないようにしてます。<br>\nCIでマージされたときにデプロイしたい、とかある人はコミット外してください。</p>\n","body":"# はじめに\n\n最近短縮URLの事故とかよく見るので、エンジニアとしてなんだかなあと思っていて、Firebaseで短縮URLサービス作ったので、クローンして使ってほしいです。\nよいと思ったらいいね、保存、同僚とかに拡散していただけると。。。:bow:\n\n## 2023年11月現在、短縮URLを取り巻く現状\n\n### フィッシング詐欺に利用された？として世間を騒がせた\n\n現状フリーの短縮URLサイト使って多くの被害事例が出ている状況で、多くの人に見てほしいので拡散されやすそうなタイトルになってます。\n\n* [原因は「短縮URL」か？　QRコードから不正サイトへ誘導される事例が相次ぐ　オートバックスセブン、学習院大学も](https://www.itmedia.co.jp/news/articles/2311/15/news194.html)\n* [SNS利用上の注意点｜国民のためのサイバーセキュリティサイト](https://www.soumu.go.jp/main_sosiki/cybersecurity/kokumin/enduser/enduser_security02_05.html)\n\n今回の先日起きたフィッシング詐欺の問題は短縮URLそのものではなく、短縮URLを運営しているサイトさんが「サーバー費用捻出などのため」などに利用していたGoogle広告にフィッシング詐欺広告が紛れていた、という認識です。\n\nなので今回の件、Google広告が悪いという認識。認識ずれていたらすみません。\n\n私も法人契約で月額数千円の委託料で短縮URLサイト作ってくれと言われたらホスティング作れますが、一般ユーザーが作う急にアクセス過多になったりするサービスを運営するのはちょっと気が引けます。それを加味しても国産の短縮URLサイト運営している人たちはすごいな、、と思います。\n\n### 短縮URLサイトはどんどん移り変わる\n\n#### 2019年にサービスが終了したgoo.gl\n\n- [GoogleのURL短縮サービスが終了（2019年3月末終了済）。代わりとなるサービスはどれ？](https://webtan.impress.co.jp/u/2018/04/05/28895)\n\n#### Firebase Dynamic Links は2025 年 8 月 25 日を持って使えなくなる\n- [Dynamic Links の非推奨に関するよくある質問  |  Firebase](https://firebase.google.com/support/dynamic-links-faq?hl=ja)\n\n### その他有名な短縮サイト\n\n* [Bitly](https://bitly.com/)\n    * 英語でいいなら一番古くて安心感ある\n\n### 今回の記事の動機まとめ\n\nなので直接は関係ないですが、法人で営業しているなら短縮URLのサーバー代金は自社でもちましょう（自社でソースコードのホスティング等しましょうよ！）というのが今回の記事です。\n\n今回の技術は、一日5万クリックとかだと無料で使えるはず（ツイッターに使っても万バズにも耐えられる！）で、超えても100,000クリックあたり$0.06（9円くらい）とかの料金体系になると思います。なので検討の余地はあるかと思います。（Firestoreの料金のみの計算、functions側の計算は別途必要）\n\n以下ソースコードもMITライセンスで[GitHub上で公開](https://github.com/ykhirao/short-url)していきますし、Firestore等使うので料金体系の簡単な説明もします、DNS設定できたら自社ドメインでも運用できます。この記事を見た非エンジニアの方は、自社の社内SEの方やエンジニアの方に一度記事を投げてみてください。検討はしてくれるかもしれません。\n\n\nMITライセンスで、作成者はコードの責任は取れません。自社内でよく検討のうえ利用してください。[ライセンス](https://github.com/ykhirao/short-url/blob/main/LICENSE)\n\n### お願い\n\n\n現状の短縮URL界隈にどうにかならないかなあと思っているエンジニアの方は、ぜひレビューお願いしたいです。遠慮なくGitHubでPR等だしてください。イシューください。\n\nhttps://github.com/ykhirao/short-url/pulls\n\nもしくはTwitterのDMに連絡ください。\n\nhttps://twitter.com/ykhirao\n\nよろしくお願いします。\n\nスクショしてもfirestoreのUI変更されたら追従できないので結構端折っている箇所あったりします。\nわかりにくいところは気軽にQiitaへの編集リクエストなど出していただけると助かります。\n\nセキュリティ上気をつける点とかあればQiita上でコメントくだれると、後日見た人が参考になると思うので、ぜひ優しい口調でコメントいただけると助かります。\n\n# 短縮URLをfirebaseでホスティングできる用にコード書いた\n\n## Firebase周り\n\nGoogleのアカウントもっていたらOK\n\n### CLIの設定\n\nhttps://firebase.google.com/docs/cli?hl=ja#mac-linux-npm\n\n```terminal\n$ npm install -g firebase-tools\n$ firebase login\n\ni  Firebase optionally collects CLI and Emulator Suite usage and error reporting information to help improve our products. Data is collected in accordance with Google's privacy policy (https://policies.google.com/privacy) and is not used to identify you.\n\n? Allow Firebase to collect CLI and Emulator Suite usage and error reporting information? (Y/n) \n```\n\n上記メッセージはエラーレポートの話なので Y でも n　でもどちらでもいいのでエンター。\nChromeが開きGoogleのサインイン画面になります。使うアカウントでログインしましょう。\nFirebaseCLIに許可を与えてください。\n\n### プロジェクトの作成\n\nhttps://console.firebase.google.com/\n\nここからプロジェクトを作ります。\n\n#### プロジェクトを追加\n#### まずプロジェクトに名前を付けましょう \n\n* こちらは短縮URLのIDになるので自社名などをつけましょう\n\n![スクリーンショット 2023-11-20 13.02.29.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/3aa3f3a4-16c4-15de-74b4-5f217b3996c9.png)\n\n今回は qiita-link をIDとして設定しました。\nこれは後ほど https://qiita-link.web.app/ でサイトを作成できます。もちろん自社ドメインとしてDNS設定いじるならここにはこだわる必要ないかもしれません。\n\n#### アナリティクスの設定\nどちらでもよし。後から設定できる。\n\n#### プロジェクト作成後\n\nリダイレクトされて以下のようなページでいろいろ設定できると思います\n\nhttps://console.firebase.google.com/project/qiita-link/overview\n\n![スクリーンショット 2023-11-20 13.06.10.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/1253a348-efa8-d3e3-8298-917ce977e1e9.png)\n\n#### Firestoreの作成\n\n「構築」→「Cloud Firestore」→「データベースを作成」しましょう。\n\nロケーションは `nam5` 一択です。\nhostingをrewriteしてfunctionsに飛ばすやりかたはfunctionsがus-central1 のみ対応しているので、firestore側もus-central1に対応するnam5を設定します。\n\nrewriteせずにfucionsだけで使う場合はURL長くなるので短縮・・とは？となります\n\nhttps://s-xxxxxxxxxxx-uc.a.run.app → https://_yourid_.web.app\n\n![スクリーンショット 2023-11-20 13.22.30.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/b4497ff7-ee79-4795-fa2a-ab44c247f1a1.png)\n\n\n次へ行き、 `本番環境モードで開始する` を選択してデータベースを作成してください。\n\n基本は全員に書き込み、読み込み権限を与えずフロント側からのclient sdkからの取得をすべて塞ぎます。\n\n```json\nallow read, write: if false;\n```\n\nリンクの作成等は、後ほどBearer認証でAPI受け口を作ります。\n\n作成したら次はローカルからコードをいじっていきます。\n\n#### 課金体系を変更\n\nfunctionsを使うにはblazeにする必要があります。\nこれを設定しないと firebase deployのときに落ちます。\n\n![スクリーンショット 2023-11-20 13.41.30.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/ad629ca7-3db4-ad8e-cd6c-216fbede0011.png)\n\n課金体系はFirebase公式を参考に、現状はスクショ。\n\nhttps://firebase.google.com/pricing\n\n![スクリーンショット 2023-11-20 13.44.21.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/8cfe7578-af4b-ec01-bd6e-940dac51d94f.png)\n\n今回はFirestoreとCloud Functionsを使います。\n\nCloud Firestoreは「ドキュメントの読み取り」が一番使う予定ですが「読み取り 5 万件/日までは無料。その後は Google Cloud の料金」です。\n\nCloud Functionsは「呼び出し」のあたりでしょうか。呼び出しだけなら月に200万件まで無料です。\n「GB-秒数」「CPU-秒数」でいくらかは課金される可能性はあります。\nFunctionsのメモリ割り当てが128MBで、Functions側の処理が重くて8秒かかったとき 0.128GB * 8 = 約1GB秒と計算されます。\nこれが40万回分無料なので、128MBのfunctionsだと320万秒に実行が無料です。みたいな考え方です、詳細は公式ドキュメントみて計算してみてください。\n\nちなみに私がメモリ1GBのバッチサーバーを4台並列で1日18時間くらい走らせてたとき今年4月の料金です。重いメモリを使い、時間のかかる処理をすると課金されますが、低メモリで軽い処理をするくらいならGPU時間とかは影響してこない気はしますが、自社で料金プラン等は検討してから導入してください。\n\n![スクリーンショット 2023-11-20 13.50.02.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/45b2ecb4-0098-c64e-99a0-ff343462410b.png)\n\n\n\n\n## npm, nodejs環境のインストール\n\n他記事に任せます。\nhttps://nodejs.org/en からLTSバージョンのダウンロードでよい気がします。\n\n## ソースコードのダウンロード\n\nhttps://github.com/ykhirao/short-url からソースコードをダウンロードしてくる。画面から `Code → Download Zip` か `git clone` で。\n\n```terminal\ngit clone https://github.com/ykhirao/short-url.git\n```\n\nダウンロードしたレポジトリにterminalから入って、firebaseと接続します。\n選択は以下のような感じ。\n\n```terminal\nyk@yk-2 qiita-sample % firebase use --add\n? Which project do you want to add? qiita-link\n? What alias do you want to use for this project? (e.g. staging) staging\n\nCreated alias shortlink for qiita-link.\nNow using alias shortlink (qiita-link)\n```\n\nfunctionsに行ってデプロイします。\n\n```\n$ cd functions\n$ npm ci\n\n# たちあがるか検証\n$ firebase serve    \n（中略）\n(http://localhost:5001/qiita-link/us-central1/s).\n\n# ↑立ち上がりが確認できたら、CMD + C か CMD + D でタスクキルする\n\n# 初回はhostingもあるのでこちらでデプロイします\n$ firebase deploy\n\n# 次回からは以下でfunctionsだけデプロイでOK\n$ npm run deploy\n（中略）\nHosting URL: https://qiita-link.web.app\n```\n\nこれでもう使えるようになりました！！ :tada:  :tada:  :tada:  :tada:  :tada: \n\n\n`Hosting URL: https://qiita-link.web.app` となっていたURLにアクセスしましょう。\n\nhttps://qiita-link.web.app/\n\n![スクリーンショット 2023-11-20 13.58.18.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/b05d8a42-7f04-6858-0133-8de7f70a8fcc.png)\n\nこんな感じになっていたらOK。\nこのページは public/index.html を編集したら自社サイトへのリンクを持ってきたりいろいろできるので必要なかたはいじってください。\n\nあとはfirebaseのコンソールから以下のように設定したらOK\n\nhttps://console.firebase.google.com/project/qiita-link/firestore/data/~2Flinks~2F1\n\n![スクリーンショット 2023-11-20 13.59.40.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/2bea28a9-d6e3-fffd-5eff-2f78b2b6ea87.png)\n\nこの設定の場合は `https://qiita-link.web.app/s/1` が `https://www.google.com/` にリダイレクトされたら完成です。qiita-linkは最初に設定した自社のIDなどが入ります。\n\n# 以下開発者向け\n\nVSCodeのRestClient拡張機能向けツールは設定済みです。\nrequest.http を.gitignoreしているのでコピーして使ってください。\n\n```terminal\n$ cp request.http.sample request.http\n```\n\n以下が参考になります\n\nhttps://qiita.com/toshi0607/items/c4440d3fbfa72eac840c\n\n## Admin（トークン作成）\n\nhttps://qiita-link.web.app/s/init にアクセスするもしくはhttpファイルから叩く\n\n```request.http\n@local_token = \n@production_token = \n@project_id = qiita-link\n@local_url = http://http://127.0.0.1:5002\n@production_url = https://{{project_id}}.web.app\n\n### INIT\nGET {{production_url}}/s/init\n```\n\n![スクリーンショット 2023-11-20 14.05.07.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/1447eec9-1165-d604-a121-2430075193c7.png)\n\nそしたらFirebase上に96桁のTokenが生成されているのでそれをコピーして使ってください。\n\n![スクリーンショット 2023-11-20 14.06.16.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/2ca26b23-4501-a7a3-6b93-70f839f18a41.png)\n\n\n```ruby\n@production_token = ここに今作ったトークンをコピペ\n@project_id = qiita-link\n@production_url = https://{{project_id}}.web.app\n\n### コンテンツ作成\n# POST {{production_url}}/s\nPOST {{production_function_url}}/s\nContent-Type: application/json\nAuthorization: Bearer {{production_token}}\n\n{\n    \"id\": \"3\",\n    \"url\": \"https://www.google.com/\",\n    \"ogps\": [\n        \"<meta property='og:title' content='我々のWebサイトです' />\",\n    ]\n}\n```\n\nそしたら次はここのコンテンツ作成の部分でpostします。\n\n\n\nQiitaのこの記事へのリンクにワンちゃんのOGP付きのリンクを貼りたいときは以下のようなポストをすると使えます。\n\n```ruby\n### コンテンツ作成\nPOST {{production_url}}/s/links\nContent-Type: application/json\nAuthorization: Bearer {{production_token}}\n\n{\n    \"id\": \"6\",\n    \"url\": \"https://qiita.com/ykhirao/items/b4a15ffbe12a4251ae91\",\n    \"ogps\": [\n        \"<meta property='og:url' content='https://qiita.com/ykhirao/items/b4a15ffbe12a4251ae91' />\",\n        \"<meta property='og:type' content='website' />\",\n        \"<meta property='og:title' content='自社Qiitaへのリンク' />\",\n        \"<meta property='og:description' content='Firebaseで使える短縮URLサイト作ったので使ってほしいという記事です。' />\",\n        \"<meta property='og:site_name' content='Qiita | ブログ' />\",\n        \"<meta name='twitter:card' content='summary_large_image' />\",\n        \"<meta property='og:image' content='https://imgur.com/6xGMXaM.jpg' />\"\n    ]\n}\n```\n\n![スクリーンショット 2023-11-20 21.18.53.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/adac0117-e0fb-063f-331d-e5f41675fcb9.png)\n\n\nツイッターに投稿するとこんな感じで表示されます。いい感じですね。\nリダイレクト先はQiitaのOGPが設定されているはずですが、リダイレクト元に設定できるようにしているのでいい感じに上書きできると思います。\n\n`https://qiita-link.web.app/s/6`\n\n\nhttps://qiita-link.web.app/s/6\n\nhttps://qiita.com/ykhirao/items/b4a15ffbe12a4251ae91\n\n以下QiitaとTwitterでのOGPの見え方。\n\n![スクリーンショット 2023-11-20 21.25.25.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/58e0f41c-abac-6425-52e7-6b2d6ee0b457.png)\n\n![スクリーンショット 2023-11-20 21.19.38.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/51e7ce3a-1ffe-031a-26d0-df40364fe016.png)\n\nちなみにFirebaseはGoogle運営（グーグル合同会社の日本法人）なので、短縮リンク使って詐欺とかやって警察沙汰になったらもちろん情報開示されるので、短縮リンク使っていろいろやるのはやめたほうがいいと思います。qiita-link.web.appもすぐに利用停止にさせられると思います。\n\nQiitaの下書き中のURLが https://qiita.com/drafts/b4a15ffbe12a4251ae91/edit なので 公開URLは https://qiita.com/ykhirao/items/b4a15ffbe12a4251ae91 として決め打ちしたがあっているかな :thinking: \n\n\n# ローカル開発について\n\nPRとか投げてくださる人はある程度 README.md に書いていますが、以下2つターミナルで実行\n\n```bash\n$ firebase emulators:start\n$ cd functions && npm run build:watch\n```\n\nhttp://127.0.0.1:4000/ でエミュレーターが立ち上がるので操作します。\n\n![スクリーンショット 2023-11-20 21.30.07.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/6d53134d-0ab4-6678-9424-33416db23293.png)\n\n開発のログとかもここに出ます。\n\nFirestoreのデータもここに格納され、エミュレーター立ち上げるたびにデータの初期化は必要です。\n\n<details><summary>index.tsのソースコード全文</summary>\n\n```ts\nimport { onRequest } from \"firebase-functions/v2/https\";\nimport * as logger from \"firebase-functions/logger\";\nimport * as express from 'express';\nimport * as admin from 'firebase-admin';\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\nadmin.initializeApp();\nconst db = admin.firestore();\nconst LINKS_COL = db.collection('links');\nconst USERS_COL = db.collection('users');\n\nconst {\n  NODE_ENV,\n  FUNCTIONS_EMULATOR,\n  FIREBASE_DEBUG_MODE,\n  GCLOUD_PROJECT,\n} = process.env;\nconst isDevelopment = NODE_ENV === 'development' || FUNCTIONS_EMULATOR === 'true' || FIREBASE_DEBUG_MODE === 'true';\n\nconst NOT_EXISTS_URL = 'https://google.com'; // リンク切れなど自社のHPなどに飛ばす場合はここを変更\nconst CACHE_CONTROL_TIME = isDevelopment ? 0 : 300; // 本番は5分間キャッシュさせる\nconst REDIRECT_TIME = isDevelopment ? 3 : 0; // 本番はリダイレクトまで0秒\nconst BASE_URL = isDevelopment ? `http://localhost:5002` : `https://${GCLOUD_PROJECT}.web.app`;\n\ntype LinkDocType = {\n  url?: string;\n  ogps?: string[];\n}\n\n/** Adminユーザーの初期化 */\nconst initAdminFunc = async (_req: express.Request, res: express.Response) => {\n  const adminDoc = USERS_COL.doc('admin');\n  const user = await adminDoc.get();\n  if (user.exists) {\n    res.send('Already initialized');\n  } else {\n    // Tokenの強さはお好みで変更お願いします。\n    // Link作成時にヘッダーの `Authorization: Bearer <token>` で認証する\n    const token = require('crypto').randomBytes(48).toString('hex');\n    await adminDoc.set({ name: 'admin', token });\n    res.send('Initialized!');\n  }\n}\n\n/** リダイレクト処理 */\nconst redirectFunc = async (req: express.Request, res: express.Response): Promise<any> => {\n  const id = req.params.id || '0';\n  const record = await LINKS_COL.doc(id).get();\n  const data = { id: record.id, ...record.data() } as LinkDocType;\n\n  const url = data?.url || NOT_EXISTS_URL;\n  if (!url) return res.status(404).send('Not Found');\n\n  const ogps = (data?.ogps || []).map(ogp => ogp).join('\\n');\n\n  // レスポンスは5分間キャッシュさせる\n  res.set(\"Cache-Control\", `public, max-age=${CACHE_CONTROL_TIME}`)\n  res.send(`\n  <!DOCTYPE html>\n  <html lang=\"ja\">\n  <head prefix=\"og: https://ogp.me/ns#\">\n    <title>Redirect...</title>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"refresh\" content=\"${REDIRECT_TIME};URL='${url}'\" />\n    <meta name=\"robots\" content=\"noindex\" />\n    ${ogps}\n  </head>\n  <body>\n    <!--\n      <noscript>\n        Redirect: <a href=\"${url}\"> ${url} </a>\n      </noscript>\n      <script>\n        window.location = \"${url}\";\n      </script>\n    -->\n  </body>\n  </html>\n  `);\n}\n\n/** Link作成API */\nconst createFunc = async (req: express.Request, res: express.Response): Promise<any> => {\n  logger.info(req.body, { structuredData: true });\n\n  // Adminが作成されてなければエラー\n  const admin = await USERS_COL.doc('admin').get();\n  if (!admin.exists) return res.status(404).send('Not Found: Admin user is not initialized');\n\n  // Bearer Tokenがなければ認証エラー\n  const token = req.headers.authorization?.replace('Bearer ', '');\n  if (token == null) return res.status(401).send('Unauthorized: token is required');\n\n  // Bodyのパース等\n  const { id: reqId, url, ogps = [] } = req.body;\n\n  // URLの存在チェック\n  if (url == null) return res.status(400).send('Bad Request: url is required');\n\n  const id = reqId || Math.random().toString(32).substring(2);\n\n  // AdminのTokenとBearer Tokenが同じでなければエラー\n  const adminToken = admin.data()?.token;\n  if (token !== adminToken) return res.status(401).send(`Unauthorized: token is not valid`);\n\n  const ref = LINKS_COL.doc(id);\n  const record = await ref.get();\n\n  // 該当IDのレコードがすでに存在していればエラー\n  if (record.exists) return res.status(403).send(`Already exists: ${id}`);\n\n  await ref.set({\n    id,\n    url,\n    ogps,\n  });\n\n  res.status(200).send(`OK, created ${id}: ${BASE_URL}/s/${id} `);\n}\n\n// Hoting用のルーティング\n// http://127.0.0.1:5002/s\napp.get('/s', (_req, res) => res.send(404));\napp.get('/s/users/init', initAdminFunc);\napp.post('/s/users/init', initAdminFunc);\napp.post('/s/links', createFunc);\napp.get('/s/:id', redirectFunc);\n\n// Functions側のルーティング, /s をrootとする\n// http://127.0.0.1:5001/{_YOUR PROJECT_ID_}/us-central1/s → app.get('/', ()=>{})\n// app.get('/', (_req, res) => res.send(404));\n\nexport const s = onRequest(app);\n\n```\n\n</details>\n\nQiita用に1ファイルに書いてますが、普通にfunctionごとに別のファイルにしてよいと思います。\n開発進んだら私もわけると思います。\n\n`NOT_EXISTS_URL` は自社ように置き換えて使ってください。\n\n\n130行くらいなのでさくっと読んでくれたらわかると思いますが、以下3つの関数くらいしかないので読めると思います。\n\n```ts\nconst initAdminFunc = () => {'略'}\nconst redirectFunc = () => {'略'}\nconst createFunc = () => {'略'}\n```\n\n\nfirebase.jsonはrewriteのところが重要かと思いますが、ほとんどのケースでこのまま使えるはずです。\n\nindex.htmlを書き換えて使ったりいろいろできるとは思います。\nここにReactのアプリをいれて、ログインして編集できるアドミン画面を作る〜〜等。\n\nfirestore.rules は、Firestoreのclient sdkからの書き込みを　`if false` にしているので色々設定しなおしてください。\n\n.firebaserc　は人によって変わるので.gitignoreでコミットしないようにしてます。\nCIでマージされたときにデプロイしたい、とかある人はコミット外してください。\n\n\n\n\n\n\n","coediting":false,"comments_count":1,"created_at":"2023-11-20T21:39:26+09:00","group":null,"id":"b4a15ffbe12a4251ae91","likes_count":4,"private":false,"reactions_count":0,"stocks_count":4,"tags":[{"name":"JavaScript","versions":[]},{"name":"TypeScript","versions":[]},{"name":"Firebase","versions":[]},{"name":"Firestore","versions":[]},{"name":"googlecloud","versions":[]}],"title":"【コピーで使える】短縮URLサイト作ったので使ってくれ【自社ホスティング】","updated_at":"2023-11-20T21:39:26+09:00","url":"https://qiita.com/ykhirao/items/b4a15ffbe12a4251ae91","user":{"description":"Web Developer From 2016.\r\nPHP/Laravel && React/TypeScript/Node.js\r\n\r\n業務委託の依頼とかはWantedlyとかからでお願いします！","facebook_id":"","followees_count":39,"followers_count":100,"github_login_name":"ykhirao","id":"ykhirao","items_count":82,"linkedin_id":"","location":"Tokyo, Japan","name":"yk","organization":"","permanent_id":112929,"profile_image_url":"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/profile-images/1639030792","team_only":false,"twitter_screen_name":"ykhirao","website_url":"https://www.wantedly.com/id/ykhirao"},"page_views_count":null,"team_membership":null,"organization_url_name":null,"slide":false}},"path":"posts/b4a15ffbe12a4251ae91"}
