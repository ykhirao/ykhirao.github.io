{"template":"__react_static_root__/src/components/QiitaPost","sharedHashesByProp":{},"data":{"post":{"rendered_body":"<h1 data-sourcepos=\"1:1-1:115\">\n<span id=\"本番運用しているphplaravelサーバーにgitを入れたいんだけどこれであってるのかな\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E7%95%AA%E9%81%8B%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8Bphplaravel%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%ABgit%E3%82%92%E5%85%A5%E3%82%8C%E3%81%9F%E3%81%84%E3%82%93%E3%81%A0%E3%81%91%E3%81%A9%E3%81%93%E3%82%8C%E3%81%A7%E3%81%82%E3%81%A3%E3%81%A6%E3%82%8B%E3%81%AE%E3%81%8B%E3%81%AA\"><i class=\"fa fa-link\"></i></a>本番運用しているphp/Laravelサーバーにgitを入れたいんだけどこれであってるのかな。</h1>\n<p data-sourcepos=\"3:1-3:398\">こんにちは！ <a href=\"/ykhirao\" class=\"user-mention js-hovercard\" title=\"ykhirao\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"ykhirao\">@ykhirao</a> です！本番サーバーにFTPでぽちぽちアップロードしている現状ですが、 <code>ssh production</code> <code>git pull origin master</code> とかで本番コードを反映させたいなと夢みたいなことを考えています。適当に考えたベストプラクティス（たたき台ともいう）を投稿するのでマサカリください！！！！！</p>\n<h2 data-sourcepos=\"5:1-5:33\">\n<span id=\"手順の大まかなながれ\" class=\"fragment\"></span><a href=\"#%E6%89%8B%E9%A0%86%E3%81%AE%E5%A4%A7%E3%81%BE%E3%81%8B%E3%81%AA%E3%81%AA%E3%81%8C%E3%82%8C\"><i class=\"fa fa-link\"></i></a>手順の大まかなながれ</h2>\n<p data-sourcepos=\"7:1-7:45\">だいたいこんな状況を仮定すると</p>\n<ul data-sourcepos=\"9:1-12:0\">\n<li data-sourcepos=\"9:1-9:69\">ローカルブランチにgitを導入して、GitHubにpushする</li>\n<li data-sourcepos=\"10:1-10:86\">GitHubのレポジトリがあるし、masterブランチで最新になっている</li>\n<li data-sourcepos=\"11:1-12:0\">本番コードはだいたいmasterブランチと同じ、一部デプロイ忘れとかある</li>\n</ul>\n<p data-sourcepos=\"13:1-13:66\">こんなものかなと思う。それに対してやることは</p>\n<ul data-sourcepos=\"15:1-19:0\">\n<li data-sourcepos=\"15:1-15:77\">サーバー上で <code>ssh key-gen</code> して公開鍵・秘密鍵を作成する</li>\n<li data-sourcepos=\"16:1-16:116\">GitHubでデプロイキーを登録する（GitHubにデプロイユーザーとか作らなくていいよ！）</li>\n<li data-sourcepos=\"17:1-17:60\">.gitignoreが適切に設定されているか確認する</li>\n<li data-sourcepos=\"18:1-19:0\">特に.envファイルとか、storageフォルダとか、DB以外に本番とローカル環境で違うものがないかよく確認する</li>\n</ul>\n<p data-sourcepos=\"20:1-20:24\">とかでしょうか。</p>\n<h2 data-sourcepos=\"22:1-22:33\">\n<span id=\"実際の動作で確認する\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AE%E5%8B%95%E4%BD%9C%E3%81%A7%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>実際の動作で確認する</h2>\n<p data-sourcepos=\"24:1-25:42\">GitHubにレポジトリ作るのを省略するためにlocalにremote addする。<br>\nGitHubとして読み解いてほしい。</p>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"27:1-38:3\"><div class=\"highlight\"><pre><code>yk@yk <span class=\"nb\">local</span> % git remote add origin /Users/yk/server/project.git\nyk@yk <span class=\"nb\">local</span> % <span class=\"nb\">cd</span> ..                 \nyk@yk server % <span class=\"nb\">ls\nlocal\t</span>prod\nyk@yk server % git clone <span class=\"nt\">--bare</span> <span class=\"nb\">local </span>project.git \nCloning into bare repository <span class=\"s1\">'project.git'</span>...\n<span class=\"k\">done</span><span class=\"nb\">.</span>\nyk@yk server % <span class=\"nb\">cd local \n</span>yk@yk <span class=\"nb\">local</span> % git push origin master                            \nEverything up-to-date\n</code></pre></div></div>\n<p data-sourcepos=\"40:1-40:134\">prodフォルダにcloneしてくる！！で <code>.git</code> フォルダを削除して、git管理下に置かれてない状況に戻す。</p>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"42:1-68:3\"><div class=\"highlight\"><pre><code>yk@yk server % <span class=\"nb\">cd </span>prod\nyk@yk prod % <span class=\"nb\">ls\n</span>yk@yk prod % git clone /Users/yk/server/project.git <span class=\"nb\">.</span>\nCloning into <span class=\"s1\">'.'</span>...\n<span class=\"k\">done</span><span class=\"nb\">.</span>\nyk@yk prod % ll\ntotal 8\ndrwxr-xr-x   5 yk  staff  160  7 11 01:54 <span class=\"nb\">.</span>\ndrwxr-xr-x   5 yk  staff  160  7 11 01:51 ..\ndrwxr-xr-x  12 yk  staff  384  7 11 01:54 .git\n<span class=\"nt\">-rw-r--r--</span>   1 yk  staff   16  7 11 01:54 .gitignore\n<span class=\"nt\">-rw-r--r--</span>   1 yk  staff    0  7 11 01:54 README.md\n\nyk@yk prod % <span class=\"nb\">rm</span> <span class=\"nt\">-fr</span> .git\n\n<span class=\"c\"># 本番ではstorageフォルダに画像がたくさん溜まっていることを仮定</span>\nyk@yk prod % <span class=\"nb\">mkdir </span>storage\nyk@yk prod % <span class=\"nb\">touch </span>storage/image-prod.jpg\nyk@yk prod % <span class=\"nb\">touch </span>storage/image-prod2.jpg\nyk@yk prod % <span class=\"nb\">touch </span>storage/image-prod3.jpg\n\n<span class=\"c\"># .envファイル を本番用に書き換え</span>\nyk@yk prod % vim .env\nyk@yk prod % <span class=\"nb\">cat</span> .env \n<span class=\"nv\">APP</span><span class=\"o\">=</span>prod\n</code></pre></div></div>\n<p data-sourcepos=\"70:1-70:35\">いろいろlocalで作業した！</p>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"72:1-98:3\"><div class=\"highlight\"><pre><code>yk@yk server % <span class=\"nb\">cd local \n\n</span>yk@yk <span class=\"nb\">local</span> % <span class=\"nb\">echo</span> <span class=\"s2\">\"# README.md を追記\"</span> <span class=\"o\">&gt;&gt;</span> README.md \n\nyk@yk <span class=\"nb\">local</span> % git diff\ndiff <span class=\"nt\">--git</span> a/README.md b/README.md\nindex e69de29..7039b84 100644\n<span class=\"nt\">---</span> a/README.md\n+++ b/README.md\n@@ <span class=\"nt\">-0</span>,0 +1 @@\n+# README.md を追記\n\nyk@yk <span class=\"nb\">local</span> % git commit <span class=\"nt\">-am</span> <span class=\"s2\">\"Update\"</span>\n<span class=\"o\">[</span>master 1b9e11d] Update\n 1 file changed, 1 insertion<span class=\"o\">(</span>+<span class=\"o\">)</span>\n\nyk@yk <span class=\"nb\">local</span> % git push origin master\nEnumerating objects: 5, <span class=\"k\">done</span><span class=\"nb\">.</span>\nCounting objects: 100% <span class=\"o\">(</span>5/5<span class=\"o\">)</span>, <span class=\"k\">done</span><span class=\"nb\">.</span>\nDelta compression using up to 4 threads\nCompressing objects: 100% <span class=\"o\">(</span>2/2<span class=\"o\">)</span>, <span class=\"k\">done</span><span class=\"nb\">.</span>\nWriting objects: 100% <span class=\"o\">(</span>3/3<span class=\"o\">)</span>, 298 bytes | 298.00 KiB/s, <span class=\"k\">done</span><span class=\"nb\">.</span>\nTotal 3 <span class=\"o\">(</span>delta 0<span class=\"o\">)</span>, reused 0 <span class=\"o\">(</span>delta 0<span class=\"o\">)</span>\nTo /Users/yk/server/project.git\n   cf9a63e..1b9e11d  master -&gt; master\n</code></pre></div></div>\n<p data-sourcepos=\"100:1-100:69\">さてこの状況で本番にgitを導入しようと思います。</p>\n<ul data-sourcepos=\"102:1-105:0\">\n<li data-sourcepos=\"102:1-102:40\">少しlocalのほうが進んでいる</li>\n<li data-sourcepos=\"103:1-103:48\">.envファイルが書き換わるとまずい</li>\n<li data-sourcepos=\"104:1-105:0\">storage配下に画像たくさんあるけど.gitignoreしているから大丈夫なんだっけ？</li>\n</ul>\n<p data-sourcepos=\"106:1-106:66\">とかそんな感じの疑問を抱えつつ、見てみます。</p>\n<p data-sourcepos=\"108:1-108:312\">サーバーで <code>ssh-keygen</code> をして 公開鍵を GitHubのこのあたり<a href=\"https://github.com/XXXXX/XXXXX/settings/keys\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/XXXXX/XXXXX/settings/keys</a> に登録すると、privateレポジトリでも、いい感じにpullとかできるようになります。デプロイユーザーとかをGitHubに登録しなくても大丈夫です。</p>\n<p data-sourcepos=\"111:1-111:83\">本番のプロジェクトにはgit initされていない状態を確認する。</p>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"113:1-116:3\"><div class=\"highlight\"><pre><code>yk@yk prod % git log\nfatal: not a git repository <span class=\"o\">(</span>or any of the parent directories<span class=\"o\">)</span>: .git\n</code></pre></div></div>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"118:1-123:3\"><div class=\"highlight\"><pre><code>yk@yk prod % git init \nInitialized empty Git repository <span class=\"k\">in</span> /Users/yk/server/prod/.git/\nyk@yk prod % git log\nfatal: your current branch <span class=\"s1\">'master'</span> does not have any commits yet\n</code></pre></div></div>\n<p data-sourcepos=\"125:1-125:136\">masterブランチもないし、操作できない状態なので、remoteでGitHubとかを指定して、pullしてきましょう。</p>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"127:1-143:3\"><div class=\"highlight\"><pre><code>yk@yk prod % git remote add origin /Users/yk/server/project.git \nyk@yk prod % git pull origin master\nremote: Enumerating objects: 7, <span class=\"k\">done</span><span class=\"nb\">.</span>\nremote: Counting objects: 100% <span class=\"o\">(</span>7/7<span class=\"o\">)</span>, <span class=\"k\">done</span><span class=\"nb\">.</span>\nremote: Compressing objects: 100% <span class=\"o\">(</span>4/4<span class=\"o\">)</span>, <span class=\"k\">done</span><span class=\"nb\">.</span>\nremote: Total 7 <span class=\"o\">(</span>delta 0<span class=\"o\">)</span>, reused 0 <span class=\"o\">(</span>delta 0<span class=\"o\">)</span>\nUnpacking objects: 100% <span class=\"o\">(</span>7/7<span class=\"o\">)</span>, 516 bytes | 103.00 KiB/s, <span class=\"k\">done</span><span class=\"nb\">.</span>\nFrom /Users/yk/server/project\n <span class=\"k\">*</span> branch            master     -&gt; FETCH_HEAD\n <span class=\"k\">*</span> <span class=\"o\">[</span>new branch]      master     -&gt; origin/master\nerror: The following untracked working tree files would be overwritten by merge:\n\t.gitignore\n\tREADME.md\nPlease move or remove them before you merge.\nAborting\n</code></pre></div></div>\n<p data-sourcepos=\"146:1-146:15\">いい感じ。</p>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"149:1-163:3\"><div class=\"highlight\"><pre><code>yk@yk prod % git log\nfatal: your current branch <span class=\"s1\">'master'</span> does not have any commits yet\nyk@yk prod % git status                   \nOn branch master\n\nNo commits yet\n\nUntracked files:\n  <span class=\"o\">(</span>use <span class=\"s2\">\"git add &lt;file&gt;...\"</span> to include <span class=\"k\">in </span>what will be committed<span class=\"o\">)</span>\n\t.gitignore\n\tREADME.md\n\nnothing added to commit but untracked files present <span class=\"o\">(</span>use <span class=\"s2\">\"git add\"</span> to track<span class=\"o\">)</span>\n</code></pre></div></div>\n<p data-sourcepos=\"165:1-165:84\">まだlogも見れないのでブランチを切り替えて一旦コミットする</p>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"167:1-179:3\"><div class=\"highlight\"><pre><code>yk@yk prod % git checkout <span class=\"nt\">-b</span> master-backup\nSwitched to a new branch <span class=\"s1\">'master-backup'</span>\nyk@yk prod % git add <span class=\"nb\">.</span>\nyk@yk prod % git commit <span class=\"nt\">-m</span> <span class=\"s2\">\"マスターのバックアップ\"</span>\n<span class=\"o\">[</span>master-backup <span class=\"o\">(</span>root-commit<span class=\"o\">)</span> a6fd38c] マスターのバックアップ\n 2 files changed, 3 insertions<span class=\"o\">(</span>+<span class=\"o\">)</span>\n create mode 100644 .gitignore\n create mode 100644 README.md\n\nyk@yk prod % git branch\n<span class=\"k\">*</span> master-backup\n</code></pre></div></div>\n<p data-sourcepos=\"181:1-181:60\">大丈夫そう。masterにチェックアウトしてみる</p>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"184:1-201:3\"><div class=\"highlight\"><pre><code>yk@yk prod % git checkout master\nBranch <span class=\"s1\">'master'</span> <span class=\"nb\">set </span>up to track remote branch <span class=\"s1\">'master'</span> from <span class=\"s1\">'origin'</span><span class=\"nb\">.</span>\nSwitched to a new branch <span class=\"s1\">'master'</span>\n\nyk@yk prod % git log\ncommit 1b9e11d15bda2ecdec75a8d205bdbdec185a9388 <span class=\"o\">(</span>HEAD -&gt; master, origin/master<span class=\"o\">)</span>\nAuthor: Yuki &lt;yuki@example.com&gt;\nDate:   Sat Jul 11 02:01:05 2020 +0900\n\n    Update\n\ncommit cf9a63ebb4676faa949aa29a9fdf56244ed313d0\nAuthor: Yuki &lt;yuki@example.com&gt;\nDate:   Sat Jul 11 01:48:36 2020 +0900\n\n    init\n</code></pre></div></div>\n<p data-sourcepos=\"203:1-204:62\"><code>Update</code> という変更はまだ <code>prod</code> フォルダには適応させてなかったのに、きちんとpullされていることがわかりますね！<br>\nこれで最新ブランチの適応はOKかと思います。</p>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"206:1-211:3\"><div class=\"highlight\"><pre><code>yk@yk prod % <span class=\"nb\">cat</span> .env \n<span class=\"nv\">APP</span><span class=\"o\">=</span>prod\nyk@yk prod % <span class=\"nb\">ls </span>storage \nimage-prod.jpg\timage-prod2.jpg\timage-prod3.jpg\n</code></pre></div></div>\n<p data-sourcepos=\"213:1-214:83\"><code>.env</code> ファイルとか <code>storege/</code> とか <code>.gitignore</code> に記述しているものは書き換わってないことがわかります。<br>\nもちろんlocalファイルは <code>AA=local</code> ときちんとなったままです。</p>\n<div class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"216:1-219:3\"><div class=\"highlight\"><pre><code>yk@yk prod % <span class=\"nb\">cat</span> ../local/.env \n<span class=\"nv\">APP</span><span class=\"o\">=</span><span class=\"nb\">local</span>\n</code></pre></div></div>\n<h2 data-sourcepos=\"221:1-221:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"223:1-223:201\">こんな感じでサーバー上で <code>git init</code> して <code>remote add</code> <code>checkout -b</code> <code>git add .</code> <code>git commit</code> <code>git checkout master</code> って流れでいい感じにgit適応できる気がしたのです。</p>\n<p data-sourcepos=\"225:1-226:162\">あまりこのあたりちゃんとまとめられてなかったので、サーバー運用得意な方いたら編集リクエスト、<br>\nコメント欄記入、自分なりのやつを投稿、何でも構いませんので後世に残せるいいドキュメントになればと思ってます。</p>\n<p data-sourcepos=\"230:1-230:3\">。</p>\n","body":"# 本番運用しているphp/Laravelサーバーにgitを入れたいんだけどこれであってるのかな。\n\nこんにちは！ @ykhirao です！本番サーバーにFTPでぽちぽちアップロードしている現状ですが、 `ssh production` `git pull origin master` とかで本番コードを反映させたいなと夢みたいなことを考えています。適当に考えたベストプラクティス（たたき台ともいう）を投稿するのでマサカリください！！！！！\n\n## 手順の大まかなながれ\n\nだいたいこんな状況を仮定すると\n\n- ローカルブランチにgitを導入して、GitHubにpushする\n- GitHubのレポジトリがあるし、masterブランチで最新になっている\n- 本番コードはだいたいmasterブランチと同じ、一部デプロイ忘れとかある\n\nこんなものかなと思う。それに対してやることは\n\n- サーバー上で `ssh key-gen` して公開鍵・秘密鍵を作成する\n- GitHubでデプロイキーを登録する（GitHubにデプロイユーザーとか作らなくていいよ！）\n- .gitignoreが適切に設定されているか確認する\n- 特に.envファイルとか、storageフォルダとか、DB以外に本番とローカル環境で違うものがないかよく確認する\n\nとかでしょうか。\n\n## 実際の動作で確認する\n\nGitHubにレポジトリ作るのを省略するためにlocalにremote addする。\nGitHubとして読み解いてほしい。\n\n```bash\nyk@yk local % git remote add origin /Users/yk/server/project.git\nyk@yk local % cd ..                 \nyk@yk server % ls\nlocal\tprod\nyk@yk server % git clone --bare local project.git \nCloning into bare repository 'project.git'...\ndone.\nyk@yk server % cd local \nyk@yk local % git push origin master                            \nEverything up-to-date\n```\n\nprodフォルダにcloneしてくる！！で `.git` フォルダを削除して、git管理下に置かれてない状況に戻す。\n\n```bash\nyk@yk server % cd prod\nyk@yk prod % ls\nyk@yk prod % git clone /Users/yk/server/project.git .\nCloning into '.'...\ndone.\nyk@yk prod % ll\ntotal 8\ndrwxr-xr-x   5 yk  staff  160  7 11 01:54 .\ndrwxr-xr-x   5 yk  staff  160  7 11 01:51 ..\ndrwxr-xr-x  12 yk  staff  384  7 11 01:54 .git\n-rw-r--r--   1 yk  staff   16  7 11 01:54 .gitignore\n-rw-r--r--   1 yk  staff    0  7 11 01:54 README.md\n\nyk@yk prod % rm -fr .git\n\n# 本番ではstorageフォルダに画像がたくさん溜まっていることを仮定\nyk@yk prod % mkdir storage\nyk@yk prod % touch storage/image-prod.jpg\nyk@yk prod % touch storage/image-prod2.jpg\nyk@yk prod % touch storage/image-prod3.jpg\n\n# .envファイル を本番用に書き換え\nyk@yk prod % vim .env\nyk@yk prod % cat .env \nAPP=prod\n```\n\nいろいろlocalで作業した！\n\n```bash\nyk@yk server % cd local \n\nyk@yk local % echo \"# README.md を追記\" >> README.md \n\nyk@yk local % git diff\ndiff --git a/README.md b/README.md\nindex e69de29..7039b84 100644\n--- a/README.md\n+++ b/README.md\n@@ -0,0 +1 @@\n+# README.md を追記\n\nyk@yk local % git commit -am \"Update\"\n[master 1b9e11d] Update\n 1 file changed, 1 insertion(+)\n\nyk@yk local % git push origin master\nEnumerating objects: 5, done.\nCounting objects: 100% (5/5), done.\nDelta compression using up to 4 threads\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 298 bytes | 298.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo /Users/yk/server/project.git\n   cf9a63e..1b9e11d  master -> master\n```\n\nさてこの状況で本番にgitを導入しようと思います。\n\n- 少しlocalのほうが進んでいる\n- .envファイルが書き換わるとまずい\n- storage配下に画像たくさんあるけど.gitignoreしているから大丈夫なんだっけ？\n\nとかそんな感じの疑問を抱えつつ、見てみます。\n\nサーバーで `ssh-keygen` をして 公開鍵を GitHubのこのあたりhttps://github.com/XXXXX/XXXXX/settings/keys に登録すると、privateレポジトリでも、いい感じにpullとかできるようになります。デプロイユーザーとかをGitHubに登録しなくても大丈夫です。\n\n\n本番のプロジェクトにはgit initされていない状態を確認する。\n\n```bash\nyk@yk prod % git log\nfatal: not a git repository (or any of the parent directories): .git\n```\n\n```bash\nyk@yk prod % git init \nInitialized empty Git repository in /Users/yk/server/prod/.git/\nyk@yk prod % git log\nfatal: your current branch 'master' does not have any commits yet\n```\n\nmasterブランチもないし、操作できない状態なので、remoteでGitHubとかを指定して、pullしてきましょう。\n\n```bash\nyk@yk prod % git remote add origin /Users/yk/server/project.git \nyk@yk prod % git pull origin master\nremote: Enumerating objects: 7, done.\nremote: Counting objects: 100% (7/7), done.\nremote: Compressing objects: 100% (4/4), done.\nremote: Total 7 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (7/7), 516 bytes | 103.00 KiB/s, done.\nFrom /Users/yk/server/project\n * branch            master     -> FETCH_HEAD\n * [new branch]      master     -> origin/master\nerror: The following untracked working tree files would be overwritten by merge:\n\t.gitignore\n\tREADME.md\nPlease move or remove them before you merge.\nAborting\n```\n\n\nいい感じ。\n\n\n```bash\nyk@yk prod % git log\nfatal: your current branch 'master' does not have any commits yet\nyk@yk prod % git status                   \nOn branch master\n\nNo commits yet\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\t.gitignore\n\tREADME.md\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n```\n\nまだlogも見れないのでブランチを切り替えて一旦コミットする\n\n```bash\nyk@yk prod % git checkout -b master-backup\nSwitched to a new branch 'master-backup'\nyk@yk prod % git add .\nyk@yk prod % git commit -m \"マスターのバックアップ\"\n[master-backup (root-commit) a6fd38c] マスターのバックアップ\n 2 files changed, 3 insertions(+)\n create mode 100644 .gitignore\n create mode 100644 README.md\n\nyk@yk prod % git branch\n* master-backup\n```\n\n大丈夫そう。masterにチェックアウトしてみる\n\n\n```bash\nyk@yk prod % git checkout master\nBranch 'master' set up to track remote branch 'master' from 'origin'.\nSwitched to a new branch 'master'\n\nyk@yk prod % git log\ncommit 1b9e11d15bda2ecdec75a8d205bdbdec185a9388 (HEAD -> master, origin/master)\nAuthor: Yuki <yuki@example.com>\nDate:   Sat Jul 11 02:01:05 2020 +0900\n\n    Update\n\ncommit cf9a63ebb4676faa949aa29a9fdf56244ed313d0\nAuthor: Yuki <yuki@example.com>\nDate:   Sat Jul 11 01:48:36 2020 +0900\n\n    init\n```\n\n`Update` という変更はまだ `prod` フォルダには適応させてなかったのに、きちんとpullされていることがわかりますね！\nこれで最新ブランチの適応はOKかと思います。\n\n```bash\nyk@yk prod % cat .env \nAPP=prod\nyk@yk prod % ls storage \nimage-prod.jpg\timage-prod2.jpg\timage-prod3.jpg\n```\n\n`.env` ファイルとか `storege/` とか `.gitignore` に記述しているものは書き換わってないことがわかります。\nもちろんlocalファイルは `AA=local` ときちんとなったままです。\n\n```bash\nyk@yk prod % cat ../local/.env \nAPP=local\n```\n\n## まとめ\n\nこんな感じでサーバー上で `git init` して `remote add` `checkout -b` `git add .` `git commit` `git checkout master` って流れでいい感じにgit適応できる気がしたのです。\n\nあまりこのあたりちゃんとまとめられてなかったので、サーバー運用得意な方いたら編集リクエスト、\nコメント欄記入、自分なりのやつを投稿、何でも構いませんので後世に残せるいいドキュメントになればと思ってます。\n\n\n\n。\n","coediting":false,"comments_count":0,"created_at":"2020-07-14T09:36:07+09:00","group":null,"id":"b555dc7e550257fce5f2","likes_count":0,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"PHP","versions":[]},{"name":"Git","versions":[]},{"name":"GitHub","versions":[]}],"title":"本番運用しているサーバーにgit/GitHubを導入するときのベストプラクティスとマサカリ","updated_at":"2023-03-30T15:15:19+09:00","url":"https://qiita.com/ykhirao/items/b555dc7e550257fce5f2","user":{"description":"Web Developer From 2016.\r\nPHP/Laravel && React/TypeScript/Node.js\r\n\r\n業務委託の依頼とかはWantedlyとかからでお願いします！","facebook_id":"","followees_count":38,"followers_count":98,"github_login_name":"ykhirao","id":"ykhirao","items_count":68,"linkedin_id":"","location":"Tokyo, Japan","name":"yk","organization":"","permanent_id":112929,"profile_image_url":"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/profile-images/1639030792","team_only":false,"twitter_screen_name":"ykhirao","website_url":"https://www.wantedly.com/id/ykhirao"},"page_views_count":null,"team_membership":null,"organization_url_name":null}},"path":"posts/b555dc7e550257fce5f2"}
