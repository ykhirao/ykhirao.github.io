{"template":"__react_static_root__/src/components/QiitaPost","sharedHashesByProp":{},"data":{"post":{"rendered_body":"<h1 data-sourcepos=\"1:1-1:68\">\n<span id=\"amazonkdpに出版ときに必要な技術を書くまとめる\" class=\"fragment\"></span><a href=\"#amazonkdp%E3%81%AB%E5%87%BA%E7%89%88%E3%81%A8%E3%81%8D%E3%81%AB%E5%BF%85%E8%A6%81%E3%81%AA%E6%8A%80%E8%A1%93%E3%82%92%E6%9B%B8%E3%81%8F%E3%81%BE%E3%81%A8%E3%82%81%E3%82%8B\"><i class=\"fa fa-link\"></i></a>AmazonKDPに出版ときに必要な技術を書く・まとめる</h1>\n<h2 data-sourcepos=\"3:1-3:87\">\n<span id=\"とりあえずわかる人はこれだけみたらわかるものを置いておく\" class=\"fragment\"></span><a href=\"#%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9A%E3%82%8F%E3%81%8B%E3%82%8B%E4%BA%BA%E3%81%AF%E3%81%93%E3%82%8C%E3%81%A0%E3%81%91%E3%81%BF%E3%81%9F%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%82%E3%81%AE%E3%82%92%E7%BD%AE%E3%81%84%E3%81%A6%E3%81%8A%E3%81%8F\"><i class=\"fa fa-link\"></i></a>とりあえずわかる人はこれだけみたらわかるものを置いておく</h2>\n<p data-sourcepos=\"5:1-5:355\">最初 <code>GitBook</code> で作ってたので <code>node.js</code> ベースになってるけど、途中から <code>pandoc</code> という <code>brew install pandoc</code> でインストールできるもので、作り始めたので <code>package.json</code> とか作らなくても <code>makefile</code> を作ってで <code>make up</code> すると自動でビルドしてくれる感じにしてもいいと思う。</p>\n<p data-sourcepos=\"7:1-7:69\">動いたらいいので結構雑にスクリプト書いてます。</p>\n<div class=\"code-frame\" data-lang=\"json\" data-sourcepos=\"9:1-23:3\">\n<div class=\"code-lang\"><span class=\"bold\">package.json</span></div>\n<div class=\"highlight\"><pre><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"scripts\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"build\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"touch publish/merged.md &amp;&amp; rm publish/merged.md &amp;&amp; node publish/build.js\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"epub\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"npm run build &amp;&amp; pandoc publish/merged.md -f markdown -t epub --self-contained -s  -o publish.epub -c assets/github.css --toc --toc-depth=2 --epub-cover-image=images/cover.png &amp;&amp; open publish.epub\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"epub-free\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"touch pub-1-free/merged.md &amp;&amp; rm pub-1-free/merged.md &amp;&amp; node pub-1-free/build.js &amp;&amp; pandoc pub-1-free/merged.md -f markdown -t epub --self-contained -s  -o pub-1-free.epub -c assets/github.css --toc --toc-depth=2 --epub-cover-image=images/cover-free.png &amp;&amp; open pub-1-free.epub\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"ls-highlight\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"pandoc --list-highlight-languages\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"open\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"open publish.epub\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"download\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"npm run build &amp;&amp; node publish/download.js &amp;&amp; node publish/replace.js\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"devDependencies\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"request\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"^2.88.0\"</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div>\n</div>\n<p data-sourcepos=\"25:1-25:210\">markdownファイルをまとめてくれるやつ。 <code>.md</code> ファイルはただのテキストファイルなので、ファイルの内容を足していけば、ファイルを分けて管理できます。</p>\n<div class=\"code-frame\" data-lang=\"javascript\" data-sourcepos=\"27:1-51:3\">\n<div class=\"code-lang\"><span class=\"bold\">build.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"cp\">#!/usr/bin/env node\n</span>\n<span class=\"kd\">const</span> <span class=\"nx\">fs</span> <span class=\"o\">=</span> <span class=\"nf\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">fs</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">path</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">./publish</span><span class=\"dl\">'</span>\n<span class=\"kd\">let</span> <span class=\"nx\">mergedMdContent</span> <span class=\"o\">=</span> <span class=\"dl\">''</span>\n\n<span class=\"k\">try</span> <span class=\"p\">{</span>\n  <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">readdirSync</span><span class=\"p\">(</span><span class=\"nx\">path</span><span class=\"p\">).</span><span class=\"nf\">forEach</span><span class=\"p\">(</span><span class=\"nx\">fileName</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">fileName</span><span class=\"p\">.</span><span class=\"nf\">includes</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">.DS_Store</span><span class=\"dl\">'</span><span class=\"p\">))</span> <span class=\"k\">return</span>\n    <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">fileName</span><span class=\"p\">.</span><span class=\"nf\">includes</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">.md</span><span class=\"dl\">'</span><span class=\"p\">))</span> <span class=\"k\">return</span>\n    <span class=\"nx\">mergedMdContent</span> <span class=\"o\">+=</span> <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">readFileSync</span><span class=\"p\">(</span><span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">path</span><span class=\"p\">}</span><span class=\"s2\">/</span><span class=\"p\">${</span><span class=\"nx\">fileName</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">utf-8</span><span class=\"dl\">'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"se\">\\n</span><span class=\"dl\">'</span>\n  <span class=\"p\">})</span>\n\n  <span class=\"c1\">// pandocを実行するフォルダの階層にあわせる</span>\n  <span class=\"nx\">mergedMdContent</span> <span class=\"o\">=</span> <span class=\"nx\">mergedMdContent</span><span class=\"p\">.</span><span class=\"nf\">replace</span><span class=\"p\">(</span><span class=\"sr\">/</span><span class=\"se\">\\.\\.\\/</span><span class=\"sr\">images/g</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">./images</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n\n  <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">writeFileSync</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./publish/merged.md</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">mergedMdContent</span><span class=\"p\">)</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"s2\">`merged!`</span><span class=\"p\">)</span>\n<span class=\"p\">}</span> <span class=\"k\">catch </span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"s2\">`Oh no, An error occurred! </span><span class=\"p\">${</span><span class=\"nx\">err</span><span class=\"p\">.</span><span class=\"nx\">message</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n  <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nf\">exit</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"53:1-53:324\">最初、gyazoさんに画像をホストしていたので、途中でダウンロードした。スクショしたらすぐにマークダウンの画像リンクが作れるので、めっちゃ便利だった。画像のダウンロードを非同期処理なJavaScriptで書くのとても面倒なのですね… :sad:</p>\n<div class=\"code-frame\" data-lang=\"javascript\" data-sourcepos=\"55:1-100:3\">\n<div class=\"code-lang\"><span class=\"bold\">download.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"cp\">#!/usr/bin/env node\n</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Start: </span><span class=\"dl\">'</span><span class=\"p\">)</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">fs</span> <span class=\"o\">=</span> <span class=\"nf\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">fs</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">request</span> <span class=\"o\">=</span> <span class=\"nf\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">request</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">merged</span> <span class=\"o\">=</span> <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">readFileSync</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">publish/merged.md</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">utf-8</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">re</span> <span class=\"o\">=</span> <span class=\"sr\">/</span><span class=\"se\">(</span><span class=\"sr\">https</span><span class=\"se\">?</span><span class=\"sr\">|ftp</span><span class=\"se\">)(</span><span class=\"sr\">:</span><span class=\"se\">\\/\\/[</span><span class=\"sr\">-_.!~*</span><span class=\"se\">\\'</span><span class=\"sr\">()a-zA-Z0-9;</span><span class=\"se\">\\/</span><span class=\"sr\">?:</span><span class=\"se\">\\@</span><span class=\"sr\">&amp;=+</span><span class=\"se\">\\$</span><span class=\"sr\">,%#</span><span class=\"se\">]</span><span class=\"sr\">+.png</span><span class=\"se\">)</span><span class=\"sr\">/gi</span>\n<span class=\"kd\">let</span> <span class=\"nx\">urls</span> <span class=\"o\">=</span> <span class=\"nx\">merged</span><span class=\"p\">.</span><span class=\"nf\">match</span><span class=\"p\">(</span><span class=\"nx\">re</span><span class=\"p\">)</span>\n<span class=\"k\">if </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">urls</span><span class=\"p\">)</span> <span class=\"k\">return</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"nx\">urls</span><span class=\"p\">)</span>\n\n<span class=\"kd\">function</span> <span class=\"nf\">requestSiteData</span><span class=\"p\">(</span><span class=\"nx\">urls</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">urls</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">url</span> <span class=\"o\">=</span> <span class=\"nx\">urls</span><span class=\"p\">.</span><span class=\"nf\">shift</span><span class=\"p\">()</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">name</span> <span class=\"o\">=</span> <span class=\"nx\">url</span><span class=\"p\">.</span><span class=\"nf\">replace</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">https://i.gyazo.com/</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">''</span><span class=\"p\">)</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">imagePath</span> <span class=\"o\">=</span> <span class=\"s2\">`images/</span><span class=\"p\">${</span><span class=\"nx\">name</span><span class=\"p\">}</span><span class=\"s2\">`</span>\n\n    <span class=\"k\">try</span> <span class=\"p\">{</span>\n      <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">statSync</span><span class=\"p\">(</span><span class=\"nx\">imagePath</span><span class=\"p\">)</span>\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"s2\">`Exists: </span><span class=\"p\">${</span><span class=\"nx\">imagePath</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n      <span class=\"k\">return</span> <span class=\"nf\">requestSiteData</span><span class=\"p\">(</span><span class=\"nx\">urls</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span> <span class=\"k\">catch </span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{}</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"s2\">`Download: </span><span class=\"p\">${</span><span class=\"nx\">imagePath</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n\n    <span class=\"nf\">request</span><span class=\"p\">({</span> <span class=\"na\">method</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">GET</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">url</span><span class=\"p\">:</span> <span class=\"nx\">url</span><span class=\"p\">,</span> <span class=\"na\">encoding</span><span class=\"p\">:</span> <span class=\"kc\">null</span> <span class=\"p\">},</span> <span class=\"nf\">function</span><span class=\"p\">(</span>\n      <span class=\"nx\">error</span><span class=\"p\">,</span>\n      <span class=\"nx\">response</span><span class=\"p\">,</span>\n      <span class=\"nx\">body</span>\n    <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">writeFileSync</span><span class=\"p\">(</span><span class=\"nx\">imagePath</span><span class=\"p\">,</span> <span class=\"nx\">body</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">binary</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n      <span class=\"p\">}</span>\n\n      <span class=\"nf\">requestSiteData</span><span class=\"p\">(</span><span class=\"nx\">urls</span><span class=\"p\">)</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 再帰の終了</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">fin</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nf\">requestSiteData</span><span class=\"p\">(</span><span class=\"nx\">urls</span><span class=\"p\">)</span> <span class=\"c1\">//start requesting data</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"102:1-102:92\">gyazoさんへのリンクをダウンロードしたフォルダに書き換えたやつ。</p>\n<div class=\"code-frame\" data-lang=\"javascript\" data-sourcepos=\"104:1-127:3\">\n<div class=\"code-lang\"><span class=\"bold\">replace.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"cp\">#!/usr/bin/env node\n</span>\n<span class=\"kd\">const</span> <span class=\"nx\">fs</span> <span class=\"o\">=</span> <span class=\"nf\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">fs</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span> <span class=\"p\">{</span>\n  <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">readdirSync</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">publish</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nf\">forEach</span><span class=\"p\">(</span><span class=\"nx\">fileName</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">fileName</span><span class=\"p\">.</span><span class=\"nf\">includes</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">.md</span><span class=\"dl\">'</span><span class=\"p\">))</span> <span class=\"k\">return</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"nx\">fileName</span><span class=\"p\">)</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">content</span> <span class=\"o\">=</span> <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">readFileSync</span><span class=\"p\">(</span><span class=\"s2\">`publish/</span><span class=\"p\">${</span><span class=\"nx\">fileName</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">utf-8</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n    <span class=\"nx\">content</span> <span class=\"o\">=</span> <span class=\"nx\">content</span><span class=\"p\">.</span><span class=\"nf\">replace</span><span class=\"p\">(</span>\n      <span class=\"sr\">/https:</span><span class=\"se\">\\/\\/</span><span class=\"sr\">i.gyazo.com</span><span class=\"se\">\\/</span><span class=\"sr\">/g</span><span class=\"p\">,</span>\n      <span class=\"dl\">'</span><span class=\"s1\">/Users/yk/workspace/books/lets-sql/images/</span><span class=\"dl\">'</span>\n    <span class=\"p\">)</span>\n    <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">writeFileSync</span><span class=\"p\">(</span><span class=\"s2\">`publish/</span><span class=\"p\">${</span><span class=\"nx\">fileName</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">,</span> <span class=\"nx\">content</span><span class=\"p\">)</span>\n  <span class=\"p\">})</span>\n\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"s2\">`fin!`</span><span class=\"p\">)</span>\n<span class=\"p\">}</span> <span class=\"k\">catch </span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"s2\">`!Error! </span><span class=\"p\">${</span><span class=\"nx\">err</span><span class=\"p\">.</span><span class=\"nx\">message</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n  <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nf\">exit</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n</code></pre></div>\n</div>\n<p data-sourcepos=\"129:1-129:27\">こんな感じのdir構成</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"131:1-142:3\"><div class=\"highlight\"><pre><code>$ tree -L 2 publish                                                                                                  (git)-[master]\npublish\n├── 4.md\n├── 5.md\n├── 6.md\n├── 7.md\n├── 8.md\n├── build.js\n├── download.js\n└── replace.js\n</code></pre></div></div>\n<h2 data-sourcepos=\"145:1-145:6\">\n<span id=\"qa\" class=\"fragment\"></span><a href=\"#qa\"><i class=\"fa fa-link\"></i></a>Q&amp;A</h2>\n<h3 data-sourcepos=\"147:1-147:36\">\n<span id=\"q-出版する時の形式は\" class=\"fragment\"></span><a href=\"#q-%E5%87%BA%E7%89%88%E3%81%99%E3%82%8B%E6%99%82%E3%81%AE%E5%BD%A2%E5%BC%8F%E3%81%AF\"><i class=\"fa fa-link\"></i></a>Q 出版する時の形式は？</h3>\n<p data-sourcepos=\"149:1-149:61\"><code>KDP ファイル形式</code> とかでググるとでてくる。</p>\n<ul data-sourcepos=\"152:1-159:0\">\n<li data-sourcepos=\"152:1-152:7\">HTML</li>\n<li data-sourcepos=\"153:1-153:7\">Word</li>\n<li data-sourcepos=\"154:1-154:6\">MOBI</li>\n<li data-sourcepos=\"155:1-155:6\">ePub</li>\n<li data-sourcepos=\"156:1-156:6\">PDF</li>\n<li data-sourcepos=\"157:1-157:24\">リッチテキスト</li>\n<li data-sourcepos=\"158:1-159:0\">プレーンテキスト</li>\n</ul>\n<p data-sourcepos=\"160:1-160:27\">今回私が試したのは</p>\n<ul data-sourcepos=\"162:1-164:0\">\n<li data-sourcepos=\"162:1-162:36\">PDF （固定長で作りたい）</li>\n<li data-sourcepos=\"163:1-164:0\">ePub（ユーザーの設定で文字のサイズを調整できる）</li>\n</ul>\n<p data-sourcepos=\"165:1-165:18\">の二つです。</p>\n<h3 data-sourcepos=\"167:1-167:75\">\n<span id=\"q-markdownをまとめてくれる何かはどうすればいいの\" class=\"fragment\"></span><a href=\"#q-markdown%E3%82%92%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8B%E4%BD%95%E3%81%8B%E3%81%AF%E3%81%A9%E3%81%86%E3%81%99%E3%82%8C%E3%81%B0%E3%81%84%E3%81%84%E3%81%AE\"><i class=\"fa fa-link\"></i></a>Q. markdownをまとめてくれる何かはどうすればいいの？</h3>\n<p data-sourcepos=\"169:1-169:93\">以下のようなツールが便利でやり方の記事とかがたくさん出てくる。</p>\n<ol data-sourcepos=\"171:1-174:0\">\n<li data-sourcepos=\"171:1-171:50\"><a href=\"https://github.com/GitbookIO/gitbook\" rel=\"nofollow noopener\" target=\"_blank\">GitBook</a></li>\n<li data-sourcepos=\"172:1-172:32\"><a href=\"https://pandoc.org/\" rel=\"nofollow noopener\" target=\"_blank\">pandoc</a></li>\n<li data-sourcepos=\"173:1-174:0\"><a href=\"https://conv.denshochan.com/\" rel=\"nofollow noopener\" target=\"_blank\">でんでんコンバーターさん</a></li>\n</ol>\n<p data-sourcepos=\"175:1-175:391\">GitBookは少し古いバージョンがOSSとしてGitHubにホストされているので無料で使えて、PDFにもepubにも変換できた。ちょっと古いのでいろいろと困ってpandocに乗り換えたけど、普通に使いやすい。GitBookはOSS版じゃないWeb版に注力しているみたい by <a href=\"https://vuepress.vuejs.org/guide/#why-not\" rel=\"nofollow noopener\" target=\"_blank\">vuepress の why not?</a></p>\n<p data-sourcepos=\"177:1-177:141\">Vue.js使える人は、PDFとかepubとかじゃなくてドキュメント形式の管理したいならVuePressとかでいいと思う。</p>\n<p data-sourcepos=\"179:1-179:161\">pandocは <code>brew install</code> で使えるのでMacユーザーは一番使いやすいのではなかろうか。pdfもepub形式も使えるっぽいので便利。</p>\n<p data-sourcepos=\"181:1-181:102\">でんでんコンバーターさんもWebで使えるのでさくっと試したいときは便利。</p>\n<h3 data-sourcepos=\"183:1-183:43\">\n<span id=\"q-kdpは無料で公開できるの\" class=\"fragment\"></span><a href=\"#q-kdp%E3%81%AF%E7%84%A1%E6%96%99%E3%81%A7%E5%85%AC%E9%96%8B%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%AE\"><i class=\"fa fa-link\"></i></a>Q. KDPは無料で公開できるの？</h3>\n<p data-sourcepos=\"185:1-186:45\">ここ盲点だったのですが、技術書などの電子書籍は無料公開は基本的に駄目っぽいです。<br>\n90日に5日だけ無料公開できます。</p>\n<h3 data-sourcepos=\"188:1-188:28\">\n<span id=\"q-印税はいくら\" class=\"fragment\"></span><a href=\"#q-%E5%8D%B0%E7%A8%8E%E3%81%AF%E3%81%84%E3%81%8F%E3%82%89\"><i class=\"fa fa-link\"></i></a>Q. 印税はいくら？</h3>\n<ul data-sourcepos=\"190:1-192:0\">\n<li data-sourcepos=\"190:1-190:5\">35%</li>\n<li data-sourcepos=\"191:1-192:0\">70%</li>\n</ul>\n<p data-sourcepos=\"193:1-193:144\">の二種類が選べるのだけど、それぞれできることと、制約があったりするのでちゃんと調べたほうがいい。</p>\n<p data-sourcepos=\"195:1-195:297\">Amazon独占販売なら70%で売れるけど、同時にUnlimited（無限に読めるやつ）に登録されるっぽいから、1ページいくらと安い金額で読めてしまう的な議論がたくさんブログでささやかれています。どうぞ <a href=\"https://google.com\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://google.com</a> ご検索を</p>\n<h3 data-sourcepos=\"197:1-197:70\">\n<span id=\"q-登録してから公開までに何時間くらいかかる\" class=\"fragment\"></span><a href=\"#q-%E7%99%BB%E9%8C%B2%E3%81%97%E3%81%A6%E3%81%8B%E3%82%89%E5%85%AC%E9%96%8B%E3%81%BE%E3%81%A7%E3%81%AB%E4%BD%95%E6%99%82%E9%96%93%E3%81%8F%E3%82%89%E3%81%84%E3%81%8B%E3%81%8B%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Q. 登録してから公開までに何時間くらいかかる？</h3>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"199:1-203:3\"><div class=\"highlight\"><pre><code>Kindle ダイレクト・パブリッシングをご利用いただきありがとうございます。\n\nお客様の本『XxxxxxxXXX』が Kindle ストアで購入可能になり XXXXXXXX\n</code></pre></div></div>\n<p data-sourcepos=\"205:1-205:124\">的なメールが6時間後くらいに来ていたので、適宜確認が行われて公開されている印象です。</p>\n<h3 data-sourcepos=\"207:1-207:43\">\n<span id=\"q-何を出版したの売れた\" class=\"fragment\"></span><a href=\"#q-%E4%BD%95%E3%82%92%E5%87%BA%E7%89%88%E3%81%97%E3%81%9F%E3%81%AE%E5%A3%B2%E3%82%8C%E3%81%9F\"><i class=\"fa fa-link\"></i></a>Q. 何を出版したの？売れた？</h3>\n<p data-sourcepos=\"209:1-209:75\">秘密です！まだ見てませんが、売れてないと思います！</p>\n<p data-sourcepos=\"211:1-211:1\">.</p>\n","body":"# AmazonKDPに出版ときに必要な技術を書く・まとめる\n\n## とりあえずわかる人はこれだけみたらわかるものを置いておく\n\n最初 `GitBook` で作ってたので `node.js` ベースになってるけど、途中から `pandoc` という `brew install pandoc` でインストールできるもので、作り始めたので `package.json` とか作らなくても `makefile` を作ってで `make up` すると自動でビルドしてくれる感じにしてもいいと思う。\n\n動いたらいいので結構雑にスクリプト書いてます。\n\n```package.json\n{\n  \"scripts\": {\n    \"build\": \"touch publish/merged.md && rm publish/merged.md && node publish/build.js\",\n    \"epub\": \"npm run build && pandoc publish/merged.md -f markdown -t epub --self-contained -s  -o publish.epub -c assets/github.css --toc --toc-depth=2 --epub-cover-image=images/cover.png && open publish.epub\",\n    \"epub-free\": \"touch pub-1-free/merged.md && rm pub-1-free/merged.md && node pub-1-free/build.js && pandoc pub-1-free/merged.md -f markdown -t epub --self-contained -s  -o pub-1-free.epub -c assets/github.css --toc --toc-depth=2 --epub-cover-image=images/cover-free.png && open pub-1-free.epub\",\n    \"ls-highlight\": \"pandoc --list-highlight-languages\",\n    \"open\": \"open publish.epub\",\n    \"download\": \"npm run build && node publish/download.js && node publish/replace.js\"\n  },\n  \"devDependencies\": {\n    \"request\": \"^2.88.0\"\n  }\n}\n```\n\nmarkdownファイルをまとめてくれるやつ。 `.md` ファイルはただのテキストファイルなので、ファイルの内容を足していけば、ファイルを分けて管理できます。\n\n```build.js\n#!/usr/bin/env node\n\nconst fs = require('fs')\n\nconst path = './publish'\nlet mergedMdContent = ''\n\ntry {\n  fs.readdirSync(path).forEach(fileName => {\n    if (fileName.includes('.DS_Store')) return\n    if (!fileName.includes('.md')) return\n    mergedMdContent += fs.readFileSync(`${path}/${fileName}`, 'utf-8') + '\\n'\n  })\n\n  // pandocを実行するフォルダの階層にあわせる\n  mergedMdContent = mergedMdContent.replace(/\\.\\.\\/images/g, './images')\n\n  fs.writeFileSync('./publish/merged.md', mergedMdContent)\n  console.log(`merged!`)\n} catch (err) {\n  console.log(`Oh no, An error occurred! ${err.message}`)\n  process.exit(-1)\n}\n```\n\n最初、gyazoさんに画像をホストしていたので、途中でダウンロードした。スクショしたらすぐにマークダウンの画像リンクが作れるので、めっちゃ便利だった。画像のダウンロードを非同期処理なJavaScriptで書くのとても面倒なのですね… :sad:\n\n```download.js\n#!/usr/bin/env node\n\nconsole.log('Start: ')\n\nconst fs = require('fs')\nconst request = require('request')\n\nconst merged = fs.readFileSync('publish/merged.md', 'utf-8')\nconst re = /(https?|ftp)(:\\/\\/[-_.!~*\\'()a-zA-Z0-9;\\/?:\\@&=+\\$,%#]+.png)/gi\nlet urls = merged.match(re)\nif (!urls) return\nconsole.log(urls)\n\nfunction requestSiteData(urls) {\n  if (urls.length) {\n    const url = urls.shift()\n    const name = url.replace('https://i.gyazo.com/', '')\n    const imagePath = `images/${name}`\n\n    try {\n      fs.statSync(imagePath)\n      console.log(`Exists: ${imagePath}`)\n      return requestSiteData(urls)\n    } catch (e) {}\n    console.log(`Download: ${imagePath}`)\n\n    request({ method: 'GET', url: url, encoding: null }, function(\n      error,\n      response,\n      body\n    ) {\n      if (!error) {\n        fs.writeFileSync(imagePath, body, 'binary')\n      }\n\n      requestSiteData(urls)\n    })\n  } else {\n    // 再帰の終了\n    console.log('fin')\n  }\n}\n\nrequestSiteData(urls) //start requesting data\n```\n\ngyazoさんへのリンクをダウンロードしたフォルダに書き換えたやつ。\n\n```replace.js\n#!/usr/bin/env node\n\nconst fs = require('fs')\n\ntry {\n  fs.readdirSync('publish').forEach(fileName => {\n    if (!fileName.includes('.md')) return\n    console.log(fileName)\n    let content = fs.readFileSync(`publish/${fileName}`, 'utf-8')\n    content = content.replace(\n      /https:\\/\\/i.gyazo.com\\//g,\n      '/Users/yk/workspace/books/lets-sql/images/'\n    )\n    fs.writeFileSync(`publish/${fileName}`, content)\n  })\n\n  console.log(`fin!`)\n} catch (err) {\n  console.log(`!Error! ${err.message}`)\n  process.exit(-1)\n}\n\n```\n\nこんな感じのdir構成\n\n```\n$ tree -L 2 publish                                                                                                  (git)-[master]\npublish\n├── 4.md\n├── 5.md\n├── 6.md\n├── 7.md\n├── 8.md\n├── build.js\n├── download.js\n└── replace.js\n```\n\n\n## Q&A\n\n### Q 出版する時の形式は？\n\n`KDP ファイル形式` とかでググるとでてくる。\n\n\n- HTML \n- Word \n- MOBI\n- ePub\n- PDF \n- リッチテキスト \n- プレーンテキスト \n\n今回私が試したのは\n\n- PDF （固定長で作りたい）\n- ePub（ユーザーの設定で文字のサイズを調整できる）\n\nの二つです。\n\n### Q. markdownをまとめてくれる何かはどうすればいいの？\n\n以下のようなツールが便利でやり方の記事とかがたくさん出てくる。\n\n1. [GitBook](https://github.com/GitbookIO/gitbook)\n1. [pandoc](https://pandoc.org/)\n1. [でんでんコンバーターさん](https://conv.denshochan.com/)\n\nGitBookは少し古いバージョンがOSSとしてGitHubにホストされているので無料で使えて、PDFにもepubにも変換できた。ちょっと古いのでいろいろと困ってpandocに乗り換えたけど、普通に使いやすい。GitBookはOSS版じゃないWeb版に注力しているみたい by [vuepress の why not?](https://vuepress.vuejs.org/guide/#why-not)\n\nVue.js使える人は、PDFとかepubとかじゃなくてドキュメント形式の管理したいならVuePressとかでいいと思う。\n\npandocは `brew install` で使えるのでMacユーザーは一番使いやすいのではなかろうか。pdfもepub形式も使えるっぽいので便利。\n\nでんでんコンバーターさんもWebで使えるのでさくっと試したいときは便利。\n\n### Q. KDPは無料で公開できるの？\n\nここ盲点だったのですが、技術書などの電子書籍は無料公開は基本的に駄目っぽいです。\n90日に5日だけ無料公開できます。\n\n### Q. 印税はいくら？\n\n- 35%\n- 70%\n\nの二種類が選べるのだけど、それぞれできることと、制約があったりするのでちゃんと調べたほうがいい。\n\nAmazon独占販売なら70%で売れるけど、同時にUnlimited（無限に読めるやつ）に登録されるっぽいから、1ページいくらと安い金額で読めてしまう的な議論がたくさんブログでささやかれています。どうぞ https://google.com ご検索を\n\n### Q. 登録してから公開までに何時間くらいかかる？\n\n```\nKindle ダイレクト・パブリッシングをご利用いただきありがとうございます。\n\nお客様の本『XxxxxxxXXX』が Kindle ストアで購入可能になり XXXXXXXX\n```\n\n的なメールが6時間後くらいに来ていたので、適宜確認が行われて公開されている印象です。\n\n### Q. 何を出版したの？売れた？\n\n秘密です！まだ見てませんが、売れてないと思います！\n\n.\n","coediting":false,"comments_count":0,"created_at":"2020-02-04T14:52:57+09:00","group":null,"id":"eaeb4b62acad56aa3092","likes_count":7,"private":false,"reactions_count":0,"stocks_count":9,"tags":[{"name":"Markdown","versions":[]},{"name":"Pandoc","versions":[]},{"name":"電子書籍","versions":[]},{"name":"gitbook","versions":[]},{"name":"vuepress","versions":[]}],"title":"2020年初めて技術書をAmazonKDP(kindle)に出版したので必要な技術を軽くまとめる","updated_at":"2023-05-26T12:51:52+09:00","url":"https://qiita.com/ykhirao/items/eaeb4b62acad56aa3092","user":{"description":"Web Developer From 2016.\r\nPHP/Laravel && React/TypeScript/Node.js\r\n\r\n業務委託の依頼とかはWantedlyとかからでお願いします！","facebook_id":"","followees_count":39,"followers_count":102,"github_login_name":"ykhirao","id":"ykhirao","items_count":83,"linkedin_id":"","location":"Tokyo, Japan","name":"yk","organization":"","permanent_id":112929,"profile_image_url":"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/profile-images/1639030792","team_only":false,"twitter_screen_name":"ykhirao","website_url":"https://www.wantedly.com/id/ykhirao"},"page_views_count":null,"team_membership":null,"organization_url_name":null,"slide":false}},"path":"posts/eaeb4b62acad56aa3092"}
