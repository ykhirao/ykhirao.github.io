{"template":"__react_static_root__/src/components/QiitaPost","sharedHashesByProp":{},"data":{"post":{"rendered_body":"<h1 data-sourcepos=\"1:1-1:58\">\n<span id=\"openapi-swaggerで配列レスポンスを記述する\" class=\"fragment\"></span><a href=\"#openapi-swagger%E3%81%A7%E9%85%8D%E5%88%97%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9%E3%82%92%E8%A8%98%E8%BF%B0%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>OpenAPI (Swagger)で配列レスポンスを記述する</h1>\n<p data-sourcepos=\"3:1-3:42\">配列の書き方難しいですよね。</p>\n<h2 data-sourcepos=\"5:1-5:9\">\n<span id=\"結論\" class=\"fragment\"></span><a href=\"#%E7%B5%90%E8%AB%96\"><i class=\"fa fa-link\"></i></a>結論</h2>\n<div data-sourcepos=\"7:1-9:3\" class=\"note info\">\n<span class=\"fa fa-fw fa-check-circle\"></span><div>\n<p data-sourcepos=\"8:1-8:42\">items というキーワードが重要！</p>\n</div>\n</div>\n<div class=\"code-frame\" data-lang=\"yaml\" data-sourcepos=\"12:1-18:3\"><div class=\"highlight\"><pre><code><span class=\"na\">keywords</span><span class=\"pi\">:</span>\n  <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">array</span>\n  <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">最大10件のキーワードを指定できます</span>\n  <span class=\"na\">items</span><span class=\"pi\">:</span>\n    <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">string</span>\n</code></pre></div></div>\n<p data-sourcepos=\"20:1-20:54\">詳細はこのレポジトリに記載してます。</p>\n<p data-sourcepos=\"22:1-22:52\"><iframe id=\"qiita-embed-content__13c33bcb4168fe5ffd7113fe74b1d14a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__13c33bcb4168fe5ffd7113fe74b1d14a\" data-content=\"https%3A%2F%2Fgithub.com%2Fykhirao%2Fqiita%2Ftree%2Fmaster%2Fopenapi\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"24:1-24:15\">\n<span id=\"環境設定\" class=\"fragment\"></span><a href=\"#%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>環境設定</h2>\n<p data-sourcepos=\"27:1-27:76\">自分がOpenApiを記述するときの環境はnpmだけでやります。</p>\n<p data-sourcepos=\"30:1-30:36\">フォルダ構成はこんな感じ</p>\n<div class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"32:1-38:3\"><div class=\"highlight\"><pre><code><span class=\"go\">yk@yk openapi % tree\n</span><span class=\"c\">.\n</span><span class=\"go\">├── README.md\n├── openapi.yaml\n└── redoc-static.html\n</span></code></pre></div></div>\n<p data-sourcepos=\"40:1-40:92\">すぐに確認できるようにredocでドキュメント生成して確認してます。</p>\n<h2 data-sourcepos=\"44:1-44:18\">\n<span id=\"作業の流れ\" class=\"fragment\"></span><a href=\"#%E4%BD%9C%E6%A5%AD%E3%81%AE%E6%B5%81%E3%82%8C\"><i class=\"fa fa-link\"></i></a>作業の流れ</h2>\n<div class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"49:1-58:3\"><div class=\"highlight\"><pre><code><span class=\"gp\">#</span><span class=\"w\"> </span>openapi.yamlに記述する\n<span class=\"gp\">$</span><span class=\"w\"> </span>vim openapi.yaml\n<span class=\"go\">\n</span><span class=\"gp\">#</span><span class=\"w\"> </span>redocを生成しredoc-static.html を開く\n<span class=\"gp\">$</span><span class=\"w\"> </span>npx @redocly/cli build-docs openapi.yaml\n<span class=\"go\">\n</span><span class=\"gp\">#</span><span class=\"w\"> </span><span class=\"k\">for </span>mac. 生成と開くのを同時にするコマンド\n<span class=\"gp\">$</span><span class=\"w\"> </span>npx @redocly/cli build-docs openapi.yaml <span class=\"o\">&amp;&amp;</span> open redoc-static.html\n</code></pre></div></div>\n<h2 data-sourcepos=\"61:1-61:45\">\n<span id=\"オブジェクトな配列を返すとき\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AA%E9%85%8D%E5%88%97%E3%82%92%E8%BF%94%E3%81%99%E3%81%A8%E3%81%8D\"><i class=\"fa fa-link\"></i></a>オブジェクトな配列を返すとき</h2>\n<div class=\"code-frame\" data-lang=\"json\" data-sourcepos=\"63:1-73:3\"><div class=\"highlight\"><pre><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"ok\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"products\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"title\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"MacBook\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"url\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://example.com\"</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p data-sourcepos=\"75:1-75:62\">重要な部分だけ、productsという配列を返すとき</p>\n<div class=\"code-frame\" data-lang=\"yaml\" data-sourcepos=\"77:1-92:3\"><div class=\"highlight\"><pre><code><span class=\"na\">products</span><span class=\"pi\">:</span>\n  <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">array</span>\n  <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">最大10件返します</span>\n  <span class=\"na\">items</span><span class=\"pi\">:</span>\n    <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">object</span>\n    <span class=\"na\">properties</span><span class=\"pi\">:</span>\n      <span class=\"na\">title</span><span class=\"pi\">:</span>\n        <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">string</span>\n        <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">商品名</span>\n        <span class=\"na\">example</span><span class=\"pi\">:</span> <span class=\"s\">MacBook</span>\n      <span class=\"na\">url</span><span class=\"pi\">:</span>\n        <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">string</span>\n        <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">商品のURL</span>\n        <span class=\"na\">example</span><span class=\"pi\">:</span> <span class=\"s\">https://example.com</span>\n</code></pre></div></div>\n<p data-sourcepos=\"94:1-94:26\">redocだとこんな感じ</p>\n<p data-sourcepos=\"96:1-96:162\"><a href=\"https://camo.qiitausercontent.com/5c5dff2949e75263ced24c185c4809534eb99d07/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f34373133373530312d376637612d353632622d373536322d3461386264356139393565622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F47137501-7f7a-562b-7562-4a8bd5a995eb.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2a2adc6b789aa85204e73285b5f09967\" alt=\"スクリーンショット 2023-05-30 1.03.18.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/47137501-7f7a-562b-7562-4a8bd5a995eb.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F47137501-7f7a-562b-7562-4a8bd5a995eb.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d118848f1a381035f0079167903911ac 1x\" loading=\"lazy\"></a></p>\n<details>\n<summary>全文</summary>\n<div class=\"code-frame\" data-lang=\"yaml\" data-sourcepos=\"103:1-147:3\"><div class=\"highlight\"><pre><code><span class=\"na\">paths</span><span class=\"pi\">:</span>\n  <span class=\"s1\">'</span><span class=\"s\">/'</span><span class=\"err\">:</span>\n    <span class=\"na\">get</span><span class=\"pi\">:</span>\n      <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">キーワード指定1つ</span>\n      <span class=\"na\">operationId</span><span class=\"pi\">:</span> <span class=\"s\">Get by 1 KeyWord</span>\n      <span class=\"na\">requestBody</span><span class=\"pi\">:</span>\n        <span class=\"na\">content</span><span class=\"pi\">:</span>\n          <span class=\"na\">application/json</span><span class=\"pi\">:</span>\n            <span class=\"na\">schema</span><span class=\"pi\">:</span>\n              <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">object</span>\n              <span class=\"na\">required</span><span class=\"pi\">:</span>\n                <span class=\"pi\">-</span> <span class=\"s\">keyword</span>\n              <span class=\"na\">properties</span><span class=\"pi\">:</span>\n                <span class=\"na\">keyword</span><span class=\"pi\">:</span>\n                  <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">string</span>\n                  <span class=\"na\">example</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">パソコン'</span>\n                  <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">適当なキーワードを入力してください</span>\n      <span class=\"na\">responses</span><span class=\"pi\">:</span>\n        <span class=\"s1\">'</span><span class=\"s\">200'</span><span class=\"err\">:</span>\n          <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">Success</span>\n          <span class=\"na\">content</span><span class=\"pi\">:</span>\n            <span class=\"na\">application/json</span><span class=\"pi\">:</span>\n              <span class=\"na\">schema</span><span class=\"pi\">:</span>\n                <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">object</span>\n                <span class=\"na\">properties</span><span class=\"pi\">:</span>\n                  <span class=\"na\">ok</span><span class=\"pi\">:</span>\n                    <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">boolean</span>\n                    <span class=\"na\">example</span><span class=\"pi\">:</span> <span class=\"kc\">true</span>\n                    <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">ここは常にTrueを返します</span>\n                  <span class=\"na\">products</span><span class=\"pi\">:</span>\n                    <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">array</span>\n                    <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">最大10件返します</span>\n                    <span class=\"na\">items</span><span class=\"pi\">:</span>\n                      <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">object</span>\n                      <span class=\"na\">properties</span><span class=\"pi\">:</span>\n                        <span class=\"na\">title</span><span class=\"pi\">:</span>\n                          <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">string</span>\n                          <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">商品名</span>\n                          <span class=\"na\">example</span><span class=\"pi\">:</span> <span class=\"s\">MacBook</span>\n                        <span class=\"na\">url</span><span class=\"pi\">:</span>\n                          <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">string</span>\n                          <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">商品のURL</span>\n                          <span class=\"na\">example</span><span class=\"pi\">:</span> <span class=\"s\">https://example.com</span>\n</code></pre></div></div>\n</details>\n<h2 data-sourcepos=\"152:1-152:46\">\n<span id=\"ストリングな配列をpostするとき\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%83%88%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%AA%E9%85%8D%E5%88%97%E3%82%92post%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D\"><i class=\"fa fa-link\"></i></a>ストリングな配列をpostするとき</h2>\n<p data-sourcepos=\"154:1-154:43\">以下のようなbodyを送信する場合</p>\n<div class=\"code-frame\" data-lang=\"json\" data-sourcepos=\"156:1-164:3\"><div class=\"highlight\"><pre><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"keywords\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"パソコン\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"マウス\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"キーボード\"</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p data-sourcepos=\"166:1-166:98\">keywordsは <code>type: array</code> をうけてexampleを指定するとredocでいい感じになります</p>\n<div class=\"code-frame\" data-lang=\"yaml\" data-sourcepos=\"168:1-186:3\"><div class=\"highlight\"><pre><code><span class=\"na\">requestBody</span><span class=\"pi\">:</span>\n  <span class=\"na\">content</span><span class=\"pi\">:</span>\n    <span class=\"na\">application/json</span><span class=\"pi\">:</span>\n      <span class=\"na\">schema</span><span class=\"pi\">:</span>\n        <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">object</span>\n        <span class=\"na\">required</span><span class=\"pi\">:</span>\n          <span class=\"pi\">-</span> <span class=\"s\">keywords</span>\n        <span class=\"na\">properties</span><span class=\"pi\">:</span>\n          <span class=\"na\">keywords</span><span class=\"pi\">:</span>\n            <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">array</span>\n            <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">最大10件のキーワードを指定できます</span>\n            <span class=\"na\">items</span><span class=\"pi\">:</span>\n              <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">string</span>\n            <span class=\"na\">example</span><span class=\"pi\">:</span>\n              <span class=\"pi\">-</span> <span class=\"s\">パソコン</span>\n              <span class=\"pi\">-</span> <span class=\"s\">マウス</span>\n              <span class=\"pi\">-</span> <span class=\"s\">キーボード</span>\n</code></pre></div></div>\n<p data-sourcepos=\"189:1-189:162\"><a href=\"https://camo.qiitausercontent.com/cdedcb002a456596d5f19a4ab98042df39eedf4b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131323932392f38323037303534332d636237622d303363342d313638362d3237316530393135303865372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F82070543-cb7b-03c4-1686-271e091508e7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=c8305e6a00018dac151e98cc0f450fa5\" alt=\"スクリーンショット 2023-05-30 1.10.26.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/82070543-cb7b-03c4-1686-271e091508e7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F112929%2F82070543-cb7b-03c4-1686-271e091508e7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=a1c632ea9c0c5912508bc002ed4b33d5 1x\" loading=\"lazy\"></a></p>\n<details>\n<summary>全文</summary>\n<div class=\"code-frame\" data-lang=\"yaml\" data-sourcepos=\"196:1-244:3\"><div class=\"highlight\"><pre><code><span class=\"na\">paths</span><span class=\"pi\">:</span>\n  <span class=\"s1\">'</span><span class=\"s\">/items'</span><span class=\"err\">:</span>\n    <span class=\"na\">get</span><span class=\"pi\">:</span>\n      <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">キーワード指定複数</span>\n      <span class=\"na\">operationId</span><span class=\"pi\">:</span> <span class=\"s\">Get</span>\n      <span class=\"na\">requestBody</span><span class=\"pi\">:</span>\n        <span class=\"na\">content</span><span class=\"pi\">:</span>\n          <span class=\"na\">application/json</span><span class=\"pi\">:</span>\n            <span class=\"na\">schema</span><span class=\"pi\">:</span>\n              <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">object</span>\n              <span class=\"na\">required</span><span class=\"pi\">:</span>\n                <span class=\"pi\">-</span> <span class=\"s\">keywords</span>\n              <span class=\"na\">properties</span><span class=\"pi\">:</span>\n                <span class=\"na\">keywords</span><span class=\"pi\">:</span>\n                  <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">array</span>\n                  <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">最大10件のキーワードを指定できます</span>\n                  <span class=\"na\">example</span><span class=\"pi\">:</span>\n                    <span class=\"pi\">-</span> <span class=\"s\">パソコン</span>\n                    <span class=\"pi\">-</span> <span class=\"s\">マウス</span>\n                    <span class=\"pi\">-</span> <span class=\"s\">キーボード</span>\n      <span class=\"na\">responses</span><span class=\"pi\">:</span>\n        <span class=\"s1\">'</span><span class=\"s\">200'</span><span class=\"err\">:</span>\n          <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">Success</span>\n          <span class=\"na\">content</span><span class=\"pi\">:</span>\n            <span class=\"na\">application/json</span><span class=\"pi\">:</span>\n              <span class=\"na\">schema</span><span class=\"pi\">:</span>\n                <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">object</span>\n                <span class=\"na\">properties</span><span class=\"pi\">:</span>\n                  <span class=\"na\">ok</span><span class=\"pi\">:</span>\n                    <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">boolean</span>\n                    <span class=\"na\">example</span><span class=\"pi\">:</span> <span class=\"kc\">true</span>\n                    <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">ここは常にTrueを返します</span>\n                  <span class=\"na\">products</span><span class=\"pi\">:</span>\n                    <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">array</span>\n                    <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">最大10件返します</span>\n                    <span class=\"na\">items</span><span class=\"pi\">:</span>\n                      <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">object</span>\n                      <span class=\"na\">properties</span><span class=\"pi\">:</span>\n                        <span class=\"na\">title</span><span class=\"pi\">:</span>\n                          <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">string</span>\n                          <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">商品名</span>\n                          <span class=\"na\">example</span><span class=\"pi\">:</span> <span class=\"s\">MacBook</span>\n                        <span class=\"na\">url</span><span class=\"pi\">:</span>\n                          <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">string</span>\n                          <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">商品のURL</span>\n                          <span class=\"na\">example</span><span class=\"pi\">:</span> <span class=\"s\">https://example.com</span>\n\n</code></pre></div></div>\n</details>\n","body":"# OpenAPI (Swagger)で配列レスポンスを記述する\n\n配列の書き方難しいですよね。\n\n## 結論\n\n:::note info\nitems というキーワードが重要！\n:::\n\n\n```yaml\nkeywords:\n  type: array\n  description: 最大10件のキーワードを指定できます\n  items:\n    type: string\n```\n\n詳細はこのレポジトリに記載してます。\n\nhttps://github.com/ykhirao/qiita/tree/master/openapi\n\n## 環境設定\n\n\n自分がOpenApiを記述するときの環境はnpmだけでやります。\n\n\nフォルダ構成はこんな感じ\n\n```terminal\nyk@yk openapi % tree\n.\n├── README.md\n├── openapi.yaml\n└── redoc-static.html\n```\n\nすぐに確認できるようにredocでドキュメント生成して確認してます。\n\n\n\n## 作業の流れ\n\n\n\n\n```terminal\n# openapi.yamlに記述する\n$ vim openapi.yaml\n\n# redocを生成しredoc-static.html を開く\n$ npx @redocly/cli build-docs openapi.yaml\n\n# for mac. 生成と開くのを同時にするコマンド\n$ npx @redocly/cli build-docs openapi.yaml && open redoc-static.html\n```\n\n\n## オブジェクトな配列を返すとき\n\n```json\n{\n  \"ok\": true,\n  \"products\": [\n    {\n      \"title\": \"MacBook\",\n      \"url\": \"https://example.com\"\n    }\n  ]\n}\n```\n\n重要な部分だけ、productsという配列を返すとき\n\n```yaml\nproducts:\n  type: array\n  description: 最大10件返します\n  items:\n    type: object\n    properties:\n      title:\n        type: string\n        description: 商品名\n        example: MacBook\n      url:\n        type: string\n        description: 商品のURL\n        example: https://example.com\n```\n\nredocだとこんな感じ\n\n![スクリーンショット 2023-05-30 1.03.18.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/47137501-7f7a-562b-7562-4a8bd5a995eb.png)\n\n\n\n<details>\n<summary>全文</summary>\n\n```yaml\npaths:\n  '/':\n    get:\n      description: キーワード指定1つ\n      operationId: Get by 1 KeyWord\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - keyword\n              properties:\n                keyword:\n                  type: string\n                  example: 'パソコン'\n                  description: 適当なキーワードを入力してください\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  ok:\n                    type: boolean\n                    example: true\n                    description: ここは常にTrueを返します\n                  products:\n                    type: array\n                    description: 最大10件返します\n                    items:\n                      type: object\n                      properties:\n                        title:\n                          type: string\n                          description: 商品名\n                          example: MacBook\n                        url:\n                          type: string\n                          description: 商品のURL\n                          example: https://example.com\n```\n\n</details>\n\n\n## ストリングな配列をpostするとき\n\n以下のようなbodyを送信する場合\n\n```json\n{\n  \"keywords\": [\n    \"パソコン\",\n    \"マウス\",\n    \"キーボード\"\n  ]\n}\n```\n\nkeywordsは `type: array` をうけてexampleを指定するとredocでいい感じになります\n\n```yaml\nrequestBody:\n  content:\n    application/json:\n      schema:\n        type: object\n        required:\n          - keywords\n        properties:\n          keywords:\n            type: array\n            description: 最大10件のキーワードを指定できます\n            items:\n              type: string\n            example:\n              - パソコン\n              - マウス\n              - キーボード\n```\n\n\n![スクリーンショット 2023-05-30 1.10.26.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/82070543-cb7b-03c4-1686-271e091508e7.png)\n\n\n\n<details>\n<summary>全文</summary>\n\n```yaml\npaths:\n  '/items':\n    get:\n      description: キーワード指定複数\n      operationId: Get\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - keywords\n              properties:\n                keywords:\n                  type: array\n                  description: 最大10件のキーワードを指定できます\n                  example:\n                    - パソコン\n                    - マウス\n                    - キーボード\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  ok:\n                    type: boolean\n                    example: true\n                    description: ここは常にTrueを返します\n                  products:\n                    type: array\n                    description: 最大10件返します\n                    items:\n                      type: object\n                      properties:\n                        title:\n                          type: string\n                          description: 商品名\n                          example: MacBook\n                        url:\n                          type: string\n                          description: 商品のURL\n                          example: https://example.com\n\n```\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","coediting":false,"comments_count":0,"created_at":"2023-05-30T01:16:17+09:00","group":null,"id":"f6d2cd85aadfe3eb5189","likes_count":0,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"JavaScript","versions":[]},{"name":"swagger","versions":[]},{"name":"OpenAPI","versions":[]}],"title":"OpenAPI (Swagger)で配列レスポンスを記述する","updated_at":"2023-05-30T01:16:17+09:00","url":"https://qiita.com/ykhirao/items/f6d2cd85aadfe3eb5189","user":{"description":"Web Developer From 2016.\r\nPHP/Laravel && React/TypeScript/Node.js\r\n\r\n業務委託の依頼とかはWantedlyとかからでお願いします！","facebook_id":"","followees_count":38,"followers_count":99,"github_login_name":"ykhirao","id":"ykhirao","items_count":71,"linkedin_id":"","location":"Tokyo, Japan","name":"yk","organization":"","permanent_id":112929,"profile_image_url":"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/112929/profile-images/1639030792","team_only":false,"twitter_screen_name":"ykhirao","website_url":"https://www.wantedly.com/id/ykhirao"},"page_views_count":null,"team_membership":null,"organization_url_name":null,"slide":false}},"path":"posts/f6d2cd85aadfe3eb5189"}
